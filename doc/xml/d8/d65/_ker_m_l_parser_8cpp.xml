<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d8/d65/_ker_m_l_parser_8cpp" kind="file" language="C++">
    <compoundname>KerMLParser.cpp</compoundname>
    <includes refid="d8/d19/_ker_m_l_listener_8h" local="yes">KerMLListener.h</includes>
    <includes refid="d6/d37/_ker_m_l_parser_8h" local="yes">KerMLParser.h</includes>
    <incdepgraph>
      <node id="2">
        <label>KerMLListener.h</label>
        <link refid="d8/d19/_ker_m_l_listener_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>filehandling/src/kerml/KerMLParser.cpp</label>
        <link refid="d8/d65/_ker_m_l_parser_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>KerMLParser.h</label>
        <link refid="d6/d37/_ker_m_l_parser_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>antlr4-runtime.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d9/d3f/namespaceantlrcpp">antlrcpp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generated<sp/>from<sp/>KerML.g4<sp/>by<sp/>ANTLR<sp/>4.13.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KerMLListener.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KerMLParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">antlrcpp;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">antlr4;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">KerMLParserStaticData<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>KerMLParserStaticData(std::vector&lt;std::string&gt;<sp/>ruleNames,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>literalNames,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>symbolicNames)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ruleNames(std::move(ruleNames)),<sp/>literalNames(std::move(literalNames)),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolicNames(std::move(symbolicNames)),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vocabulary(this-&gt;literalNames,<sp/>this-&gt;symbolicNames)<sp/>{}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>KerMLParserStaticData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KerMLParserStaticData&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>KerMLParserStaticData(KerMLParserStaticData&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>KerMLParserStaticData&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KerMLParserStaticData&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>KerMLParserStaticData&amp;<sp/>operator=(KerMLParserStaticData&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::vector&lt;antlr4::dfa::DFA&gt;<sp/>decisionToDFA;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>antlr4::atn::PredictionContextCache<sp/>sharedContextCache;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>ruleNames;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>literalNames;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>symbolicNames;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>antlr4::dfa::Vocabulary<sp/>vocabulary;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>antlr4::atn::SerializedATNView<sp/>serializedATN;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;antlr4::atn::ATN&gt;<sp/>atn;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">::antlr4::internal::OnceFlag<sp/>kermlParserOnceFlag;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ANTLR4_USE_THREAD_LOCAL_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">thread_local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">std::unique_ptr&lt;KerMLParserStaticData&gt;<sp/>kermlParserStaticData<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>kermlParserInitialize()<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ANTLR4_USE_THREAD_LOCAL_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kermlParserStaticData<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>assert(kermlParserStaticData<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>staticData<sp/>=<sp/>std::make_unique&lt;KerMLParserStaticData&gt;(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;startRule&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elements&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;identification&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;relationship_body&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;relationship_onwed_elements&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;relationship_owned_element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_related_element&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dependency&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;annotation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_annotation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;annotating_element&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;comment&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;documentation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;textual_representation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;root_namespace&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;namespace&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;namespace_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;namespace_body&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;namespace_body_elements&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;namespace_body_element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;member_prefix&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;visibility_indicator&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;namespace_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;non_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;namespace_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alias_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;qualified_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;namespace_import&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;import_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;membership_import&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filter_package&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filter_package_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;non_feature_element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;additional_options&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type_prefix&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;specialization_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;conjugation_part&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type_relationship_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;disjoining_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unioning_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;intersecting_part&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;differencing_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_body&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_body_elements&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_body_element&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;specialization&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_specialization&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;specific_type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;general_type&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;conjunction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_conjugation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;disjoining&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_disjoining&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unioning&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;intersecting&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;differencing&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;owned_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;classifier&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;classifier_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;superclassing_part&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subclassification&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_subclassification&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_prefix&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_direction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_identification&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_relationship_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;chaining_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;inverting_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_featuring_part&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_specialization_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multiplicity_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_specilization&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;typings&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;typed_by&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;subsettings&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;subsets&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;references&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;redefinitions&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;redefines&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_typing&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_feature_typing&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;subsetting&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;owned_subsetting&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_reference_subsetting&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;redefinition&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;owned_redefinition&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_feature_chain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_chain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_feature_chaining&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_inverting&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_feature_inverting&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_featuring&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;owned_type_featuring&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;data_type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;structure&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;association&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;association_structure&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;connector&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;connector_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;binary_connector_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nary_connector_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;connector_end_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;connector_end&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;binding_connector&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;binding_connector_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;succession&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;succession_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;behavior&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;function_body&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;function_body_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;return_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;result_expression_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;predicate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;boolean_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;invariant&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_expression_reference_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;owned_expression_reference&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_expression_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_expressions&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;owned_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eased_owned_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;conditional_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;conditional_binary_operator_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;conditional_binary_operator&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;binary_operator_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;binary_operator&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unary_operator_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unary_operator&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;classification_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;classification&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;classification_test_operator&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cast_operator&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metaclassification_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;argument_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;argument&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;argument_value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;argument_expression_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;argument_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;argument_expression_value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_argument_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_argument&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;metadata_value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_reference&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadataclassification_test_operator&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;meta_cast_operator&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;extend_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_reference_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type_result_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;type_reference&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;reference_typing&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;primary_expressions&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;primary_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;primary_argument_value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;primary_argument&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;primary_argument_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;non_feature_chain_primary_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;non_feature_chain_primary_argument_value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;non_feature_chain_primary_argument&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;non_feature_chain_primary_argument_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bracket_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;index_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sequence_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sequence_expression_list&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sequence_operator_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sequence_expression_list_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_chain_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;collect_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;select_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;function_operation_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;body_argument_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;body_argument&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;body_argument_value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;body_expression_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;function_reference_argument_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;function_reference_argument&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;function_reference_arugment_value&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;function_reference_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;function_reference_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;function_reference&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_chain_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_feature_chain_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;base_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;null_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_reference_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_reference_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_reference&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_access_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;invocation_expression&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;internal_invocation_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;argument_list&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;positional_argument_list&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;named_argument_list&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;named_argument_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;named_argument&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;paramenter_redefinition&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;body_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;expression_body_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expression_body&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;literal_expression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;literal_boolean&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;boolean_value&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;literal_string&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;literal_integer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;literal_real&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;real_value&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;literal_infinity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;interaction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;item_flow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;succession_item_flow&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;item_flow_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;item_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;item_feature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;item_feature_specilization_part&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;item_flow_end_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;item_flow_end&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;item_flow_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;item_flow_feature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;item_flow_redefinition&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value_part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feature_value&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;feature_assignment&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multiplicity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multiplicity_subset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multiplicity_range&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;owned_multiplicity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;owned_multiplicity_range&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multiplicity_bounds&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;multiplicity_expression_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;internal_multiplicity_expression_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;metaclass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefix_metadata_annotation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefix_metadata_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;prefix_metadata_feature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_feature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_feature_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;metadata_body&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_body_element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata_body_feature_member&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;metadata_body_feature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;package&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;library_package&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;package_declaration&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;package_body&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;element_filter_member&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;meta_assignment&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;meta&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;about&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;abstract&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;alias&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;all&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;and&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;as&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;assoc&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;behavior&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;binding&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;bool&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;by&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;chains&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;class&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;classifier&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;comment&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;composite&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;conjugate&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;conjugates&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;conjugation&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;connector&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;datatype&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;default&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;dependency&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;derived&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;differences&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;disjoining&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;disjoint&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;doc&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;else&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;end&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;expr&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;false&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;feature&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;featured&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;featuring&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;filter&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;first&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;flow&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;for&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;from&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;function&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;hastype&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;if&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;intersects&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;implies&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;import&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;in&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;inout&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;interaction&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;inv&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;inverse&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;inverting&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;istype&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;language&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;member&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;metaclass&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;metadata&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;multiplicity&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;namespace&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;nonunique&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;not&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;null&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;of&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;or&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;ordered&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;out&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;package&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;potion&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;predicate&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;private&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;protected&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;public&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;readonly&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;redefines&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;redefinition&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;references&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;rep&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;return&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;specialization&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;specializes&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;step&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;struct&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;subclassifier&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;subset&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;subsets&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;subtype&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;succession&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;then&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;to&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;true&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;type&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;typed&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;typing&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;unions&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;xor&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;var&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;locale&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;standard&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;library&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;constant&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;/*&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;//*&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;*/&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;*&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;::&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;:&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;:&gt;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;::&gt;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;:&gt;&gt;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;~&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;(&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;)&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;{&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;}&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;[&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;]&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;,&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;@&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;#&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&amp;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;^&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;|&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;**&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;+&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;-&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;/&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;-&gt;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;.&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;..&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&lt;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&lt;=&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;=&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;:=&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;==&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;===&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;!=&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;!==&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;&gt;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&gt;=&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;\\u003F&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;\\u003F\\u003F&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;.\\u003F&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TYPED_BY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPECIALIZES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SUBSETS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;REFERENCES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;REDEFINES&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CONJUNGATES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ABOUT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ABSTRACT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ALIAS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ALL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_AND&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_AS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ASSOC&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_BEHAVIOR&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_BINDING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_BOOL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_BY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CHAINS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CLASS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CLASSIFIER&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_COMMENT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_COMPOSITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CONJUGATE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CONJUGATES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CONJUGATION&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CONNECTOR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DATATYPE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DEFAULT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DEPENDENCY&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DERIVED&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DIFFERENCES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DISJOINING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DISJOINT&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_DOC&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ELSE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_END&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_EXPR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FALSE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FEATURE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FEATURED&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FEATURING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FILTER&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FIRST&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FLOW&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FOR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FROM&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_FUNCTION&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_HASTYPE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_IF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_INTERSECTS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_IMPLIES&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_IMPORT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_IN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_INOUT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_INTERACTION&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_INV&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_INVERSE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_INVERTING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ISTYPE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_LANGUAGE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_MEMBER&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_METACLASS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_METADATA&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_MULTIPLICITY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_NAMESPACE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_NONUNIQUE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_NOT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_NULL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_OF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_OR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_ORDERED&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_OUT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_PACKAGE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_PORTION&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_PREDICATE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_PRIVATE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_PROTECTED&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_PUBLIC&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_READONLY&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_REDEFINES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_REDEFINITION&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_REFERENCES&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_REP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_RETURN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_SPECILIZATION&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_SPECIALIZES&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_STEP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_STRUCT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_SUBCLASSIFIER&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_SUBSET&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_SUBSETS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_SUBTYPE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_SUCCSESSION&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_THEN&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_TO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_TRUE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_TYPE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_TYPED&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_TYPING&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_UNIONS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_XOR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_VAR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_LOCALE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_STANDARD&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_LIBRARY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYWORD_CONSTANT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SINGLE_LINE_NOTE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MULTI_LINE_NOTE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;REGULAR_COMMENT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_COMMENT_BLOCK_START&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_NOTE_BLOCK_START&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_COMMENT_BLOCK_END&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_STATEMENT_DELIMITER&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_STAR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_NAMESPACE_SUBSET&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_TYPED_BY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_SPECIALIZES&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_REFERENCES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_REDEFINES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_CONJUNGATES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_ROUND_BRACKET_OPEN&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_ROUND_BRACKET_CLOSE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_CURLY_BRACKET_OPEN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_CURLY_BRACKET_CLOSE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_SQUARE_BRACKET_OPEN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_SQUARE_BRACKET_CLOSE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_COMMA&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_AT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_HASHTAG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_MOD&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_AND&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_UPPER&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_VERTICAL_LINE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_DOUBLE_STAR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_PLUS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_MINUS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_SLASH&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_ARROOW&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_DOT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_DDOT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_SMALLER&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_SMALLER_EQUAL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_ASSIGN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_DEF_ASSIGN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_EQUALS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_IFF_EQUALS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_NOT_EQUALS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_IFF_NOT_EQUALS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_GREATER&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_GREATER_EQUALS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_QUESTION&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_DQUESTION&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYMBOL_DOT_QUESTION&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NAME&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BASIC_NAME&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UNRESTRICTED_NAME&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DECIMAL_VALUE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EXPONENTIAL_VALUE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;STRING_VALUE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>serializedATNSegment[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>4,1,161,2084,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>7,140,2,141,7,141,2,142,7,142,2,143,7,143,2,144,7,144,2,145,7,145,2,146,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>7,146,2,147,7,147,2,148,7,148,2,149,7,149,2,150,7,150,2,151,7,151,2,152,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>7,152,2,153,7,153,2,154,7,154,2,155,7,155,2,156,7,156,2,157,7,157,2,158,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>7,158,2,159,7,159,2,160,7,160,2,161,7,161,2,162,7,162,2,163,7,163,2,164,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>7,164,2,165,7,165,2,166,7,166,2,167,7,167,2,168,7,168,2,169,7,169,2,170,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>7,170,2,171,7,171,2,172,7,172,2,173,7,173,2,174,7,174,2,175,7,175,2,176,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>7,176,2,177,7,177,2,178,7,178,2,179,7,179,2,180,7,180,2,181,7,181,2,182,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>7,182,2,183,7,183,2,184,7,184,2,185,7,185,2,186,7,186,2,187,7,187,2,188,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>7,188,2,189,7,189,2,190,7,190,2,191,7,191,2,192,7,192,2,193,7,193,2,194,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>7,194,2,195,7,195,2,196,7,196,2,197,7,197,2,198,7,198,2,199,7,199,2,200,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>7,200,2,201,7,201,2,202,7,202,2,203,7,203,2,204,7,204,2,205,7,205,2,206,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>7,206,2,207,7,207,2,208,7,208,2,209,7,209,2,210,7,210,2,211,7,211,2,212,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>7,212,2,213,7,213,2,214,7,214,2,215,7,215,2,216,7,216,2,217,7,217,2,218,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>7,218,2,219,7,219,2,220,7,220,2,221,7,221,2,222,7,222,2,223,7,223,2,224,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>7,224,2,225,7,225,2,226,7,226,2,227,7,227,2,228,7,228,2,229,7,229,2,230,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>7,230,2,231,7,231,2,232,7,232,2,233,7,233,2,234,7,234,2,235,7,235,2,236,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>7,236,2,237,7,237,2,238,7,238,2,239,7,239,2,240,7,240,2,241,7,241,2,242,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>7,242,2,243,7,243,2,244,7,244,2,245,7,245,2,246,7,246,2,247,7,247,2,248,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>7,248,2,249,7,249,2,250,7,250,2,251,7,251,2,252,7,252,2,253,7,253,2,254,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>7,254,2,255,7,255,2,256,7,256,2,257,7,257,1,0,1,0,1,0,1,1,1,1,1,2,5,2,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>523,8,2,10,2,12,2,526,9,2,1,3,1,3,1,3,3,3,531,8,3,1,3,3,3,534,8,3,3,3,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>536,8,3,1,4,1,4,1,4,1,4,1,4,3,4,543,8,4,1,5,5,5,546,8,5,10,5,12,5,549,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>9,5,1,6,1,6,3,6,553,8,6,1,7,1,7,3,7,557,8,7,1,8,5,8,560,8,8,10,8,12,8,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>563,9,8,1,8,1,8,1,8,1,8,3,8,569,8,8,1,8,1,8,1,8,5,8,574,8,8,10,8,12,8,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>577,9,8,1,8,1,8,1,8,1,8,5,8,583,8,8,10,8,12,8,586,9,8,1,8,1,8,1,9,1,9,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>1,10,1,10,1,11,1,11,1,11,1,11,3,11,598,8,11,1,12,1,12,1,12,1,12,1,12,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>1,12,5,12,606,8,12,10,12,12,12,609,9,12,3,12,611,8,12,3,12,613,8,12,1,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>12,1,12,3,12,617,8,12,1,12,1,12,1,13,1,13,1,13,1,13,3,13,625,8,13,1,13,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>1,13,1,14,1,14,3,14,631,8,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,5,16,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>640,8,16,10,16,12,16,643,9,16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>1,18,1,18,1,18,3,18,656,8,18,1,19,1,19,1,20,1,20,1,20,3,20,663,8,20,1,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>21,3,21,666,8,21,1,22,1,22,1,23,1,23,3,23,672,8,23,1,24,1,24,1,24,1,25,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>1,25,1,25,1,26,1,26,1,26,1,26,1,26,3,26,685,8,26,1,26,3,26,688,8,26,1,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>26,1,26,1,26,1,26,1,27,1,27,1,27,5,27,697,8,27,10,27,12,27,700,9,27,1,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>28,3,28,703,8,28,1,28,1,28,3,28,707,8,28,1,28,1,28,3,28,711,8,28,1,29,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>1,29,3,29,715,8,29,1,30,1,30,3,30,719,8,30,1,30,3,30,722,8,30,1,31,1,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,3,33,735,8,33,1,34,1,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,34,764,8,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,776,8,35,1,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,3,38,786,8,38,1,38,5,38,789,8,38,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>10,38,12,38,792,9,38,1,39,3,39,795,8,39,1,39,1,39,3,39,799,8,39,1,39,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>1,39,4,39,803,8,39,11,39,12,39,804,1,39,5,39,808,8,39,10,39,12,39,811,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>9,39,1,40,1,40,1,40,1,40,5,40,817,8,40,10,40,12,40,820,9,40,1,41,1,41,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>1,41,1,42,1,42,1,42,1,42,3,42,829,8,42,1,43,1,43,1,43,1,43,1,43,5,43,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>836,8,43,10,43,12,43,839,9,43,1,44,1,44,1,44,1,44,5,44,845,8,44,10,44,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>12,44,848,9,44,1,45,1,45,1,45,1,45,5,45,854,8,45,10,45,12,45,857,9,45,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>1,46,1,46,1,46,1,46,5,46,863,8,46,10,46,12,46,866,9,46,1,47,1,47,1,47,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>1,47,1,47,3,47,873,8,47,1,48,5,48,876,8,48,10,48,12,48,879,9,48,1,49,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>1,49,1,50,1,50,3,50,885,8,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>1,52,1,52,3,52,897,8,52,1,53,1,53,3,53,901,8,53,1,54,1,54,3,54,905,8,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>54,1,54,1,54,1,54,3,54,910,8,54,1,54,1,54,1,54,3,54,915,8,54,1,54,1,54,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>1,55,1,55,3,55,921,8,55,1,56,1,56,3,56,925,8,56,1,56,1,56,1,56,3,56,930,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>8,56,1,56,1,56,1,56,3,56,935,8,56,1,56,1,56,1,57,1,57,3,57,941,8,57,1,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>58,1,58,3,58,945,8,58,1,59,1,59,3,59,949,8,59,1,60,1,60,3,60,953,8,60,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>1,61,1,61,3,61,957,8,61,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,64,3,64,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>967,8,64,1,64,1,64,1,64,1,64,1,65,3,65,974,8,65,1,65,1,65,3,65,978,8,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>65,1,65,1,65,3,65,982,8,65,1,65,5,65,985,8,65,10,65,12,65,988,9,65,1,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>66,1,66,1,66,1,66,5,66,994,8,66,10,66,12,66,997,9,66,1,67,1,67,3,67,1001,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>8,67,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,69,3,69,1012,8,69,1,69,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>1,69,1,69,1,69,3,69,1018,8,69,1,69,3,69,1021,8,69,1,69,3,69,1024,8,69,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>1,69,3,69,1027,8,69,1,69,1,69,1,70,3,70,1032,8,70,1,70,3,70,1035,8,70,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>1,70,3,70,1038,8,70,1,70,3,70,1041,8,70,1,70,3,70,1044,8,70,1,70,3,70,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>1047,8,70,1,70,5,70,1050,8,70,10,70,12,70,1053,9,70,1,71,1,71,1,72,3,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>72,1058,8,72,1,72,1,72,1,72,3,72,1063,8,72,1,72,1,72,3,72,1067,8,72,1,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>72,5,72,1070,8,72,10,72,12,72,1073,9,72,1,72,3,72,1076,8,72,1,73,1,73,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>1,73,1,73,3,73,1082,8,73,1,73,3,73,1085,8,73,1,74,1,74,1,74,1,74,3,74,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>1091,8,74,1,75,1,75,1,75,3,75,1096,8,75,1,76,1,76,1,76,1,76,1,77,1,77,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>1,77,1,77,1,77,5,77,1107,8,77,10,77,12,77,1110,9,77,1,78,4,78,1113,8,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>78,11,78,12,78,1114,1,78,3,78,1118,8,78,1,78,5,78,1121,8,78,10,78,12,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>78,1124,9,78,1,78,1,78,4,78,1128,8,78,11,78,12,78,1129,3,78,1132,8,78,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>1,79,1,79,1,79,3,79,1137,8,79,3,79,1139,8,79,1,79,3,79,1142,8,79,1,79,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>3,79,1145,8,79,3,79,1147,8,79,1,80,1,80,1,80,1,80,3,80,1153,8,80,1,81,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>1,81,1,81,5,81,1158,8,81,10,81,12,81,1161,9,81,1,82,1,82,1,82,1,83,1,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>83,3,83,1168,8,83,1,83,1,83,5,83,1172,8,83,10,83,12,83,1175,9,83,1,84,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,86,3,86,1186,8,86,1,87,3,87,1189,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>8,87,1,87,1,87,1,87,1,88,1,88,3,88,1196,8,88,1,88,3,88,1199,8,88,1,88,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>1,88,1,88,1,88,3,88,1205,8,88,1,88,1,88,1,89,1,89,1,90,1,90,3,90,1213,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>8,90,1,90,3,90,1216,8,90,1,90,1,90,1,90,1,90,3,90,1222,8,90,1,90,1,90,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>1,91,1,91,1,92,1,92,1,93,3,93,1231,8,93,1,93,1,93,3,93,1235,8,93,1,93,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>1,93,3,93,1239,8,93,1,93,1,93,1,93,3,93,1244,8,93,1,93,3,93,1247,8,93,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>1,93,3,93,1250,8,93,1,93,3,93,1253,8,93,1,93,1,93,1,94,1,94,1,95,1,95,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>1,96,1,96,1,96,5,96,1264,8,96,10,96,12,96,1267,9,96,1,97,1,97,1,98,1,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>98,3,98,1273,8,98,1,98,1,98,1,98,3,98,1278,8,98,1,98,1,98,1,98,3,98,1283,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>8,98,1,98,1,98,1,99,1,99,3,99,1289,8,99,1,100,1,100,1,100,1,100,3,100,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>1295,8,100,1,100,1,100,1,100,1,100,1,100,1,101,1,101,1,102,1,102,1,102,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>1,102,1,102,1,103,1,103,1,103,1,103,1,103,1,104,3,104,1315,8,104,1,104,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>1,104,1,104,1,104,1,105,1,105,1,105,1,105,1,105,1,106,1,106,1,106,1,106,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>1,106,1,106,1,107,3,107,1333,8,107,1,107,1,107,1,107,1,107,1,108,1,108,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>1,108,3,108,1342,8,108,1,109,3,109,1345,8,109,1,109,1,109,1,109,1,109,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>1,109,1,110,1,110,1,110,1,110,1,110,1,110,5,110,1358,8,110,10,110,12,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>110,1361,9,110,1,110,1,110,1,111,1,111,1,112,1,112,3,112,1369,8,112,1,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>112,3,112,1372,8,112,1,112,1,112,1,113,1,113,1,113,1,113,1,113,1,114,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>1,114,1,114,1,114,1,114,1,114,3,114,1387,8,114,1,114,3,114,1390,8,114,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>1,114,3,114,1393,8,114,1,114,1,114,1,114,1,114,3,114,1399,8,114,3,114,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>1401,8,114,1,115,1,115,1,115,1,115,1,115,1,116,1,116,1,116,1,116,1,116,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>1,116,3,116,1414,8,116,1,116,3,116,1417,8,116,1,116,3,116,1420,8,116,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>1,116,1,116,1,116,1,116,3,116,1426,8,116,3,116,1428,8,116,1,117,1,117,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>1,117,1,117,1,117,1,118,1,118,1,118,1,118,3,118,1439,8,118,1,118,1,118,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>1,119,1,119,1,119,1,119,1,119,1,120,1,120,1,120,1,120,1,120,3,120,1453,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>8,120,1,121,1,121,4,121,1457,8,121,11,121,12,121,1458,1,121,3,121,1462,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>8,121,1,122,1,122,1,122,1,122,1,123,1,123,1,123,1,124,1,124,1,124,1,124,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>3,124,1475,8,124,1,124,1,124,1,125,1,125,1,125,1,125,1,125,1,126,1,126,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>1,126,1,126,3,126,1488,8,126,1,126,1,126,1,127,1,127,1,127,3,127,1495,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>8,127,1,127,1,127,3,127,1499,8,127,1,127,1,127,1,128,1,128,1,129,1,129,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>1,130,1,130,1,131,4,131,1510,8,131,11,131,12,131,1511,1,132,1,132,1,132,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>1,132,1,132,1,132,1,132,1,132,3,132,1522,8,132,1,133,1,133,1,133,1,133,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>3,133,1528,8,133,1,134,1,134,1,134,1,134,1,134,1,134,1,134,1,135,1,135,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>1,135,1,135,1,136,1,136,1,137,1,137,1,137,1,137,1,138,1,138,1,139,1,139,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>1,139,1,140,1,140,1,141,3,141,1555,8,141,1,141,1,141,1,141,1,141,1,141,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>1,141,3,141,1563,8,141,1,142,3,142,1566,8,142,1,142,1,142,1,142,1,142,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>1,142,1,142,3,142,1574,8,142,1,143,1,143,1,144,1,144,1,145,1,145,1,145,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>1,145,1,145,1,145,1,145,3,145,1587,8,145,1,146,1,146,1,147,1,147,1,148,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>1,148,1,149,1,149,1,150,1,150,1,151,1,151,1,152,1,152,1,153,1,153,1,154,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>1,154,1,155,1,155,1,156,1,156,1,157,1,157,1,158,1,158,1,158,1,159,1,159,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>1,160,1,160,1,161,1,161,1,162,1,162,1,163,4,163,1625,8,163,11,163,12,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>163,1626,1,164,1,164,3,164,1631,8,164,1,165,1,165,1,166,1,166,1,167,1,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>167,1,168,1,168,1,168,1,168,1,168,1,168,1,168,3,168,1646,8,168,1,169,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>1,169,1,170,1,170,1,171,1,171,1,172,1,172,1,172,1,172,1,173,1,173,1,173,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>1,173,1,173,1,174,1,174,1,174,1,174,1,175,1,175,3,175,1669,8,175,1,175,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>3,175,1672,8,175,1,176,1,176,1,176,1,176,1,177,1,177,1,178,1,178,1,178,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>1,179,1,179,1,179,1,180,1,180,1,180,1,181,1,181,1,181,1,181,1,181,3,181,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>1694,8,181,1,182,1,182,1,183,1,183,1,184,1,184,1,185,1,185,1,186,1,186,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>1,187,1,187,1,188,1,188,1,189,1,189,1,190,1,190,1,191,1,191,1,192,1,192,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>3,192,1718,8,192,1,193,1,193,1,194,1,194,1,194,1,194,1,194,1,194,3,194,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>1728,8,194,1,195,1,195,1,195,3,195,1733,8,195,1,196,1,196,1,197,1,197,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>1,198,1,198,1,199,1,199,1,199,1,199,1,200,1,200,1,201,1,201,3,201,1749,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>8,201,1,201,1,201,1,202,1,202,1,202,1,202,1,202,3,202,1758,8,202,1,202,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>1,202,1,203,1,203,1,203,5,203,1765,8,203,10,203,12,203,1768,9,203,1,204,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>1,204,1,204,5,204,1773,8,204,10,204,12,204,1776,9,204,1,205,1,205,1,206,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>1,206,1,206,1,206,1,207,1,207,1,208,1,208,1,209,1,209,1,210,1,210,1,210,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>1,210,1,211,1,211,1,211,1,211,1,211,1,211,3,211,1800,8,211,1,212,1,212,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>1,213,1,213,1,214,1,214,1,215,1,215,1,216,1,216,1,217,3,217,1813,8,217,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>1,217,1,217,1,217,3,217,1818,8,217,1,218,1,218,1,219,1,219,1,219,1,219,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>1,219,1,220,1,220,1,220,1,220,1,220,1,221,1,221,1,221,1,221,1,221,1,221,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>1,222,1,222,3,222,1840,8,222,1,222,1,222,3,222,1844,8,222,1,222,1,222,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>1,222,1,222,1,222,3,222,1851,8,222,1,222,3,222,1854,8,222,1,222,1,222,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>1,222,1,222,3,222,1860,8,222,1,223,1,223,1,224,1,224,1,224,3,224,1867,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>8,224,1,224,1,224,3,224,1871,8,224,1,224,1,224,3,224,1875,8,224,3,224,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>1877,8,224,1,225,5,225,1880,8,225,10,225,12,225,1883,9,225,1,225,1,225,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>3,225,1887,8,225,1,226,1,226,1,227,1,227,1,227,3,227,1894,8,227,1,227,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>1,227,1,228,1,228,1,229,1,229,1,230,1,230,1,231,1,231,1,232,1,232,1,232,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>1,232,3,232,1910,8,232,3,232,1912,8,232,1,232,1,232,1,233,1,233,1,233,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>1,234,1,234,3,234,1921,8,234,1,235,1,235,1,235,1,235,1,235,1,236,1,236,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>1,236,1,236,1,236,1,237,1,237,1,238,1,238,1,239,1,239,1,239,1,239,3,239,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>1941,8,239,1,239,1,239,1,239,1,240,1,240,1,241,1,241,3,241,1950,8,241,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>1,242,3,242,1953,8,242,1,242,1,242,1,242,3,242,1958,8,242,1,242,3,242,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>1961,8,242,1,242,1,242,3,242,1965,8,242,1,242,1,242,1,243,1,243,1,243,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>1,244,1,244,1,244,1,245,1,245,1,246,5,246,1978,8,246,10,246,12,246,1981,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>9,246,1,246,1,246,1,246,1,246,1,246,1,246,1,246,1,247,1,247,1,247,1,247,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>3,247,1994,8,247,3,247,1996,8,247,1,247,1,247,1,248,1,248,1,248,5,248,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>2003,8,248,10,248,12,248,2006,9,248,1,248,3,248,2009,8,248,1,249,1,249,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>1,249,1,249,3,249,2015,8,249,1,250,1,250,1,251,3,251,2020,8,251,1,251,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>3,251,2023,8,251,1,251,1,251,3,251,2027,8,251,1,251,3,251,2030,8,251,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>1,251,1,251,1,252,5,252,2035,8,252,10,252,12,252,2038,9,252,1,252,1,252,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>1,252,1,253,3,253,2044,8,253,1,253,1,253,5,253,2048,8,253,10,253,12,253,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>2051,9,253,1,253,1,253,1,253,1,254,1,254,1,254,1,255,1,255,1,255,1,255,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>1,255,4,255,2064,8,255,11,255,12,255,2065,1,255,1,255,3,255,2070,8,255,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>1,256,1,256,1,256,1,256,1,256,1,257,1,257,1,257,1,257,1,257,1,257,1,257,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>1,257,0,0,258,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>232,234,236,238,240,242,244,246,248,250,252,254,256,258,260,262,264,266,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>268,270,272,274,276,278,280,282,284,286,288,290,292,294,296,298,300,302,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>304,306,308,310,312,314,316,318,320,322,324,326,328,330,332,334,336,338,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>340,342,344,346,348,350,352,354,356,358,360,362,364,366,368,370,372,374,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>376,378,380,382,384,386,388,390,392,394,396,398,400,402,404,406,408,410,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>412,414,416,418,420,422,424,426,428,430,432,434,436,438,440,442,444,446,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>448,450,452,454,456,458,460,462,464,466,468,470,472,474,476,478,480,482,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>484,486,488,490,492,494,496,498,500,502,504,506,508,510,512,514,0,13,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,77,79,2,0,115,115,135,135,3,0,23,23,75,75,103,103,2,0,54,55,73,73,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>2,0,39,39,97,97,4,0,12,12,52,52,71,71,153,153,5,0,102,102,115,115,131,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>138,141,143,146,151,3,0,68,68,121,121,136,137,3,0,49,49,60,60,129,129,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,158,159,1,0,145,146,2,0,64,64,129,129,2,0,81,81,120,120,2118,0,516,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,2,519,1,0,0,0,4,524,1,0,0,0,6,535,1,0,0,0,8,542,1,0,0,0,10,547,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,12,552,1,0,0,0,14,556,1,0,0,0,16,561,1,0,0,0,18,589,1,0,0,0,20,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>591,1,0,0,0,22,597,1,0,0,0,24,612,1,0,0,0,26,620,1,0,0,0,28,630,1,0,0,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>0,30,636,1,0,0,0,32,641,1,0,0,0,34,647,1,0,0,0,36,655,1,0,0,0,38,657,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,40,662,1,0,0,0,42,665,1,0,0,0,44,667,1,0,0,0,46,671,1,0,0,0,48,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>673,1,0,0,0,50,676,1,0,0,0,52,679,1,0,0,0,54,693,1,0,0,0,56,702,1,0,0,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>0,58,714,1,0,0,0,60,716,1,0,0,0,62,723,1,0,0,0,64,726,1,0,0,0,66,734,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,68,763,1,0,0,0,70,775,1,0,0,0,72,777,1,0,0,0,74,779,1,0,0,0,76,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>785,1,0,0,0,78,794,1,0,0,0,80,812,1,0,0,0,82,821,1,0,0,0,84,828,1,0,0,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>0,86,830,1,0,0,0,88,840,1,0,0,0,90,849,1,0,0,0,92,858,1,0,0,0,94,872,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,96,877,1,0,0,0,98,880,1,0,0,0,100,884,1,0,0,0,102,892,1,0,0,0,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>104,896,1,0,0,0,106,900,1,0,0,0,108,904,1,0,0,0,110,920,1,0,0,0,112,924,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,114,940,1,0,0,0,116,944,1,0,0,0,118,948,1,0,0,0,120,952,1,0,0,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>0,122,956,1,0,0,0,124,958,1,0,0,0,126,962,1,0,0,0,128,966,1,0,0,0,130,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>973,1,0,0,0,132,989,1,0,0,0,134,1000,1,0,0,0,136,1008,1,0,0,0,138,1011,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,140,1031,1,0,0,0,142,1054,1,0,0,0,144,1057,1,0,0,0,146,1084,1,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,148,1090,1,0,0,0,150,1092,1,0,0,0,152,1097,1,0,0,0,154,1101,1,0,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,156,1131,1,0,0,0,158,1133,1,0,0,0,160,1152,1,0,0,0,162,1154,1,0,0,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>0,164,1162,1,0,0,0,166,1165,1,0,0,0,168,1176,1,0,0,0,170,1179,1,0,0,0,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>172,1182,1,0,0,0,174,1188,1,0,0,0,176,1195,1,0,0,0,178,1208,1,0,0,0,180,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>1212,1,0,0,0,182,1225,1,0,0,0,184,1227,1,0,0,0,186,1230,1,0,0,0,188,1256,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,190,1258,1,0,0,0,192,1260,1,0,0,0,194,1268,1,0,0,0,196,1272,1,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,198,1288,1,0,0,0,200,1290,1,0,0,0,202,1301,1,0,0,0,204,1303,1,0,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,206,1308,1,0,0,0,208,1314,1,0,0,0,210,1320,1,0,0,0,212,1325,1,0,0,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>0,214,1332,1,0,0,0,216,1338,1,0,0,0,218,1344,1,0,0,0,220,1351,1,0,0,0,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>222,1364,1,0,0,0,224,1368,1,0,0,0,226,1375,1,0,0,0,228,1400,1,0,0,0,230,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>1402,1,0,0,0,232,1427,1,0,0,0,234,1429,1,0,0,0,236,1434,1,0,0,0,238,1442,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,240,1452,1,0,0,0,242,1456,1,0,0,0,244,1463,1,0,0,0,246,1467,1,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,248,1470,1,0,0,0,250,1478,1,0,0,0,252,1483,1,0,0,0,254,1491,1,0,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,256,1502,1,0,0,0,258,1504,1,0,0,0,260,1506,1,0,0,0,262,1509,1,0,0,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>0,264,1521,1,0,0,0,266,1527,1,0,0,0,268,1529,1,0,0,0,270,1536,1,0,0,0,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>272,1540,1,0,0,0,274,1542,1,0,0,0,276,1546,1,0,0,0,278,1548,1,0,0,0,280,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>1551,1,0,0,0,282,1554,1,0,0,0,284,1573,1,0,0,0,286,1575,1,0,0,0,288,1577,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,290,1586,1,0,0,0,292,1588,1,0,0,0,294,1590,1,0,0,0,296,1592,1,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,298,1594,1,0,0,0,300,1596,1,0,0,0,302,1598,1,0,0,0,304,1600,1,0,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,306,1602,1,0,0,0,308,1604,1,0,0,0,310,1606,1,0,0,0,312,1608,1,0,0,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>0,314,1610,1,0,0,0,316,1612,1,0,0,0,318,1615,1,0,0,0,320,1617,1,0,0,0,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>322,1619,1,0,0,0,324,1621,1,0,0,0,326,1624,1,0,0,0,328,1630,1,0,0,0,330,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>1632,1,0,0,0,332,1634,1,0,0,0,334,1636,1,0,0,0,336,1645,1,0,0,0,338,1647,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,340,1649,1,0,0,0,342,1651,1,0,0,0,344,1653,1,0,0,0,346,1657,1,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,348,1662,1,0,0,0,350,1671,1,0,0,0,352,1673,1,0,0,0,354,1677,1,0,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,356,1679,1,0,0,0,358,1682,1,0,0,0,360,1685,1,0,0,0,362,1688,1,0,0,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>0,364,1695,1,0,0,0,366,1697,1,0,0,0,368,1699,1,0,0,0,370,1701,1,0,0,0,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>372,1703,1,0,0,0,374,1705,1,0,0,0,376,1707,1,0,0,0,378,1709,1,0,0,0,380,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>1711,1,0,0,0,382,1713,1,0,0,0,384,1717,1,0,0,0,386,1719,1,0,0,0,388,1727,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,390,1732,1,0,0,0,392,1734,1,0,0,0,394,1736,1,0,0,0,396,1738,1,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,398,1740,1,0,0,0,400,1744,1,0,0,0,402,1748,1,0,0,0,404,1752,1,0,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,406,1761,1,0,0,0,408,1769,1,0,0,0,410,1777,1,0,0,0,412,1779,1,0,0,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>0,414,1783,1,0,0,0,416,1785,1,0,0,0,418,1787,1,0,0,0,420,1789,1,0,0,0,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>422,1799,1,0,0,0,424,1801,1,0,0,0,426,1803,1,0,0,0,428,1805,1,0,0,0,430,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>1807,1,0,0,0,432,1809,1,0,0,0,434,1817,1,0,0,0,436,1819,1,0,0,0,438,1821,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,440,1826,1,0,0,0,442,1831,1,0,0,0,444,1859,1,0,0,0,446,1861,1,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,448,1876,1,0,0,0,450,1881,1,0,0,0,452,1888,1,0,0,0,454,1893,1,0,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,456,1897,1,0,0,0,458,1899,1,0,0,0,460,1901,1,0,0,0,462,1903,1,0,0,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>0,464,1911,1,0,0,0,466,1915,1,0,0,0,468,1920,1,0,0,0,470,1922,1,0,0,0,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>472,1927,1,0,0,0,474,1932,1,0,0,0,476,1934,1,0,0,0,478,1936,1,0,0,0,480,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>1945,1,0,0,0,482,1949,1,0,0,0,484,1952,1,0,0,0,486,1968,1,0,0,0,488,1971,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,490,1974,1,0,0,0,492,1979,1,0,0,0,494,1995,1,0,0,0,496,2008,1,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,498,2014,1,0,0,0,500,2016,1,0,0,0,502,2019,1,0,0,0,504,2036,1,0,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,506,2043,1,0,0,0,508,2055,1,0,0,0,510,2069,1,0,0,0,512,2071,1,0,0,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>0,514,2076,1,0,0,0,516,517,3,4,2,0,517,518,5,0,0,1,518,1,1,0,0,0,519,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>520,3,0,0,0,520,3,1,0,0,0,521,523,3,66,33,0,522,521,1,0,0,0,523,526,1,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,524,522,1,0,0,0,524,525,1,0,0,0,525,5,1,0,0,0,526,524,1,0,0,0,527,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>528,5,142,0,0,528,529,5,155,0,0,529,531,5,150,0,0,530,527,1,0,0,0,530,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>531,1,0,0,0,531,536,1,0,0,0,532,534,5,155,0,0,533,532,1,0,0,0,533,534,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,534,536,1,0,0,0,535,530,1,0,0,0,535,533,1,0,0,0,536,7,1,0,0,0,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>537,543,5,114,0,0,538,539,5,124,0,0,539,540,3,10,5,0,540,541,5,125,0,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>0,541,543,1,0,0,0,542,537,1,0,0,0,542,538,1,0,0,0,543,9,1,0,0,0,544,546,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>3,12,6,0,545,544,1,0,0,0,546,549,1,0,0,0,547,545,1,0,0,0,547,548,1,0,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,548,11,1,0,0,0,549,547,1,0,0,0,550,553,3,14,7,0,551,553,3,20,10,0,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>552,550,1,0,0,0,552,551,1,0,0,0,553,13,1,0,0,0,554,557,3,68,34,0,555,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>557,3,70,35,0,556,554,1,0,0,0,556,555,1,0,0,0,557,15,1,0,0,0,558,560,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>3,486,243,0,559,558,1,0,0,0,560,563,1,0,0,0,561,559,1,0,0,0,561,562,1,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,562,564,1,0,0,0,563,561,1,0,0,0,564,568,5,30,0,0,565,566,3,6,3,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>0,566,567,5,47,0,0,567,569,1,0,0,0,568,565,1,0,0,0,568,569,1,0,0,0,569,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>570,1,0,0,0,570,575,3,54,27,0,571,572,5,128,0,0,572,574,3,54,27,0,573,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>571,1,0,0,0,574,577,1,0,0,0,575,573,1,0,0,0,575,576,1,0,0,0,576,578,1,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,577,575,1,0,0,0,578,579,5,96,0,0,579,584,3,54,27,0,580,581,5,128,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,581,583,3,54,27,0,582,580,1,0,0,0,583,586,1,0,0,0,584,582,1,0,0,0,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>584,585,1,0,0,0,585,587,1,0,0,0,586,584,1,0,0,0,587,588,3,8,4,0,588,17,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,589,590,3,54,27,0,590,19,1,0,0,0,591,592,3,22,11,0,592,21,1,0,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,593,598,3,24,12,0,594,598,3,26,13,0,595,598,3,28,14,0,596,598,3,492,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>246,0,597,593,1,0,0,0,597,594,1,0,0,0,597,595,1,0,0,0,597,596,1,0,0,0,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>598,23,1,0,0,0,599,600,5,22,0,0,600,610,3,6,3,0,601,602,5,8,0,0,602,607,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>3,18,9,0,603,604,5,128,0,0,604,606,3,18,9,0,605,603,1,0,0,0,606,609,1,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,607,605,1,0,0,0,607,608,1,0,0,0,608,611,1,0,0,0,609,607,1,0,0,0,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>610,601,1,0,0,0,610,611,1,0,0,0,611,613,1,0,0,0,612,599,1,0,0,0,612,613,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,613,616,1,0,0,0,614,615,5,104,0,0,615,617,5,160,0,0,616,614,1,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,616,617,1,0,0,0,617,618,1,0,0,0,618,619,5,110,0,0,619,25,1,0,0,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>0,620,621,5,35,0,0,621,624,3,6,3,0,622,623,5,104,0,0,623,625,5,160,0,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>0,624,622,1,0,0,0,624,625,1,0,0,0,625,626,1,0,0,0,626,627,5,110,0,0,627,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>27,1,0,0,0,628,629,5,84,0,0,629,631,3,6,3,0,630,628,1,0,0,0,630,631,1,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,631,632,1,0,0,0,632,633,5,61,0,0,633,634,5,160,0,0,634,635,5,110,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,635,29,1,0,0,0,636,637,3,38,19,0,637,31,1,0,0,0,638,640,3,488,244,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>0,639,638,1,0,0,0,640,643,1,0,0,0,641,639,1,0,0,0,641,642,1,0,0,0,642,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>644,1,0,0,0,643,641,1,0,0,0,644,645,3,34,17,0,645,646,3,36,18,0,646,33,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,647,648,5,66,0,0,648,649,3,6,3,0,649,35,1,0,0,0,650,656,5,114,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,651,652,5,124,0,0,652,653,3,40,20,0,653,654,5,125,0,0,654,656,1,0,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,655,650,1,0,0,0,655,651,1,0,0,0,656,37,1,0,0,0,657,658,3,4,2,0,658,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>39,1,0,0,0,659,663,3,46,23,0,660,663,3,52,26,0,661,663,3,56,28,0,662,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>659,1,0,0,0,662,660,1,0,0,0,662,661,1,0,0,0,663,41,1,0,0,0,664,666,3,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>44,22,0,665,664,1,0,0,0,665,666,1,0,0,0,666,43,1,0,0,0,667,668,7,0,0,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>0,668,45,1,0,0,0,669,672,3,48,24,0,670,672,3,50,25,0,671,669,1,0,0,0,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>671,670,1,0,0,0,672,47,1,0,0,0,673,674,3,42,21,0,674,675,3,68,34,0,675,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>49,1,0,0,0,676,677,3,42,21,0,677,678,3,70,35,0,678,51,1,0,0,0,679,680,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>3,42,21,0,680,684,5,10,0,0,681,682,5,142,0,0,682,683,5,155,0,0,683,685,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>5,150,0,0,684,681,1,0,0,0,684,685,1,0,0,0,685,687,1,0,0,0,686,688,5,155,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,687,686,1,0,0,0,687,688,1,0,0,0,688,689,1,0,0,0,689,690,5,46,0,0,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>690,691,3,54,27,0,691,692,3,8,4,0,692,53,1,0,0,0,693,698,5,155,0,0,694,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>695,5,116,0,0,695,697,5,155,0,0,696,694,1,0,0,0,697,700,1,0,0,0,698,696,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,698,699,1,0,0,0,699,55,1,0,0,0,700,698,1,0,0,0,701,703,3,44,22,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>0,702,701,1,0,0,0,702,703,1,0,0,0,703,704,1,0,0,0,704,706,5,53,0,0,705,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>707,5,11,0,0,706,705,1,0,0,0,706,707,1,0,0,0,707,708,1,0,0,0,708,710,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>3,58,29,0,709,711,3,8,4,0,710,709,1,0,0,0,710,711,1,0,0,0,711,57,1,0,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,712,715,3,60,30,0,713,715,3,56,28,0,714,712,1,0,0,0,714,713,1,0,0,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>0,715,59,1,0,0,0,716,718,3,54,27,0,717,719,5,116,0,0,718,717,1,0,0,0,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>718,719,1,0,0,0,719,721,1,0,0,0,720,722,7,1,0,0,721,720,1,0,0,0,721,722,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,722,61,1,0,0,0,723,724,3,58,29,0,724,725,3,64,32,0,725,63,1,0,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,726,727,5,126,0,0,727,728,3,264,132,0,728,729,5,127,0,0,729,65,1,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,730,735,3,22,11,0,731,735,3,68,34,0,732,735,3,70,35,0,733,735,3,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>72,36,0,734,730,1,0,0,0,734,731,1,0,0,0,734,732,1,0,0,0,734,733,1,0,0,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>0,735,67,1,0,0,0,736,764,3,16,8,0,737,764,3,74,37,0,738,764,3,128,64,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>0,739,764,3,204,102,0,740,764,3,32,16,0,741,764,3,206,103,0,742,764,3,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>208,104,0,743,764,3,484,242,0,744,764,3,210,105,0,745,764,3,212,106,0,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>746,764,3,438,219,0,747,764,3,234,117,0,748,764,3,238,119,0,749,764,3,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>250,125,0,750,764,3,468,234,0,751,764,3,504,252,0,752,764,3,506,253,0,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>753,764,3,100,50,0,754,764,3,108,54,0,755,764,3,134,67,0,756,764,3,112,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>56,0,757,764,3,196,98,0,758,764,3,176,88,0,759,764,3,180,90,0,760,764,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>3,186,93,0,761,764,3,200,100,0,762,764,3,56,28,0,763,736,1,0,0,0,763,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>737,1,0,0,0,763,738,1,0,0,0,763,739,1,0,0,0,763,740,1,0,0,0,763,741,1,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,763,742,1,0,0,0,763,743,1,0,0,0,763,744,1,0,0,0,763,745,1,0,0,0,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>763,746,1,0,0,0,763,747,1,0,0,0,763,748,1,0,0,0,763,749,1,0,0,0,763,750,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,763,751,1,0,0,0,763,752,1,0,0,0,763,753,1,0,0,0,763,754,1,0,0,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>0,763,755,1,0,0,0,763,756,1,0,0,0,763,757,1,0,0,0,763,758,1,0,0,0,763,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>759,1,0,0,0,763,760,1,0,0,0,763,761,1,0,0,0,763,762,1,0,0,0,764,69,1,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,765,776,3,138,69,0,766,776,3,236,118,0,767,776,3,248,124,0,768,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>776,3,252,126,0,769,776,3,254,127,0,770,776,3,214,107,0,771,776,3,226,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>113,0,772,776,3,230,115,0,773,776,3,440,220,0,774,776,3,442,221,0,775,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>765,1,0,0,0,775,766,1,0,0,0,775,767,1,0,0,0,775,768,1,0,0,0,775,769,1,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,775,770,1,0,0,0,775,771,1,0,0,0,775,772,1,0,0,0,775,773,1,0,0,0,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>775,774,1,0,0,0,776,71,1,0,0,0,777,778,3,514,257,0,778,73,1,0,0,0,779,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>780,3,76,38,0,780,781,5,98,0,0,781,782,3,78,39,0,782,783,3,94,47,0,783,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>75,1,0,0,0,784,786,5,9,0,0,785,784,1,0,0,0,785,786,1,0,0,0,786,790,1,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,787,789,3,488,244,0,788,787,1,0,0,0,789,792,1,0,0,0,790,788,1,0,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,790,791,1,0,0,0,791,77,1,0,0,0,792,790,1,0,0,0,793,795,5,11,0,0,794,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>793,1,0,0,0,794,795,1,0,0,0,795,796,1,0,0,0,796,798,3,6,3,0,797,799,3,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>478,239,0,798,797,1,0,0,0,798,799,1,0,0,0,799,802,1,0,0,0,800,803,3,80,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>40,0,801,803,3,82,41,0,802,800,1,0,0,0,802,801,1,0,0,0,803,804,1,0,0,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>0,804,802,1,0,0,0,804,805,1,0,0,0,805,809,1,0,0,0,806,808,3,84,42,0,807,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>806,1,0,0,0,808,811,1,0,0,0,809,807,1,0,0,0,809,810,1,0,0,0,810,79,1,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,811,809,1,0,0,0,812,813,5,3,0,0,813,818,3,102,51,0,814,815,5,128,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,815,817,3,102,51,0,816,814,1,0,0,0,817,820,1,0,0,0,818,816,1,0,0,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>0,818,819,1,0,0,0,819,81,1,0,0,0,820,818,1,0,0,0,821,822,5,7,0,0,822,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>823,3,110,55,0,823,83,1,0,0,0,824,829,3,86,43,0,825,829,3,88,44,0,826,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>829,3,90,45,0,827,829,3,92,46,0,828,824,1,0,0,0,828,825,1,0,0,0,828,826,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,828,827,1,0,0,0,829,85,1,0,0,0,830,831,5,34,0,0,831,832,5,47,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,832,837,3,114,57,0,833,834,5,128,0,0,834,836,3,114,57,0,835,833,1,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,836,839,1,0,0,0,837,835,1,0,0,0,837,838,1,0,0,0,838,87,1,0,0,0,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>839,837,1,0,0,0,840,841,5,101,0,0,841,846,3,116,58,0,842,843,5,128,0,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>0,843,845,3,116,58,0,844,842,1,0,0,0,845,848,1,0,0,0,846,844,1,0,0,0,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>846,847,1,0,0,0,847,89,1,0,0,0,848,846,1,0,0,0,849,850,5,51,0,0,850,855,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>3,118,59,0,851,852,5,128,0,0,852,854,3,118,59,0,853,851,1,0,0,0,854,857,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,855,853,1,0,0,0,855,856,1,0,0,0,856,91,1,0,0,0,857,855,1,0,0,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>0,858,859,5,32,0,0,859,864,3,120,60,0,860,861,5,128,0,0,861,863,3,120,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>60,0,862,860,1,0,0,0,863,866,1,0,0,0,864,862,1,0,0,0,864,865,1,0,0,0,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>865,93,1,0,0,0,866,864,1,0,0,0,867,873,5,114,0,0,868,869,5,124,0,0,869,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>870,3,96,48,0,870,871,5,125,0,0,871,873,1,0,0,0,872,867,1,0,0,0,872,868,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,873,95,1,0,0,0,874,876,3,66,33,0,875,874,1,0,0,0,876,879,1,0,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,877,875,1,0,0,0,877,878,1,0,0,0,878,97,1,0,0,0,879,877,1,0,0,0,880,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>881,3,66,33,0,881,99,1,0,0,0,882,883,5,86,0,0,883,885,3,6,3,0,884,882,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,884,885,1,0,0,0,885,886,1,0,0,0,886,887,5,93,0,0,887,888,3,104,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>52,0,888,889,5,3,0,0,889,890,3,106,53,0,890,891,3,8,4,0,891,101,1,0,0,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>0,892,893,3,106,53,0,893,103,1,0,0,0,894,897,3,54,27,0,895,897,3,190,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>95,0,896,894,1,0,0,0,896,895,1,0,0,0,897,105,1,0,0,0,898,901,3,54,27,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>0,899,901,3,190,95,0,900,898,1,0,0,0,900,899,1,0,0,0,901,107,1,0,0,0,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>902,903,5,26,0,0,903,905,3,6,3,0,904,902,1,0,0,0,904,905,1,0,0,0,905,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>906,1,0,0,0,906,909,5,24,0,0,907,910,3,54,27,0,908,910,3,192,96,0,909,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>907,1,0,0,0,909,908,1,0,0,0,910,911,1,0,0,0,911,914,5,7,0,0,912,915,3,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>54,27,0,913,915,3,192,96,0,914,912,1,0,0,0,914,913,1,0,0,0,915,916,1,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,916,917,3,8,4,0,917,109,1,0,0,0,918,921,3,54,27,0,919,921,3,192,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>96,0,920,918,1,0,0,0,920,919,1,0,0,0,921,111,1,0,0,0,922,923,5,33,0,0,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>923,925,3,6,3,0,924,922,1,0,0,0,924,925,1,0,0,0,925,926,1,0,0,0,926,929,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>5,34,0,0,927,930,3,54,27,0,928,930,3,192,96,0,929,927,1,0,0,0,929,928,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,930,931,1,0,0,0,931,934,5,47,0,0,932,935,3,54,27,0,933,935,3,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>192,96,0,934,932,1,0,0,0,934,933,1,0,0,0,935,936,1,0,0,0,936,937,3,8,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>4,0,937,113,1,0,0,0,938,941,3,54,27,0,939,941,3,192,96,0,940,938,1,0,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,940,939,1,0,0,0,941,115,1,0,0,0,942,945,3,54,27,0,943,945,3,190,95,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>0,944,942,1,0,0,0,944,943,1,0,0,0,945,117,1,0,0,0,946,949,3,54,27,0,947,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>949,3,190,95,0,948,946,1,0,0,0,948,947,1,0,0,0,949,119,1,0,0,0,950,953,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>3,54,27,0,951,953,3,190,95,0,952,950,1,0,0,0,952,951,1,0,0,0,953,121,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,954,957,3,124,62,0,955,957,3,126,63,0,956,954,1,0,0,0,956,955,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,957,123,1,0,0,0,958,959,3,42,21,0,959,960,5,62,0,0,960,961,3,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>70,35,0,961,125,1,0,0,0,962,963,3,42,21,0,963,964,3,70,35,0,964,127,1,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,965,967,3,76,38,0,966,965,1,0,0,0,966,967,1,0,0,0,967,968,1,0,0,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>0,968,969,5,21,0,0,969,970,3,130,65,0,970,971,3,94,47,0,971,129,1,0,0,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>0,972,974,5,11,0,0,973,972,1,0,0,0,973,974,1,0,0,0,974,975,1,0,0,0,975,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>977,3,6,3,0,976,978,3,478,239,0,977,976,1,0,0,0,977,978,1,0,0,0,978,981,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,979,982,3,132,66,0,980,982,3,82,41,0,981,979,1,0,0,0,981,980,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,981,982,1,0,0,0,982,986,1,0,0,0,983,985,3,84,42,0,984,983,1,0,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,985,988,1,0,0,0,986,984,1,0,0,0,986,987,1,0,0,0,987,131,1,0,0,0,988,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>986,1,0,0,0,989,990,5,3,0,0,990,995,3,136,68,0,991,992,5,128,0,0,992,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>994,3,136,68,0,993,991,1,0,0,0,994,997,1,0,0,0,995,993,1,0,0,0,995,996,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,996,133,1,0,0,0,997,995,1,0,0,0,998,999,5,86,0,0,999,1001,3,6,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>3,0,1000,998,1,0,0,0,1000,1001,1,0,0,0,1001,1002,1,0,0,0,1002,1003,5,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>90,0,0,1003,1004,3,54,27,0,1004,1005,5,3,0,0,1005,1006,3,54,27,0,1006,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>1007,3,8,4,0,1007,135,1,0,0,0,1008,1009,3,54,27,0,1009,137,1,0,0,0,1010,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>1012,3,140,70,0,1011,1010,1,0,0,0,1011,1012,1,0,0,0,1012,1017,1,0,0,0,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>1013,1014,5,40,0,0,1014,1018,3,144,72,0,1015,1018,5,40,0,0,1016,1018,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>3,488,244,0,1017,1013,1,0,0,0,1017,1015,1,0,0,0,1017,1016,1,0,0,0,1018,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>1020,1,0,0,0,1019,1021,3,166,83,0,1020,1019,1,0,0,0,1020,1021,1,0,0,0,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>1021,1023,1,0,0,0,1022,1024,3,466,233,0,1023,1022,1,0,0,0,1023,1024,1,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1024,1026,1,0,0,0,1025,1027,3,464,232,0,1026,1025,1,0,0,0,1026,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>1027,1,0,0,0,1027,1028,1,0,0,0,1028,1029,3,94,47,0,1029,139,1,0,0,0,1030,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>1032,3,142,71,0,1031,1030,1,0,0,0,1031,1032,1,0,0,0,1032,1034,1,0,0,0,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>1033,1035,5,9,0,0,1034,1033,1,0,0,0,1034,1035,1,0,0,0,1035,1037,1,0,0,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1036,1038,7,2,0,0,1037,1036,1,0,0,0,1037,1038,1,0,0,0,1038,1040,1,0,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1039,1041,5,80,0,0,1040,1039,1,0,0,0,1040,1041,1,0,0,0,1041,1043,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1042,1044,5,31,0,0,1043,1042,1,0,0,0,1043,1044,1,0,0,0,1044,1046,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1045,1047,5,37,0,0,1046,1045,1,0,0,0,1046,1047,1,0,0,0,1047,1051,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1048,1050,3,488,244,0,1049,1048,1,0,0,0,1050,1053,1,0,0,0,1051,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>1049,1,0,0,0,1051,1052,1,0,0,0,1052,141,1,0,0,0,1053,1051,1,0,0,0,1054,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>1055,7,3,0,0,1055,143,1,0,0,0,1056,1058,5,11,0,0,1057,1056,1,0,0,0,1057,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>1058,1,0,0,0,1058,1066,1,0,0,0,1059,1062,3,146,73,0,1060,1063,3,156,78,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1061,1063,3,82,41,0,1062,1060,1,0,0,0,1062,1061,1,0,0,0,1062,1063,1,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1063,1067,1,0,0,0,1064,1067,3,156,78,0,1065,1067,3,82,41,0,1066,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>1059,1,0,0,0,1066,1064,1,0,0,0,1066,1065,1,0,0,0,1067,1071,1,0,0,0,1068,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>1070,3,148,74,0,1069,1068,1,0,0,0,1070,1073,1,0,0,0,1071,1069,1,0,0,0,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>1071,1072,1,0,0,0,1072,1075,1,0,0,0,1073,1071,1,0,0,0,1074,1076,3,94,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>47,0,1075,1074,1,0,0,0,1075,1076,1,0,0,0,1076,145,1,0,0,0,1077,1078,5,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>142,0,0,1078,1079,5,155,0,0,1079,1081,5,150,0,0,1080,1082,5,155,0,0,1081,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>1080,1,0,0,0,1081,1082,1,0,0,0,1082,1085,1,0,0,0,1083,1085,5,155,0,0,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>1084,1077,1,0,0,0,1084,1083,1,0,0,0,1085,147,1,0,0,0,1086,1091,3,84,42,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1087,1091,3,150,75,0,1088,1091,3,152,76,0,1089,1091,3,154,77,0,1090,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>1086,1,0,0,0,1090,1087,1,0,0,0,1090,1088,1,0,0,0,1090,1089,1,0,0,0,1091,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>149,1,0,0,0,1092,1095,5,19,0,0,1093,1096,3,194,97,0,1094,1096,3,192,96,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1095,1093,1,0,0,0,1095,1094,1,0,0,0,1096,151,1,0,0,0,1097,1098,5,58,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1098,1099,5,70,0,0,1099,1100,3,198,99,0,1100,153,1,0,0,0,1101,1102,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>5,41,0,0,1102,1103,5,18,0,0,1103,1108,3,202,101,0,1104,1105,5,128,0,0,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>1105,1107,3,202,101,0,1106,1104,1,0,0,0,1107,1110,1,0,0,0,1108,1106,1,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1108,1109,1,0,0,0,1109,155,1,0,0,0,1110,1108,1,0,0,0,1111,1113,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>3,160,80,0,1112,1111,1,0,0,0,1113,1114,1,0,0,0,1114,1112,1,0,0,0,1114,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>1115,1,0,0,0,1115,1117,1,0,0,0,1116,1118,3,158,79,0,1117,1116,1,0,0,0,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>1117,1118,1,0,0,0,1118,1122,1,0,0,0,1119,1121,3,160,80,0,1120,1119,1,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1121,1124,1,0,0,0,1122,1120,1,0,0,0,1122,1123,1,0,0,0,1123,1132,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1124,1122,1,0,0,0,1125,1127,3,158,79,0,1126,1128,3,160,80,0,1127,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>1126,1,0,0,0,1128,1129,1,0,0,0,1129,1127,1,0,0,0,1129,1130,1,0,0,0,1130,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>1132,1,0,0,0,1131,1112,1,0,0,0,1131,1125,1,0,0,0,1132,157,1,0,0,0,1133,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>1146,3,478,239,0,1134,1136,5,72,0,0,1135,1137,5,67,0,0,1136,1135,1,0,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1136,1137,1,0,0,0,1137,1139,1,0,0,0,1138,1134,1,0,0,0,1138,1139,1,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1139,1147,1,0,0,0,1140,1142,5,67,0,0,1141,1140,1,0,0,0,1141,1142,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1142,1143,1,0,0,0,1143,1145,5,72,0,0,1144,1141,1,0,0,0,1144,1145,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1145,1147,1,0,0,0,1146,1138,1,0,0,0,1146,1144,1,0,0,0,1147,159,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1148,1153,3,162,81,0,1149,1153,3,166,83,0,1150,1153,3,170,85,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1151,1153,3,172,86,0,1152,1148,1,0,0,0,1152,1149,1,0,0,0,1152,1150,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1152,1151,1,0,0,0,1153,161,1,0,0,0,1154,1159,3,164,82,0,1155,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>1156,5,128,0,0,1156,1158,3,178,89,0,1157,1155,1,0,0,0,1158,1161,1,0,0,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1159,1157,1,0,0,0,1159,1160,1,0,0,0,1160,163,1,0,0,0,1161,1159,1,0,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1162,1163,5,2,0,0,1163,1164,3,178,89,0,1164,165,1,0,0,0,1165,1167,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>3,168,84,0,1166,1168,3,182,91,0,1167,1166,1,0,0,0,1167,1168,1,0,0,0,1168,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>1173,1,0,0,0,1169,1170,5,128,0,0,1170,1172,3,182,91,0,1171,1169,1,0,0,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1172,1175,1,0,0,0,1173,1171,1,0,0,0,1173,1174,1,0,0,0,1174,167,1,0,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1175,1173,1,0,0,0,1176,1177,5,4,0,0,1177,1178,3,182,91,0,1178,169,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1179,1180,5,5,0,0,1180,1181,3,184,92,0,1181,171,1,0,0,0,1182,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>1185,3,174,87,0,1183,1184,5,128,0,0,1184,1186,3,188,94,0,1185,1183,1,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1185,1186,1,0,0,0,1186,173,1,0,0,0,1187,1189,3,142,71,0,1188,1187,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1188,1189,1,0,0,0,1189,1190,1,0,0,0,1190,1191,5,6,0,0,1191,1192,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>3,188,94,0,1192,175,1,0,0,0,1193,1194,5,86,0,0,1194,1196,3,6,3,0,1195,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>1193,1,0,0,0,1195,1196,1,0,0,0,1196,1198,1,0,0,0,1197,1199,5,100,0,0,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>1198,1197,1,0,0,0,1198,1199,1,0,0,0,1199,1200,1,0,0,0,1200,1201,3,54,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>27,0,1201,1202,5,2,0,0,1202,1204,3,106,53,0,1203,1205,3,158,79,0,1204,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>1203,1,0,0,0,1204,1205,1,0,0,0,1205,1206,1,0,0,0,1206,1207,3,8,4,0,1207,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>177,1,0,0,0,1208,1209,3,106,53,0,1209,179,1,0,0,0,1210,1211,5,86,0,0,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>1211,1213,3,6,3,0,1212,1210,1,0,0,0,1212,1213,1,0,0,0,1213,1215,1,0,0,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1214,1216,5,91,0,0,1215,1214,1,0,0,0,1215,1216,1,0,0,0,1216,1217,1,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1217,1218,3,104,52,0,1218,1219,5,4,0,0,1219,1221,3,106,53,0,1220,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>1222,3,158,79,0,1221,1220,1,0,0,0,1221,1222,1,0,0,0,1222,1223,1,0,0,0,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>1223,1224,3,8,4,0,1224,181,1,0,0,0,1225,1226,3,106,53,0,1226,183,1,0,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1227,1228,3,106,53,0,1228,185,1,0,0,0,1229,1231,3,142,71,0,1230,1229,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1230,1231,1,0,0,0,1231,1234,1,0,0,0,1232,1233,5,86,0,0,1233,1235,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>3,6,3,0,1234,1232,1,0,0,0,1234,1235,1,0,0,0,1235,1238,1,0,0,0,1236,1237,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>5,82,0,0,1237,1239,3,104,52,0,1238,1236,1,0,0,0,1238,1239,1,0,0,0,1239,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>1240,1,0,0,0,1240,1241,5,6,0,0,1241,1243,3,54,27,0,1242,1244,3,164,82,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1243,1242,1,0,0,0,1243,1244,1,0,0,0,1244,1246,1,0,0,0,1245,1247,3,158,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>79,0,1246,1245,1,0,0,0,1246,1247,1,0,0,0,1247,1249,1,0,0,0,1248,1250,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>3,168,84,0,1249,1248,1,0,0,0,1249,1250,1,0,0,0,1250,1252,1,0,0,0,1251,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>1253,3,466,233,0,1252,1251,1,0,0,0,1252,1253,1,0,0,0,1253,1254,1,0,0,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1254,1255,3,8,4,0,1255,187,1,0,0,0,1256,1257,3,106,53,0,1257,189,1,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1258,1259,3,192,96,0,1259,191,1,0,0,0,1260,1265,3,194,97,0,1261,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>1262,5,140,0,0,1262,1264,3,194,97,0,1263,1261,1,0,0,0,1264,1267,1,0,0,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1265,1263,1,0,0,0,1265,1266,1,0,0,0,1266,193,1,0,0,0,1267,1265,1,0,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1268,1269,3,54,27,0,1269,195,1,0,0,0,1270,1271,5,59,0,0,1271,1273,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>3,6,3,0,1272,1270,1,0,0,0,1272,1273,1,0,0,0,1273,1274,1,0,0,0,1274,1277,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>5,58,0,0,1275,1278,3,54,27,0,1276,1278,3,190,95,0,1277,1275,1,0,0,0,1277,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>1276,1,0,0,0,1278,1279,1,0,0,0,1279,1282,5,70,0,0,1280,1283,3,54,27,0,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>1281,1283,3,190,95,0,1282,1280,1,0,0,0,1282,1281,1,0,0,0,1283,1284,1,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1284,1285,3,8,4,0,1285,197,1,0,0,0,1286,1289,3,54,27,0,1287,1289,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>3,190,95,0,1288,1286,1,0,0,0,1288,1287,1,0,0,0,1289,199,1,0,0,0,1290,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>1294,5,42,0,0,1291,1292,3,6,3,0,1292,1293,5,70,0,0,1293,1295,1,0,0,0,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>1294,1291,1,0,0,0,1294,1295,1,0,0,0,1295,1296,1,0,0,0,1296,1297,3,54,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>27,0,1297,1298,5,18,0,0,1298,1299,3,54,27,0,1299,1300,3,8,4,0,1300,201,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1301,1302,3,54,27,0,1302,203,1,0,0,0,1303,1304,3,76,38,0,1304,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>1305,5,28,0,0,1305,1306,3,130,65,0,1306,1307,3,94,47,0,1307,205,1,0,0,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1308,1309,3,76,38,0,1309,1310,5,20,0,0,1310,1311,3,130,65,0,1311,1312,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>3,94,47,0,1312,207,1,0,0,0,1313,1315,3,76,38,0,1314,1313,1,0,0,0,1314,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>1315,1,0,0,0,1315,1316,1,0,0,0,1316,1317,5,89,0,0,1317,1318,3,130,65,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1318,1319,3,94,47,0,1319,209,1,0,0,0,1320,1321,3,76,38,0,1321,1322,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>5,14,0,0,1322,1323,3,130,65,0,1323,1324,3,94,47,0,1324,211,1,0,0,0,1325,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>1326,3,76,38,0,1326,1327,5,14,0,0,1327,1328,5,89,0,0,1328,1329,3,130,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>65,0,1329,1330,3,94,47,0,1330,213,1,0,0,0,1331,1333,3,76,38,0,1332,1331,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1332,1333,1,0,0,0,1333,1334,1,0,0,0,1334,1335,5,27,0,0,1335,1336,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>3,216,108,0,1336,1337,3,94,47,0,1337,215,1,0,0,0,1338,1341,3,144,72,0,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>1339,1342,3,218,109,0,1340,1342,3,220,110,0,1341,1339,1,0,0,0,1341,1340,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1342,217,1,0,0,0,1343,1345,5,11,0,0,1344,1343,1,0,0,0,1344,1345,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1345,1346,1,0,0,0,1346,1347,5,47,0,0,1347,1348,3,222,111,0,1348,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>1349,5,96,0,0,1349,1350,3,222,111,0,1350,219,1,0,0,0,1351,1352,5,122,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1352,1353,3,222,111,0,1353,1354,5,128,0,0,1354,1359,3,222,111,0,1355,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>1356,5,128,0,0,1356,1358,3,222,111,0,1357,1355,1,0,0,0,1358,1361,1,0,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1359,1357,1,0,0,0,1359,1360,1,0,0,0,1360,1362,1,0,0,0,1361,1359,1,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1362,1363,5,123,0,0,1363,221,1,0,0,0,1364,1365,3,224,112,0,1365,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>223,1,0,0,0,1366,1367,5,155,0,0,1367,1369,5,5,0,0,1368,1366,1,0,0,0,1368,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>1369,1,0,0,0,1369,1371,1,0,0,0,1370,1372,3,478,239,0,1371,1370,1,0,0,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1371,1372,1,0,0,0,1372,1373,1,0,0,0,1373,1374,3,184,92,0,1374,225,1,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1375,1376,3,140,70,0,1376,1377,5,16,0,0,1377,1378,3,228,114,0,1378,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>1379,3,94,47,0,1379,227,1,0,0,0,1380,1386,3,144,72,0,1381,1382,5,70,0,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1382,1383,3,222,111,0,1383,1384,5,146,0,0,1384,1385,3,222,111,0,1385,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>1387,1,0,0,0,1386,1381,1,0,0,0,1386,1387,1,0,0,0,1387,1401,1,0,0,0,1388,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>1390,5,11,0,0,1389,1388,1,0,0,0,1389,1390,1,0,0,0,1390,1398,1,0,0,0,1391,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>1393,5,70,0,0,1392,1391,1,0,0,0,1392,1393,1,0,0,0,1393,1394,1,0,0,0,1394,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>1395,3,222,111,0,1395,1396,5,146,0,0,1396,1397,3,222,111,0,1397,1399,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1398,1392,1,0,0,0,1398,1399,1,0,0,0,1399,1401,1,0,0,0,1400,1380,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1400,1389,1,0,0,0,1401,229,1,0,0,0,1402,1403,3,140,70,0,1403,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>1404,5,94,0,0,1404,1405,3,232,116,0,1405,1406,3,94,47,0,1406,231,1,0,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1407,1413,3,144,72,0,1408,1409,5,44,0,0,1409,1410,3,222,111,0,1410,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>1411,5,95,0,0,1411,1412,3,222,111,0,1412,1414,1,0,0,0,1413,1408,1,0,0,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1413,1414,1,0,0,0,1414,1428,1,0,0,0,1415,1417,5,11,0,0,1416,1415,1,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1416,1417,1,0,0,0,1417,1425,1,0,0,0,1418,1420,5,44,0,0,1419,1418,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1419,1420,1,0,0,0,1420,1421,1,0,0,0,1421,1422,3,222,111,0,1422,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>1423,5,95,0,0,1423,1424,3,222,111,0,1424,1426,1,0,0,0,1425,1419,1,0,0,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1425,1426,1,0,0,0,1426,1428,1,0,0,0,1427,1407,1,0,0,0,1427,1416,1,0,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1428,233,1,0,0,0,1429,1430,3,76,38,0,1430,1431,5,15,0,0,1431,1432,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>3,130,65,0,1432,1433,3,94,47,0,1433,235,1,0,0,0,1434,1435,3,140,70,0,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>1435,1436,5,88,0,0,1436,1438,3,144,72,0,1437,1439,3,462,231,0,1438,1437,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1438,1439,1,0,0,0,1439,1440,1,0,0,0,1440,1441,3,94,47,0,1441,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>237,1,0,0,0,1442,1443,3,76,38,0,1443,1444,5,48,0,0,1444,1445,3,130,65,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1445,1446,3,240,120,0,1446,239,1,0,0,0,1447,1453,5,114,0,0,1448,1449,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>5,124,0,0,1449,1450,3,242,121,0,1450,1451,5,125,0,0,1451,1453,1,0,0,0,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>1452,1447,1,0,0,0,1452,1448,1,0,0,0,1453,241,1,0,0,0,1454,1457,3,98,49,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1455,1457,3,244,122,0,1456,1454,1,0,0,0,1456,1455,1,0,0,0,1457,1458,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1458,1456,1,0,0,0,1458,1459,1,0,0,0,1459,1461,1,0,0,0,1460,1462,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>3,246,123,0,1461,1460,1,0,0,0,1461,1462,1,0,0,0,1462,243,1,0,0,0,1463,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>1464,3,42,21,0,1464,1465,5,85,0,0,1465,1466,3,70,35,0,1466,245,1,0,0,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1467,1468,3,42,21,0,1468,1469,3,264,132,0,1469,247,1,0,0,0,1470,1471,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>3,140,70,0,1471,1472,5,38,0,0,1472,1474,3,144,72,0,1473,1475,3,462,231,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1474,1473,1,0,0,0,1474,1475,1,0,0,0,1475,1476,1,0,0,0,1476,1477,3,240,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>120,0,1477,249,1,0,0,0,1478,1479,3,76,38,0,1479,1480,5,76,0,0,1480,1481,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>3,130,65,0,1481,1482,3,240,120,0,1482,251,1,0,0,0,1483,1484,3,140,70,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1484,1485,5,17,0,0,1485,1487,3,144,72,0,1486,1488,3,462,231,0,1487,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>1486,1,0,0,0,1487,1488,1,0,0,0,1488,1489,1,0,0,0,1489,1490,3,240,120,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1490,253,1,0,0,0,1491,1492,3,140,70,0,1492,1494,5,57,0,0,1493,1495,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>7,4,0,0,1494,1493,1,0,0,0,1494,1495,1,0,0,0,1495,1496,1,0,0,0,1496,1498,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>3,144,72,0,1497,1499,3,462,231,0,1498,1497,1,0,0,0,1498,1499,1,0,0,0,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>1499,1500,1,0,0,0,1500,1501,3,240,120,0,1501,255,1,0,0,0,1502,1503,3,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>258,129,0,1503,257,1,0,0,0,1504,1505,3,260,130,0,1505,259,1,0,0,0,1506,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>1507,3,262,131,0,1507,261,1,0,0,0,1508,1510,3,264,132,0,1509,1508,1,0,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1510,1511,1,0,0,0,1511,1509,1,0,0,0,1511,1512,1,0,0,0,1512,263,1,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1513,1522,3,268,134,0,1514,1522,3,270,135,0,1515,1522,3,274,137,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1516,1522,3,278,139,0,1517,1522,3,282,141,0,1518,1522,3,290,145,0,1519,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>1522,3,316,158,0,1520,1522,3,328,164,0,1521,1513,1,0,0,0,1521,1514,1,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1521,1515,1,0,0,0,1521,1516,1,0,0,0,1521,1517,1,0,0,0,1521,1518,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1521,1519,1,0,0,0,1521,1520,1,0,0,0,1522,265,1,0,0,0,1523,1528,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>3,328,164,0,1524,1528,3,316,158,0,1525,1528,3,290,145,0,1526,1528,3,278,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>139,0,1527,1523,1,0,0,0,1527,1524,1,0,0,0,1527,1525,1,0,0,0,1527,1526,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1528,267,1,0,0,0,1529,1530,5,50,0,0,1530,1531,3,292,146,0,1531,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>1532,5,152,0,0,1532,1533,3,298,149,0,1533,1534,5,36,0,0,1534,1535,3,298,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>149,0,1535,269,1,0,0,0,1536,1537,3,292,146,0,1537,1538,3,272,136,0,1538,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>1539,3,298,149,0,1539,271,1,0,0,0,1540,1541,7,5,0,0,1541,273,1,0,0,0,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>1542,1543,3,292,146,0,1543,1544,3,276,138,0,1544,1545,3,262,131,0,1545,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>275,1,0,0,0,1546,1547,7,6,0,0,1547,277,1,0,0,0,1548,1549,3,280,140,0,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>1549,1550,3,262,131,0,1550,279,1,0,0,0,1551,1552,7,7,0,0,1552,281,1,0,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1553,1555,3,292,146,0,1554,1553,1,0,0,0,1554,1555,1,0,0,0,1555,1562,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1556,1557,3,286,143,0,1557,1558,3,318,159,0,1558,1563,1,0,0,0,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>1559,1560,3,288,144,0,1560,1561,3,320,160,0,1561,1563,1,0,0,0,1562,1556,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1562,1559,1,0,0,0,1563,283,1,0,0,0,1564,1566,3,292,146,0,1565,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>1564,1,0,0,0,1565,1566,1,0,0,0,1566,1567,1,0,0,0,1567,1568,3,286,143,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1568,1569,3,318,159,0,1569,1574,1,0,0,0,1570,1571,3,288,144,0,1571,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>1572,3,320,160,0,1572,1574,1,0,0,0,1573,1565,1,0,0,0,1573,1570,1,0,0,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1574,285,1,0,0,0,1575,1576,7,8,0,0,1576,287,1,0,0,0,1577,1578,5,13,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1578,289,1,0,0,0,1579,1580,3,304,152,0,1580,1581,3,312,156,0,1581,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>1582,3,318,159,0,1582,1587,1,0,0,0,1583,1584,3,314,157,0,1584,1585,3,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>320,160,0,1585,1587,1,0,0,0,1586,1579,1,0,0,0,1586,1583,1,0,0,0,1587,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>291,1,0,0,0,1588,1589,3,294,147,0,1589,293,1,0,0,0,1590,1591,3,296,148,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1591,295,1,0,0,0,1592,1593,3,266,133,0,1593,297,1,0,0,0,1594,1595,3,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>300,150,0,1595,299,1,0,0,0,1596,1597,3,302,151,0,1597,301,1,0,0,0,1598,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>1599,3,258,129,0,1599,303,1,0,0,0,1600,1601,3,306,153,0,1601,305,1,0,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1602,1603,3,308,154,0,1603,307,1,0,0,0,1604,1605,3,310,155,0,1605,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>309,1,0,0,0,1606,1607,3,54,27,0,1607,311,1,0,0,0,1608,1609,5,140,0,0,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>1609,313,1,0,0,0,1610,1611,5,1,0,0,1611,315,1,0,0,0,1612,1613,5,11,0,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1613,1614,3,318,159,0,1614,317,1,0,0,0,1615,1616,3,322,161,0,1616,319,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1617,1618,3,322,161,0,1618,321,1,0,0,0,1619,1620,3,324,162,0,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>1620,323,1,0,0,0,1621,1622,3,54,27,0,1622,325,1,0,0,0,1623,1625,3,328,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>164,0,1624,1623,1,0,0,0,1625,1626,1,0,0,0,1626,1624,1,0,0,0,1626,1627,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1627,327,1,0,0,0,1628,1631,3,356,178,0,1629,1631,3,336,168,0,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>1630,1628,1,0,0,0,1630,1629,1,0,0,0,1631,329,1,0,0,0,1632,1633,3,328,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>164,0,1633,331,1,0,0,0,1634,1635,3,330,165,0,1635,333,1,0,0,0,1636,1637,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>3,332,166,0,1637,335,1,0,0,0,1638,1646,3,344,172,0,1639,1646,3,346,173,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1640,1646,3,348,174,0,1641,1646,3,360,180,0,1642,1646,3,358,179,0,1643,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>1646,3,362,181,0,1644,1646,3,388,194,0,1645,1638,1,0,0,0,1645,1639,1,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1645,1640,1,0,0,0,1645,1641,1,0,0,0,1645,1642,1,0,0,0,1645,1643,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1645,1644,1,0,0,0,1646,337,1,0,0,0,1647,1648,3,336,168,0,1648,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>339,1,0,0,0,1649,1650,3,332,166,0,1650,341,1,0,0,0,1651,1652,3,332,166,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1652,343,1,0,0,0,1653,1654,5,126,0,0,1654,1655,3,354,177,0,1655,1656,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>5,127,0,0,1656,345,1,0,0,0,1657,1658,5,130,0,0,1658,1659,5,122,0,0,1659,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>1660,3,354,177,0,1660,1661,5,123,0,0,1661,347,1,0,0,0,1662,1663,5,122,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1663,1664,3,350,175,0,1664,1665,5,123,0,0,1665,349,1,0,0,0,1666,1668,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>3,262,131,0,1667,1669,5,128,0,0,1668,1667,1,0,0,0,1668,1669,1,0,0,0,1669,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>1672,1,0,0,0,1670,1672,3,352,176,0,1671,1666,1,0,0,0,1671,1670,1,0,0,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1672,351,1,0,0,0,1673,1674,3,260,130,0,1674,1675,5,128,0,0,1675,1676,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>3,354,177,0,1676,353,1,0,0,0,1677,1678,3,350,175,0,1678,355,1,0,0,0,1679,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>1680,5,140,0,0,1680,1681,3,384,192,0,1681,357,1,0,0,0,1682,1683,5,140,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1683,1684,3,370,185,0,1684,359,1,0,0,0,1685,1686,5,154,0,0,1686,1687,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>3,370,185,0,1687,361,1,0,0,0,1688,1689,5,139,0,0,1689,1693,3,324,162,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1690,1694,3,364,182,0,1691,1694,3,372,186,0,1692,1694,3,300,150,0,1693,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>1690,1,0,0,0,1693,1691,1,0,0,0,1693,1692,1,0,0,0,1694,363,1,0,0,0,1695,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>1696,3,366,183,0,1696,365,1,0,0,0,1697,1698,3,368,184,0,1698,367,1,0,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1699,1700,3,416,208,0,1700,369,1,0,0,0,1701,1702,3,416,208,0,1702,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>371,1,0,0,0,1703,1704,3,374,187,0,1704,373,1,0,0,0,1705,1706,3,380,190,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1706,375,1,0,0,0,1707,1708,3,378,189,0,1708,377,1,0,0,0,1709,1710,3,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>324,162,0,1710,379,1,0,0,0,1711,1712,3,382,191,0,1712,381,1,0,0,0,1713,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>1714,3,324,162,0,1714,383,1,0,0,0,1715,1718,3,394,197,0,1716,1718,3,386,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>193,0,1717,1715,1,0,0,0,1717,1716,1,0,0,0,1718,385,1,0,0,0,1719,1720,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>3,192,96,0,1720,387,1,0,0,0,1721,1728,3,390,195,0,1722,1728,3,422,211,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1723,1728,3,392,196,0,1724,1728,3,398,199,0,1725,1728,3,400,200,0,1726,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>1728,3,416,208,0,1727,1721,1,0,0,0,1727,1722,1,0,0,0,1727,1723,1,0,0,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1727,1724,1,0,0,0,1727,1725,1,0,0,0,1727,1726,1,0,0,0,1728,389,1,0,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1729,1733,5,69,0,0,1730,1731,5,122,0,0,1731,1733,5,123,0,0,1732,1729,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1732,1730,1,0,0,0,1733,391,1,0,0,0,1734,1735,3,394,197,0,1735,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>393,1,0,0,0,1736,1737,3,396,198,0,1737,395,1,0,0,0,1738,1739,3,54,27,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1739,397,1,0,0,0,1740,1741,3,54,27,0,1741,1742,5,140,0,0,1742,1743,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>5,64,0,0,1743,399,1,0,0,0,1744,1745,3,402,201,0,1745,401,1,0,0,0,1746,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>1749,3,178,89,0,1747,1749,3,408,204,0,1748,1746,1,0,0,0,1748,1747,1,0,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1749,1750,1,0,0,0,1750,1751,3,404,202,0,1751,403,1,0,0,0,1752,1757,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>5,122,0,0,1753,1754,3,262,131,0,1754,1755,3,406,203,0,1755,1758,1,0,0,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1756,1758,3,408,204,0,1757,1753,1,0,0,0,1757,1756,1,0,0,0,1757,1758,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1758,1759,1,0,0,0,1759,1760,5,123,0,0,1760,405,1,0,0,0,1761,1766,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>3,292,146,0,1762,1763,5,128,0,0,1763,1765,3,262,131,0,1764,1762,1,0,0,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1765,1768,1,0,0,0,1766,1764,1,0,0,0,1766,1767,1,0,0,0,1767,407,1,0,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1768,1766,1,0,0,0,1769,1774,3,410,205,0,1770,1771,5,128,0,0,1771,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>1773,3,410,205,0,1772,1770,1,0,0,0,1773,1776,1,0,0,0,1774,1772,1,0,0,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1774,1775,1,0,0,0,1775,409,1,0,0,0,1776,1774,1,0,0,0,1777,1778,3,412,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>206,0,1778,411,1,0,0,0,1779,1780,3,414,207,0,1780,1781,5,146,0,0,1781,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>1782,3,262,131,0,1782,413,1,0,0,0,1783,1784,3,54,27,0,1784,415,1,0,0,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1785,1786,3,418,209,0,1786,417,1,0,0,0,1787,1788,3,420,210,0,1788,419,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1789,1790,5,122,0,0,1790,1791,3,242,121,0,1791,1792,5,123,0,0,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>1792,421,1,0,0,0,1793,1800,7,4,0,0,1794,1800,3,428,214,0,1795,1800,3,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>430,215,0,1796,1800,3,432,216,0,1797,1800,3,430,215,0,1798,1800,3,436,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>218,0,1799,1793,1,0,0,0,1799,1794,1,0,0,0,1799,1795,1,0,0,0,1799,1796,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1799,1797,1,0,0,0,1799,1798,1,0,0,0,1800,423,1,0,0,0,1801,1802,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>3,426,213,0,1802,425,1,0,0,0,1803,1804,7,4,0,0,1804,427,1,0,0,0,1805,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>1806,5,160,0,0,1806,429,1,0,0,0,1807,1808,5,158,0,0,1808,431,1,0,0,0,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>1809,1810,3,434,217,0,1810,433,1,0,0,0,1811,1813,5,158,0,0,1812,1811,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1812,1813,1,0,0,0,1813,1814,1,0,0,0,1814,1815,5,140,0,0,1815,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>1818,7,9,0,0,1816,1818,5,159,0,0,1817,1812,1,0,0,0,1817,1816,1,0,0,0,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>1818,435,1,0,0,0,1819,1820,5,115,0,0,1820,437,1,0,0,0,1821,1822,3,76,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>38,0,1822,1823,5,56,0,0,1823,1824,3,130,65,0,1824,1825,3,94,47,0,1825,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>439,1,0,0,0,1826,1827,3,140,70,0,1827,1828,5,45,0,0,1828,1829,3,444,222,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1829,1830,3,94,47,0,1830,441,1,0,0,0,1831,1832,3,140,70,0,1832,1833,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>5,94,0,0,1833,1834,5,45,0,0,1834,1835,3,444,222,0,1835,1836,3,94,47,0,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>1836,443,1,0,0,0,1837,1839,3,144,72,0,1838,1840,3,462,231,0,1839,1838,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1839,1840,1,0,0,0,1840,1843,1,0,0,0,1841,1842,5,70,0,0,1842,1844,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>3,446,223,0,1843,1841,1,0,0,0,1843,1844,1,0,0,0,1844,1850,1,0,0,0,1845,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>1846,5,47,0,0,1846,1847,3,452,226,0,1847,1848,5,96,0,0,1848,1849,3,452,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>226,0,1849,1851,1,0,0,0,1850,1845,1,0,0,0,1850,1851,1,0,0,0,1851,1860,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1852,1854,5,11,0,0,1853,1852,1,0,0,0,1853,1854,1,0,0,0,1854,1855,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1855,1856,3,452,226,0,1856,1857,5,96,0,0,1857,1858,3,452,226,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1858,1860,1,0,0,0,1859,1837,1,0,0,0,1859,1853,1,0,0,0,1860,445,1,0,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1861,1862,3,448,224,0,1862,447,1,0,0,0,1863,1864,3,6,3,0,1864,1866,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>3,450,225,0,1865,1867,3,462,231,0,1866,1865,1,0,0,0,1866,1867,1,0,0,0,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>1867,1877,1,0,0,0,1868,1870,3,178,89,0,1869,1871,3,478,239,0,1870,1869,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1870,1871,1,0,0,0,1871,1877,1,0,0,0,1872,1874,3,478,239,0,1873,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>1875,3,178,89,0,1874,1873,1,0,0,0,1874,1875,1,0,0,0,1875,1877,1,0,0,0,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>1876,1863,1,0,0,0,1876,1868,1,0,0,0,1876,1872,1,0,0,0,1877,449,1,0,0,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1878,1880,3,160,80,0,1879,1878,1,0,0,0,1880,1883,1,0,0,0,1881,1879,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1881,1882,1,0,0,0,1882,1884,1,0,0,0,1883,1881,1,0,0,0,1884,1886,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>3,158,79,0,1885,1887,3,160,80,0,1886,1885,1,0,0,0,1886,1887,1,0,0,0,1887,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>451,1,0,0,0,1888,1889,3,454,227,0,1889,453,1,0,0,0,1890,1891,3,184,92,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1891,1892,5,140,0,0,1892,1894,1,0,0,0,1893,1890,1,0,0,0,1893,1894,1,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1894,1895,1,0,0,0,1895,1896,3,456,228,0,1896,455,1,0,0,0,1897,1898,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>3,458,229,0,1898,457,1,0,0,0,1899,1900,3,460,230,0,1900,459,1,0,0,0,1901,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>1902,3,54,27,0,1902,461,1,0,0,0,1903,1904,3,464,232,0,1904,463,1,0,0,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1905,1912,5,146,0,0,1906,1912,5,145,0,0,1907,1909,5,29,0,0,1908,1910,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>7,10,0,0,1909,1908,1,0,0,0,1909,1910,1,0,0,0,1910,1912,1,0,0,0,1911,1905,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1911,1906,1,0,0,0,1911,1907,1,0,0,0,1912,1913,1,0,0,0,1913,1914,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>3,264,132,0,1914,465,1,0,0,0,1915,1916,5,144,0,0,1916,1917,3,264,132,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1917,467,1,0,0,0,1918,1921,3,470,235,0,1919,1921,3,472,236,0,1920,1918,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1920,1919,1,0,0,0,1921,469,1,0,0,0,1922,1923,5,65,0,0,1923,1924,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>3,6,3,0,1924,1925,3,168,84,0,1925,1926,3,94,47,0,1926,471,1,0,0,0,1927,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>1928,5,65,0,0,1928,1929,3,6,3,0,1929,1930,3,478,239,0,1930,1931,3,94,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>47,0,1931,473,1,0,0,0,1932,1933,3,478,239,0,1933,475,1,0,0,0,1934,1935,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>3,478,239,0,1935,477,1,0,0,0,1936,1940,5,126,0,0,1937,1938,3,480,240,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1938,1939,5,141,0,0,1939,1941,1,0,0,0,1940,1937,1,0,0,0,1940,1941,1,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,1941,1942,1,0,0,0,1942,1943,3,480,240,0,1943,1944,5,127,0,0,1944,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>479,1,0,0,0,1945,1946,3,482,241,0,1946,481,1,0,0,0,1947,1950,3,422,211,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1948,1950,3,392,196,0,1949,1947,1,0,0,0,1949,1948,1,0,0,0,1950,483,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1951,1953,3,76,38,0,1952,1951,1,0,0,0,1952,1953,1,0,0,0,1953,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>1954,1,0,0,0,1954,1957,5,63,0,0,1955,1958,3,6,3,0,1956,1958,3,130,65,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>0,1957,1955,1,0,0,0,1957,1956,1,0,0,0,1958,1960,1,0,0,0,1959,1961,5,155,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1960,1959,1,0,0,0,1960,1961,1,0,0,0,1961,1964,1,0,0,0,1962,1963,5,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>3,0,0,1963,1965,5,155,0,0,1964,1962,1,0,0,0,1964,1965,1,0,0,0,1965,1966,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,1966,1967,3,94,47,0,1967,485,1,0,0,0,1968,1969,5,130,0,0,1969,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>1970,3,490,245,0,1970,487,1,0,0,0,1971,1972,5,130,0,0,1972,1973,3,490,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>245,0,1973,489,1,0,0,0,1974,1975,3,178,89,0,1975,491,1,0,0,0,1976,1978,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>3,488,244,0,1977,1976,1,0,0,0,1978,1981,1,0,0,0,1979,1977,1,0,0,0,1979,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>1980,1,0,0,0,1980,1982,1,0,0,0,1981,1979,1,0,0,0,1982,1983,7,11,0,0,1983,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>1984,3,494,247,0,1984,1985,5,8,0,0,1985,1986,3,18,9,0,1986,1987,5,128,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,1987,1988,3,18,9,0,1988,493,1,0,0,0,1989,1993,3,6,3,0,1990,1994,5,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>117,0,0,1991,1992,5,99,0,0,1992,1994,5,18,0,0,1993,1990,1,0,0,0,1993,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>1991,1,0,0,0,1994,1996,1,0,0,0,1995,1989,1,0,0,0,1995,1996,1,0,0,0,1996,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>1997,1,0,0,0,1997,1998,3,178,89,0,1998,495,1,0,0,0,1999,2009,5,114,0,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>0,2000,2004,5,124,0,0,2001,2003,3,498,249,0,2002,2001,1,0,0,0,2003,2006,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,2004,2002,1,0,0,0,2004,2005,1,0,0,0,2005,2007,1,0,0,0,2006,2004,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,2007,2009,5,125,0,0,2008,1999,1,0,0,0,2008,2000,1,0,0,0,2009,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>497,1,0,0,0,2010,2015,3,48,24,0,2011,2015,3,500,250,0,2012,2015,3,52,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>26,0,2013,2015,3,58,29,0,2014,2010,1,0,0,0,2014,2011,1,0,0,0,2014,2012,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,2014,2013,1,0,0,0,2015,499,1,0,0,0,2016,2017,3,502,251,0,2017,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>501,1,0,0,0,2018,2020,5,40,0,0,2019,2018,1,0,0,0,2019,2020,1,0,0,0,2020,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>2022,1,0,0,0,2021,2023,7,12,0,0,2022,2021,1,0,0,0,2022,2023,1,0,0,0,2023,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>2024,1,0,0,0,2024,2026,3,188,94,0,2025,2027,3,156,78,0,2026,2025,1,0,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,2026,2027,1,0,0,0,2027,2029,1,0,0,0,2028,2030,3,462,231,0,2029,2028,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>1,0,0,0,2029,2030,1,0,0,0,2030,2031,1,0,0,0,2031,2032,3,496,248,0,2032,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>503,1,0,0,0,2033,2035,3,488,244,0,2034,2033,1,0,0,0,2035,2038,1,0,0,0,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>2036,2034,1,0,0,0,2036,2037,1,0,0,0,2037,2039,1,0,0,0,2038,2036,1,0,0,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>0,2039,2040,3,508,254,0,2040,2041,3,510,255,0,2041,505,1,0,0,0,2042,2044,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>5,105,0,0,2043,2042,1,0,0,0,2043,2044,1,0,0,0,2044,2045,1,0,0,0,2045,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>2049,5,106,0,0,2046,2048,3,488,244,0,2047,2046,1,0,0,0,2048,2051,1,0,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,2049,2047,1,0,0,0,2049,2050,1,0,0,0,2050,2052,1,0,0,0,2051,2049,1,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0,0,2052,2053,3,508,254,0,2053,2054,3,510,255,0,2054,507,1,0,0,0,2055,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>2056,5,74,0,0,2056,2057,3,6,3,0,2057,509,1,0,0,0,2058,2070,5,114,0,0,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>2059,2063,5,124,0,0,2060,2064,3,40,20,0,2061,2064,3,512,256,0,2062,2064,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>3,66,33,0,2063,2060,1,0,0,0,2063,2061,1,0,0,0,2063,2062,1,0,0,0,2064,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>2065,1,0,0,0,2065,2063,1,0,0,0,2065,2066,1,0,0,0,2066,2067,1,0,0,0,2067,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>2068,5,125,0,0,2068,2070,1,0,0,0,2069,2058,1,0,0,0,2069,2059,1,0,0,0,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>2070,511,1,0,0,0,2071,2072,3,42,21,0,2072,2073,5,43,0,0,2073,2074,3,264,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>132,0,2074,2075,5,114,0,0,2075,513,1,0,0,0,2076,2077,3,54,27,0,2077,2078,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>5,144,0,0,2078,2079,3,6,3,0,2079,2080,5,1,0,0,2080,2081,3,54,27,0,2081,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>2082,5,114,0,0,2082,515,1,0,0,0,217,524,530,533,535,542,547,552,556,561,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>568,575,584,597,607,610,612,616,624,630,641,655,662,665,671,684,687,698,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>702,706,710,714,718,721,734,763,775,785,790,794,798,802,804,809,818,828,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>837,846,855,864,872,877,884,896,900,904,909,914,920,924,929,934,940,944,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>948,952,956,966,973,977,981,986,995,1000,1011,1017,1020,1023,1026,1031,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>1034,1037,1040,1043,1046,1051,1057,1062,1066,1071,1075,1081,1084,1090,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>1095,1108,1114,1117,1122,1129,1131,1136,1138,1141,1144,1146,1152,1159,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>1167,1173,1185,1188,1195,1198,1204,1212,1215,1221,1230,1234,1238,1243,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>1246,1249,1252,1265,1272,1277,1282,1288,1294,1314,1332,1341,1344,1359,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>1368,1371,1386,1389,1392,1398,1400,1413,1416,1419,1425,1427,1438,1452,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>1456,1458,1461,1474,1487,1494,1498,1511,1521,1527,1554,1562,1565,1573,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>1586,1626,1630,1645,1668,1671,1693,1717,1727,1732,1748,1757,1766,1774,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>1799,1812,1817,1839,1843,1850,1853,1859,1866,1870,1874,1876,1881,1886,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>1893,1909,1911,1920,1940,1949,1952,1957,1960,1964,1979,1993,1995,2004,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>2008,2014,2019,2022,2026,2029,2036,2043,2049,2063,2065,2069</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>staticData-&gt;serializedATN<sp/>=<sp/>antlr4::atn::SerializedATNView(serializedATNSegment,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serializedATNSegment)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serializedATNSegment[0]));</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>antlr4::atn::ATNDeserializer<sp/>deserializer;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>staticData-&gt;atn<sp/>=<sp/>deserializer.deserialize(staticData-&gt;serializedATN);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>staticData-&gt;atn-&gt;getNumberOfDecisions();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>staticData-&gt;decisionToDFA.reserve(count);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{<sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>staticData-&gt;decisionToDFA.emplace_back(staticData-&gt;atn-&gt;getDecisionState(i),<sp/>i);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>kermlParserStaticData<sp/>=<sp/>std::move(staticData);</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal">KerMLParser::KerMLParser(TokenStream<sp/>*input)<sp/>:<sp/><ref refid="da/d98/class_ker_m_l_parser" kindref="compound">KerMLParser</ref>(input,<sp/>antlr4::atn::ParserATNSimulatorOptions())<sp/>{}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal">KerMLParser::KerMLParser(TokenStream<sp/>*input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>antlr4::atn::ParserATNSimulatorOptions<sp/>&amp;options)<sp/>:<sp/>Parser(input)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>KerMLParser::initialize();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>_interpreter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>atn::ParserATNSimulator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*kermlParserStaticData-&gt;atn,<sp/>kermlParserStaticData-&gt;decisionToDFA,<sp/>kermlParserStaticData-&gt;sharedContextCache,<sp/>options);</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal">KerMLParser::~KerMLParser()<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_interpreter;</highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>atn::ATN&amp;<sp/>KerMLParser::getATN()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*kermlParserStaticData-&gt;atn;</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal">std::string<sp/>KerMLParser::getGrammarFileName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;KerML.g4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>KerMLParser::getRuleNames()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kermlParserStaticData-&gt;ruleNames;</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dfa::Vocabulary&amp;<sp/>KerMLParser::getVocabulary()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kermlParserStaticData-&gt;vocabulary;</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">antlr4::atn::SerializedATNView<sp/>KerMLParser::getSerializedATN()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kermlParserStaticData-&gt;serializedATN;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>StartContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal">KerMLParser::StartContext::StartContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><ref refid="d6/d04/class_ker_m_l_parser_1_1_elements_context" kindref="compound">KerMLParser::ElementsContext</ref>*<sp/>KerMLParser::StartContext::elements()<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ElementsContext&gt;(0);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::StartContext::EOF()<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::EOF,<sp/>0);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::StartContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleStart;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StartContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterStart(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StartContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitStart(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal">KerMLParser::StartContext*<sp/>KerMLParser::start()<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><ref refid="d6/d9d/class_ker_m_l_parser_1_1_start_context" kindref="compound">StartContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d9d/class_ker_m_l_parser_1_1_start_context" kindref="compound">StartContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>0,<sp/>KerMLParser::RuleStart);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(516);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>elements();</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(517);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::EOF);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>StartRuleContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal">KerMLParser::StartRuleContext::StartRuleContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><ref refid="d6/d9d/class_ker_m_l_parser_1_1_start_context" kindref="compound">KerMLParser::StartContext</ref>*<sp/>KerMLParser::StartRuleContext::start()<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::StartContext&gt;(0);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::StartRuleContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleStartRule;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StartRuleContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterStartRule(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StartRuleContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitStartRule(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal">KerMLParser::StartRuleContext*<sp/>KerMLParser::startRule()<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><ref refid="de/da3/class_ker_m_l_parser_1_1_start_rule_context" kindref="compound">StartRuleContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/da3/class_ker_m_l_parser_1_1_start_rule_context" kindref="compound">StartRuleContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>2,<sp/>KerMLParser::RuleStartRule);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(519);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>start();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ElementsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal">KerMLParser::ElementsContext::ElementsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal">std::vector&lt;KerMLParser::ElementContext<sp/>*&gt;<sp/>KerMLParser::ElementsContext::element()<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::ElementContext&gt;();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal">KerMLParser::ElementContext*<sp/>KerMLParser::ElementsContext::element(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ElementContext&gt;(i);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ElementsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleElements;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ElementsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterElements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ElementsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitElements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal">KerMLParser::ElementsContext*<sp/>KerMLParser::elements()<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><ref refid="d6/d04/class_ker_m_l_parser_1_1_elements_context" kindref="compound">ElementsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d04/class_ker_m_l_parser_1_1_elements_context" kindref="compound">ElementsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>4,<sp/>KerMLParser::RuleElements);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(524);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>-5773292089211895232)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>64)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>64))<sp/>&amp;<sp/>78702848638471)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>129)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>129))<sp/>&amp;<sp/>67108867)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(521);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element();</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(526);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>IdentificationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal">KerMLParser::IdentificationContext::IdentificationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::IdentificationContext::SYMBOL_SMALLER()<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SMALLER,<sp/>0);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::IdentificationContext::NAME()<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::NAME,<sp/>0);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::IdentificationContext::SYMBOL_GREATER()<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_GREATER,<sp/>0);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::IdentificationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleIdentification;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::IdentificationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterIdentification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::IdentificationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitIdentification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::identification()<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><ref refid="d9/d18/class_ker_m_l_parser_1_1_identification_context" kindref="compound">IdentificationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d18/class_ker_m_l_parser_1_1_identification_context" kindref="compound">IdentificationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>6,<sp/>KerMLParser::RuleIdentification);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(535);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>3,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(530);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SMALLER)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(527);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SMALLER);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(528);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(529);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_GREATER);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(533);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>2,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(532);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Relationship_bodyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal">KerMLParser::Relationship_bodyContext::Relationship_bodyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Relationship_bodyContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Relationship_bodyContext::SYMBOL_CURLY_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal">KerMLParser::Relationship_onwed_elementsContext*<sp/>KerMLParser::Relationship_bodyContext::relationship_onwed_elements()<sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_onwed_elementsContext&gt;(0);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Relationship_bodyContext::SYMBOL_CURLY_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_bodyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleRelationship_body;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_bodyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterRelationship_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_bodyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitRelationship_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><ref refid="d2/d81/class_ker_m_l_parser_1_1_relationship__body_context" kindref="compound">Relationship_bodyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d81/class_ker_m_l_parser_1_1_relationship__body_context" kindref="compound">Relationship_bodyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>8,<sp/>KerMLParser::RuleRelationship_body);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(542);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STATEMENT_DELIMITER:<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(537);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_CURLY_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(538);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(539);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relationship_onwed_elements();</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(540);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Relationship_onwed_elementsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal">KerMLParser::Relationship_onwed_elementsContext::Relationship_onwed_elementsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal">std::vector&lt;KerMLParser::Relationship_owned_elementContext<sp/>*&gt;<sp/>KerMLParser::Relationship_onwed_elementsContext::relationship_owned_element()<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Relationship_owned_elementContext&gt;();</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal">KerMLParser::Relationship_owned_elementContext*<sp/>KerMLParser::Relationship_onwed_elementsContext::relationship_owned_element(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_owned_elementContext&gt;(i);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_onwed_elementsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleRelationship_onwed_elements;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_onwed_elementsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterRelationship_onwed_elements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_onwed_elementsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitRelationship_onwed_elements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal">KerMLParser::Relationship_onwed_elementsContext*<sp/>KerMLParser::relationship_onwed_elements()<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><ref refid="d7/dbb/class_ker_m_l_parser_1_1_relationship__onwed__elements_context" kindref="compound">Relationship_onwed_elementsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/dbb/class_ker_m_l_parser_1_1_relationship__onwed__elements_context" kindref="compound">Relationship_onwed_elementsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>10,<sp/>KerMLParser::RuleRelationship_onwed_elements);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(547);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>-5773292089211895232)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>64)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>64))<sp/>&amp;<sp/>78702848638471)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>129)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>129))<sp/>&amp;<sp/>67108867)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(544);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>relationship_owned_element();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(549);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Relationship_owned_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal">KerMLParser::Relationship_owned_elementContext::Relationship_owned_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><ref refid="de/d07/class_ker_m_l_parser_1_1_owned__related__element_context" kindref="compound">KerMLParser::Owned_related_elementContext</ref>*<sp/>KerMLParser::Relationship_owned_elementContext::owned_related_element()<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_related_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal">KerMLParser::Owned_annotationContext*<sp/>KerMLParser::Relationship_owned_elementContext::owned_annotation()<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_annotationContext&gt;(0);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_owned_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleRelationship_owned_element;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_owned_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterRelationship_owned_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Relationship_owned_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitRelationship_owned_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal">KerMLParser::Relationship_owned_elementContext*<sp/>KerMLParser::relationship_owned_element()<sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><ref refid="d6/d8f/class_ker_m_l_parser_1_1_relationship__owned__element_context" kindref="compound">Relationship_owned_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d8f/class_ker_m_l_parser_1_1_relationship__owned__element_context" kindref="compound">Relationship_owned_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>12,<sp/>KerMLParser::RuleRelationship_owned_element);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(552);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>6,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(550);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_related_element();</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(551);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_annotation();</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_related_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal">KerMLParser::Owned_related_elementContext::Owned_related_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><ref refid="d9/d8d/class_ker_m_l_parser_1_1_non__feature__element_context" kindref="compound">KerMLParser::Non_feature_elementContext</ref>*<sp/>KerMLParser::Owned_related_elementContext::non_feature_element()<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Non_feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal">KerMLParser::Feature_elementContext*<sp/>KerMLParser::Owned_related_elementContext::feature_element()<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_related_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_related_element;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_related_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_related_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_related_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_related_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal">KerMLParser::Owned_related_elementContext*<sp/>KerMLParser::owned_related_element()<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><ref refid="de/d07/class_ker_m_l_parser_1_1_owned__related__element_context" kindref="compound">Owned_related_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d07/class_ker_m_l_parser_1_1_owned__related__element_context" kindref="compound">Owned_related_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>14,<sp/>KerMLParser::RuleOwned_related_element);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(556);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>7,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(554);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>non_feature_element();</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(555);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_element();</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>DependencyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal">KerMLParser::DependencyContext::DependencyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DependencyContext::KEYWORD_DEPENDENCY()<sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DEPENDENCY,<sp/>0);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal">std::vector&lt;KerMLParser::Qualified_nameContext<sp/>*&gt;<sp/>KerMLParser::DependencyContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Qualified_nameContext&gt;();</highlight></codeline>
<codeline lineno="1601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::DependencyContext::qualified_name(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(i);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DependencyContext::KEYWORD_TO()<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TO,<sp/>0);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::DependencyContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal">std::vector&lt;KerMLParser::Prefix_metadata_annotationContext<sp/>*&gt;<sp/>KerMLParser::DependencyContext::prefix_metadata_annotation()<sp/>{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Prefix_metadata_annotationContext&gt;();</highlight></codeline>
<codeline lineno="1617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal">KerMLParser::Prefix_metadata_annotationContext*<sp/>KerMLParser::DependencyContext::prefix_metadata_annotation(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_annotationContext&gt;(i);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::DependencyContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DependencyContext::KEYWORD_FROM()<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FROM,<sp/>0);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::DependencyContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DependencyContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::DependencyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleDependency;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DependencyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterDependency(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DependencyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitDependency(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal">KerMLParser::DependencyContext*<sp/>KerMLParser::dependency()<sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><ref refid="d5/d4d/class_ker_m_l_parser_1_1_dependency_context" kindref="compound">DependencyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d4d/class_ker_m_l_parser_1_1_dependency_context" kindref="compound">DependencyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>16,<sp/>KerMLParser::RuleDependency);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(561);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_HASHTAG)<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(558);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_annotation();</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(563);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(564);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DEPENDENCY);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(568);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>9,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(565);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(566);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FROM);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(570);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(575);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(571);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(572);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(577);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(578);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_TO);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(579);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(584);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(580);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(581);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(586);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(587);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>AnnotationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal">KerMLParser::AnnotationContext::AnnotationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::AnnotationContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::AnnotationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleAnnotation;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::AnnotationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterAnnotation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::AnnotationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitAnnotation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal">KerMLParser::AnnotationContext*<sp/>KerMLParser::annotation()<sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><ref refid="db/dba/class_ker_m_l_parser_1_1_annotation_context" kindref="compound">AnnotationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/dba/class_ker_m_l_parser_1_1_annotation_context" kindref="compound">AnnotationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>18,<sp/>KerMLParser::RuleAnnotation);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(589);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_annotationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal">KerMLParser::Owned_annotationContext::Owned_annotationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><ref refid="d9/d2b/class_ker_m_l_parser_1_1_annotating__element_context" kindref="compound">KerMLParser::Annotating_elementContext</ref>*<sp/>KerMLParser::Owned_annotationContext::annotating_element()<sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Annotating_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_annotationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_annotation;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_annotationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_annotation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_annotationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_annotation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal">KerMLParser::Owned_annotationContext*<sp/>KerMLParser::owned_annotation()<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><ref refid="d2/d92/class_ker_m_l_parser_1_1_owned__annotation_context" kindref="compound">Owned_annotationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d92/class_ker_m_l_parser_1_1_owned__annotation_context" kindref="compound">Owned_annotationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>20,<sp/>KerMLParser::RuleOwned_annotation);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(591);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>annotating_element();</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Annotating_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal">KerMLParser::Annotating_elementContext::Annotating_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><ref refid="d7/de6/class_ker_m_l_parser_1_1_comment_context" kindref="compound">KerMLParser::CommentContext</ref>*<sp/>KerMLParser::Annotating_elementContext::comment()<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::CommentContext&gt;(0);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal">KerMLParser::DocumentationContext*<sp/>KerMLParser::Annotating_elementContext::documentation()<sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::DocumentationContext&gt;(0);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal">KerMLParser::Textual_representationContext*<sp/>KerMLParser::Annotating_elementContext::textual_representation()<sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Textual_representationContext&gt;(0);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal">KerMLParser::Metadata_featureContext*<sp/>KerMLParser::Annotating_elementContext::metadata_feature()<sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_featureContext&gt;(0);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Annotating_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleAnnotating_element;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Annotating_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterAnnotating_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Annotating_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitAnnotating_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal">KerMLParser::Annotating_elementContext*<sp/>KerMLParser::annotating_element()<sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><ref refid="d9/d2b/class_ker_m_l_parser_1_1_annotating__element_context" kindref="compound">Annotating_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d2b/class_ker_m_l_parser_1_1_annotating__element_context" kindref="compound">Annotating_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>22,<sp/>KerMLParser::RuleAnnotating_element);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(597);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_COMMENT:</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_LOCALE:</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::REGULAR_COMMENT:<sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(593);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comment();</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_DOC:<sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(594);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation();</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_LANGUAGE:</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_REP:<sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(595);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textual_representation();</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_METADATA:</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_AT:</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_HASHTAG:<sp/>{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(596);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata_feature();</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>CommentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal">KerMLParser::CommentContext::CommentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::CommentContext::REGULAR_COMMENT()<sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::REGULAR_COMMENT,<sp/>0);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::CommentContext::KEYWORD_COMMENT()<sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_COMMENT,<sp/>0);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::CommentContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::CommentContext::KEYWORD_LOCALE()<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_LOCALE,<sp/>0);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::CommentContext::STRING_VALUE()<sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::STRING_VALUE,<sp/>0);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::CommentContext::KEYWORD_ABOUT()<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ABOUT,<sp/>0);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal">std::vector&lt;KerMLParser::AnnotationContext<sp/>*&gt;<sp/>KerMLParser::CommentContext::annotation()<sp/>{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::AnnotationContext&gt;();</highlight></codeline>
<codeline lineno="1979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal">KerMLParser::AnnotationContext*<sp/>KerMLParser::CommentContext::annotation(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::AnnotationContext&gt;(i);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::CommentContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::CommentContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::CommentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleComment;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::CommentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterComment(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::CommentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitComment(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal">KerMLParser::CommentContext*<sp/>KerMLParser::comment()<sp/>{</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><ref refid="d7/de6/class_ker_m_l_parser_1_1_comment_context" kindref="compound">CommentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/de6/class_ker_m_l_parser_1_1_comment_context" kindref="compound">CommentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>24,<sp/>KerMLParser::RuleComment);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(612);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_COMMENT)<sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(599);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_COMMENT);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(600);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(610);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ABOUT)<sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(601);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ABOUT);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(602);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annotation();</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(607);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(603);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(604);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annotation();</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(609);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(616);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_LOCALE)<sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(614);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_LOCALE);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(615);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::STRING_VALUE);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(618);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::REGULAR_COMMENT);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>DocumentationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal">KerMLParser::DocumentationContext::DocumentationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DocumentationContext::KEYWORD_DOC()<sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DOC,<sp/>0);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::DocumentationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DocumentationContext::REGULAR_COMMENT()<sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::REGULAR_COMMENT,<sp/>0);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DocumentationContext::KEYWORD_LOCALE()<sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_LOCALE,<sp/>0);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DocumentationContext::STRING_VALUE()<sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::STRING_VALUE,<sp/>0);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::DocumentationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleDocumentation;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DocumentationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterDocumentation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DocumentationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitDocumentation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal">KerMLParser::DocumentationContext*<sp/>KerMLParser::documentation()<sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><ref refid="dc/d24/class_ker_m_l_parser_1_1_documentation_context" kindref="compound">DocumentationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d24/class_ker_m_l_parser_1_1_documentation_context" kindref="compound">DocumentationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>26,<sp/>KerMLParser::RuleDocumentation);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(620);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DOC);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(621);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(624);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_LOCALE)<sp/>{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(622);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_LOCALE);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(623);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::STRING_VALUE);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(626);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::REGULAR_COMMENT);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Textual_representationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal">KerMLParser::Textual_representationContext::Textual_representationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Textual_representationContext::KEYWORD_LANGUAGE()<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_LANGUAGE,<sp/>0);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Textual_representationContext::STRING_VALUE()<sp/>{</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::STRING_VALUE,<sp/>0);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Textual_representationContext::REGULAR_COMMENT()<sp/>{</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::REGULAR_COMMENT,<sp/>0);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Textual_representationContext::KEYWORD_REP()<sp/>{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_REP,<sp/>0);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Textual_representationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Textual_representationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleTextual_representation;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Textual_representationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterTextual_representation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Textual_representationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitTextual_representation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal">KerMLParser::Textual_representationContext*<sp/>KerMLParser::textual_representation()<sp/>{</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><ref refid="da/d2a/class_ker_m_l_parser_1_1_textual__representation_context" kindref="compound">Textual_representationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d2a/class_ker_m_l_parser_1_1_textual__representation_context" kindref="compound">Textual_representationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>28,<sp/>KerMLParser::RuleTextual_representation);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(630);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_REP)<sp/>{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(628);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_REP);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(629);</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(632);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_LANGUAGE);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(633);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::STRING_VALUE);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(634);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::REGULAR_COMMENT);</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Root_namespaceContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal">KerMLParser::Root_namespaceContext::Root_namespaceContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><ref refid="d8/d28/class_ker_m_l_parser_1_1_namespace__body__elements_context" kindref="compound">KerMLParser::Namespace_body_elementsContext</ref>*<sp/>KerMLParser::Root_namespaceContext::namespace_body_elements()<sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_body_elementsContext&gt;(0);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Root_namespaceContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleRoot_namespace;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Root_namespaceContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterRoot_namespace(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Root_namespaceContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitRoot_namespace(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal">KerMLParser::Root_namespaceContext*<sp/>KerMLParser::root_namespace()<sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><ref refid="dd/dcd/class_ker_m_l_parser_1_1_root__namespace_context" kindref="compound">Root_namespaceContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dd/dcd/class_ker_m_l_parser_1_1_root__namespace_context" kindref="compound">Root_namespaceContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>30,<sp/>KerMLParser::RuleRoot_namespace);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(636);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>namespace_body_elements();</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>NamespaceContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal">KerMLParser::NamespaceContext::NamespaceContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><ref refid="d1/dbc/class_ker_m_l_parser_1_1_namespace__declaration_context" kindref="compound">KerMLParser::Namespace_declarationContext</ref>*<sp/>KerMLParser::NamespaceContext::namespace_declaration()<sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal">KerMLParser::Namespace_bodyContext*<sp/>KerMLParser::NamespaceContext::namespace_body()<sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal">std::vector&lt;KerMLParser::Prefix_metadata_memberContext<sp/>*&gt;<sp/>KerMLParser::NamespaceContext::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Prefix_metadata_memberContext&gt;();</highlight></codeline>
<codeline lineno="2316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::NamespaceContext::prefix_metadata_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::NamespaceContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::NamespaceContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::NamespaceContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal">KerMLParser::NamespaceContext*<sp/>KerMLParser::namespace_()<sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><ref refid="dc/d16/class_ker_m_l_parser_1_1_namespace_context" kindref="compound">NamespaceContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d16/class_ker_m_l_parser_1_1_namespace_context" kindref="compound">NamespaceContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>32,<sp/>KerMLParser::RuleNamespace);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(641);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_HASHTAG)<sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(638);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_member();</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(643);</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(644);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/>namespace_declaration();</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(645);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>namespace_body();</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Namespace_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal">KerMLParser::Namespace_declarationContext::Namespace_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Namespace_declarationContext::KEYWORD_NAMESPACE()<sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_NAMESPACE,<sp/>0);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Namespace_declarationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace_declaration;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal">KerMLParser::Namespace_declarationContext*<sp/>KerMLParser::namespace_declaration()<sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><ref refid="d1/dbc/class_ker_m_l_parser_1_1_namespace__declaration_context" kindref="compound">Namespace_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/dbc/class_ker_m_l_parser_1_1_namespace__declaration_context" kindref="compound">Namespace_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>34,<sp/>KerMLParser::RuleNamespace_declaration);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(647);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_NAMESPACE);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(648);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Namespace_bodyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal">KerMLParser::Namespace_bodyContext::Namespace_bodyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Namespace_bodyContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Namespace_bodyContext::SYMBOL_CURLY_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal">KerMLParser::Namespace_body_elementContext*<sp/>KerMLParser::Namespace_bodyContext::namespace_body_element()<sp/>{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_body_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Namespace_bodyContext::SYMBOL_CURLY_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_bodyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace_body;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_bodyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_bodyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal">KerMLParser::Namespace_bodyContext*<sp/>KerMLParser::namespace_body()<sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><ref refid="dc/de2/class_ker_m_l_parser_1_1_namespace__body_context" kindref="compound">Namespace_bodyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/de2/class_ker_m_l_parser_1_1_namespace__body_context" kindref="compound">Namespace_bodyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>36,<sp/>KerMLParser::RuleNamespace_body);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(655);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STATEMENT_DELIMITER:<sp/>{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(650);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_CURLY_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(651);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(652);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace_body_element();</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(653);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Namespace_body_elementsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal">KerMLParser::Namespace_body_elementsContext::Namespace_body_elementsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><ref refid="d6/d04/class_ker_m_l_parser_1_1_elements_context" kindref="compound">KerMLParser::ElementsContext</ref>*<sp/>KerMLParser::Namespace_body_elementsContext::elements()<sp/>{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ElementsContext&gt;(0);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_body_elementsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace_body_elements;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_body_elementsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace_body_elements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_body_elementsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace_body_elements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal">KerMLParser::Namespace_body_elementsContext*<sp/>KerMLParser::namespace_body_elements()<sp/>{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><ref refid="d8/d28/class_ker_m_l_parser_1_1_namespace__body__elements_context" kindref="compound">Namespace_body_elementsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d28/class_ker_m_l_parser_1_1_namespace__body__elements_context" kindref="compound">Namespace_body_elementsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>38,<sp/>KerMLParser::RuleNamespace_body_elements);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(657);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/>elements();</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Namespace_body_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal">KerMLParser::Namespace_body_elementContext::Namespace_body_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><ref refid="d3/d2d/class_ker_m_l_parser_1_1_namespace__member_context" kindref="compound">KerMLParser::Namespace_memberContext</ref>*<sp/>KerMLParser::Namespace_body_elementContext::namespace_member()<sp/>{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal">KerMLParser::Alias_memberContext*<sp/>KerMLParser::Namespace_body_elementContext::alias_member()<sp/>{</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Alias_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal">KerMLParser::Namespace_importContext*<sp/>KerMLParser::Namespace_body_elementContext::namespace_import()<sp/>{</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_importContext&gt;(0);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_body_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace_body_element;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_body_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace_body_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_body_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace_body_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal">KerMLParser::Namespace_body_elementContext*<sp/>KerMLParser::namespace_body_element()<sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><ref refid="d5/d85/class_ker_m_l_parser_1_1_namespace__body__element_context" kindref="compound">Namespace_body_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d85/class_ker_m_l_parser_1_1_namespace__body__element_context" kindref="compound">Namespace_body_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>40,<sp/>KerMLParser::RuleNamespace_body_element);</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(662);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>21,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(659);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namespace_member();</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(660);</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alias_member();</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(661);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namespace_import();</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Member_prefixContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal">KerMLParser::Member_prefixContext::Member_prefixContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><ref refid="d2/d4b/class_ker_m_l_parser_1_1_visibility__indicator_context" kindref="compound">KerMLParser::Visibility_indicatorContext</ref>*<sp/>KerMLParser::Member_prefixContext::visibility_indicator()<sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Visibility_indicatorContext&gt;(0);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Member_prefixContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMember_prefix;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Member_prefixContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMember_prefix(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Member_prefixContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMember_prefix(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal">KerMLParser::Member_prefixContext*<sp/>KerMLParser::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">Member_prefixContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">Member_prefixContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>42,<sp/>KerMLParser::RuleMember_prefix);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(665);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>22,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(664);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visibility_indicator();</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Visibility_indicatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal">KerMLParser::Visibility_indicatorContext::Visibility_indicatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Visibility_indicatorContext::KEYWORD_PUBLIC()<sp/>{</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_PUBLIC,<sp/>0);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Visibility_indicatorContext::KEYWORD_PRIVATE()<sp/>{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_PRIVATE,<sp/>0);</highlight></codeline>
<codeline lineno="2737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Visibility_indicatorContext::KEYWORD_PROTECTED()<sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_PROTECTED,<sp/>0);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Visibility_indicatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleVisibility_indicator;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Visibility_indicatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterVisibility_indicator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Visibility_indicatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitVisibility_indicator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal">KerMLParser::Visibility_indicatorContext*<sp/>KerMLParser::visibility_indicator()<sp/>{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><ref refid="d2/d4b/class_ker_m_l_parser_1_1_visibility__indicator_context" kindref="compound">Visibility_indicatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d4b/class_ker_m_l_parser_1_1_visibility__indicator_context" kindref="compound">Visibility_indicatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>44,<sp/>KerMLParser::RuleVisibility_indicator);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(667);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((((_la<sp/>-<sp/>77)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>77))<sp/>&amp;<sp/>7)<sp/>!=<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Namespace_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal">KerMLParser::Namespace_memberContext::Namespace_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><ref refid="da/d55/class_ker_m_l_parser_1_1_non__feature__member_context" kindref="compound">KerMLParser::Non_feature_memberContext</ref>*<sp/>KerMLParser::Namespace_memberContext::non_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Non_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal">KerMLParser::Namespace_feature_memberContext*<sp/>KerMLParser::Namespace_memberContext::namespace_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="2807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace_member;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal">KerMLParser::Namespace_memberContext*<sp/>KerMLParser::namespace_member()<sp/>{</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><ref refid="d3/d2d/class_ker_m_l_parser_1_1_namespace__member_context" kindref="compound">Namespace_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d2d/class_ker_m_l_parser_1_1_namespace__member_context" kindref="compound">Namespace_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>46,<sp/>KerMLParser::RuleNamespace_member);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(671);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>23,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(669);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>non_feature_member();</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(670);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namespace_feature_member();</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Non_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal">KerMLParser::Non_feature_memberContext::Non_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Non_feature_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal">KerMLParser::Non_feature_elementContext*<sp/>KerMLParser::Non_feature_memberContext::non_feature_element()<sp/>{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Non_feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNon_feature_member;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNon_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNon_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal">KerMLParser::Non_feature_memberContext*<sp/>KerMLParser::non_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><ref refid="da/d55/class_ker_m_l_parser_1_1_non__feature__member_context" kindref="compound">Non_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d55/class_ker_m_l_parser_1_1_non__feature__member_context" kindref="compound">Non_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>48,<sp/>KerMLParser::RuleNon_feature_member);</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(673);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(674);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>non_feature_element();</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Namespace_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal">KerMLParser::Namespace_feature_memberContext::Namespace_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Namespace_feature_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal">KerMLParser::Feature_elementContext*<sp/>KerMLParser::Namespace_feature_memberContext::feature_element()<sp/>{</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace_feature_member;</highlight></codeline>
<codeline lineno="2945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal">KerMLParser::Namespace_feature_memberContext*<sp/>KerMLParser::namespace_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><ref refid="d4/d99/class_ker_m_l_parser_1_1_namespace__feature__member_context" kindref="compound">Namespace_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/d99/class_ker_m_l_parser_1_1_namespace__feature__member_context" kindref="compound">Namespace_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>50,<sp/>KerMLParser::RuleNamespace_feature_member);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(676);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(677);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_element();</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Alias_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal">KerMLParser::Alias_memberContext::Alias_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="2991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Alias_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Alias_memberContext::KEYWORD_ALIAS()<sp/>{</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALIAS,<sp/>0);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Alias_memberContext::KEYWORD_FOR()<sp/>{</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FOR,<sp/>0);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::Alias_memberContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::Alias_memberContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Alias_memberContext::SYMBOL_SMALLER()<sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SMALLER,<sp/>0);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Alias_memberContext::NAME()<sp/>{</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Alias_memberContext::NAME(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::NAME,<sp/>i);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Alias_memberContext::SYMBOL_GREATER()<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_GREATER,<sp/>0);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Alias_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleAlias_member;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Alias_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterAlias_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Alias_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitAlias_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal">KerMLParser::Alias_memberContext*<sp/>KerMLParser::alias_member()<sp/>{</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><ref refid="db/dee/class_ker_m_l_parser_1_1_alias__member_context" kindref="compound">Alias_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/dee/class_ker_m_l_parser_1_1_alias__member_context" kindref="compound">Alias_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>52,<sp/>KerMLParser::RuleAlias_member);</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(679);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(680);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALIAS);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(684);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SMALLER)<sp/>{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(681);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SMALLER);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(682);</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(683);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_GREATER);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(687);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(686);</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(689);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FOR);</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(690);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(691);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Qualified_nameContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal">KerMLParser::Qualified_nameContext::Qualified_nameContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Qualified_nameContext::NAME()<sp/>{</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Qualified_nameContext::NAME(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::NAME,<sp/>i);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Qualified_nameContext::SYMBOL_NAMESPACE_SUBSET()<sp/>{</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_NAMESPACE_SUBSET);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Qualified_nameContext::SYMBOL_NAMESPACE_SUBSET(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_NAMESPACE_SUBSET,<sp/>i);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Qualified_nameContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleQualified_name;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Qualified_nameContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterQualified_name(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Qualified_nameContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitQualified_name(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">Qualified_nameContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">Qualified_nameContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>54,<sp/>KerMLParser::RuleQualified_name);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alt;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(693);</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(698);</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>26,<sp/>_ctx);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(694);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_NAMESPACE_SUBSET);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(695);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);<sp/></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(700);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>26,<sp/>_ctx);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Namespace_importContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal">KerMLParser::Namespace_importContext::Namespace_importContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Namespace_importContext::KEYWORD_IMPORT()<sp/>{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_IMPORT,<sp/>0);</highlight></codeline>
<codeline lineno="3189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal">KerMLParser::Import_declarationContext*<sp/>KerMLParser::Namespace_importContext::import_declaration()<sp/>{</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Import_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal">KerMLParser::Visibility_indicatorContext*<sp/>KerMLParser::Namespace_importContext::visibility_indicator()<sp/>{</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Visibility_indicatorContext&gt;(0);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Namespace_importContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="3201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::Namespace_importContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"></highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_importContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamespace_import;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_importContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamespace_import(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Namespace_importContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamespace_import(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal">KerMLParser::Namespace_importContext*<sp/>KerMLParser::namespace_import()<sp/>{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><ref refid="d3/da6/class_ker_m_l_parser_1_1_namespace__import_context" kindref="compound">Namespace_importContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/da6/class_ker_m_l_parser_1_1_namespace__import_context" kindref="compound">Namespace_importContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>56,<sp/>KerMLParser::RuleNamespace_import);</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(702);</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((((_la<sp/>-<sp/>77)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>77))<sp/>&amp;<sp/>7)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(701);</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visibility_indicator();</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(704);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_IMPORT);</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(706);</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(705);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(708);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/>import_declaration();</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(710);</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>29,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(709);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Import_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal">KerMLParser::Import_declarationContext::Import_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><ref refid="df/d2f/class_ker_m_l_parser_1_1_membership__import_context" kindref="compound">KerMLParser::Membership_importContext</ref>*<sp/>KerMLParser::Import_declarationContext::membership_import()<sp/>{</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Membership_importContext&gt;(0);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal">KerMLParser::Namespace_importContext*<sp/>KerMLParser::Import_declarationContext::namespace_import()<sp/>{</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_importContext&gt;(0);</highlight></codeline>
<codeline lineno="3295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Import_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleImport_declaration;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Import_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterImport_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Import_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitImport_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal">KerMLParser::Import_declarationContext*<sp/>KerMLParser::import_declaration()<sp/>{</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><ref refid="d8/d95/class_ker_m_l_parser_1_1_import__declaration_context" kindref="compound">Import_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d95/class_ker_m_l_parser_1_1_import__declaration_context" kindref="compound">Import_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>58,<sp/>KerMLParser::RuleImport_declaration);</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(714);</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::NAME:<sp/>{</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(712);</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>membership_import();</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_IMPORT:</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_PRIVATE:</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_PROTECTED:</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_PUBLIC:<sp/>{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(713);</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace_import();</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Membership_importContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal">KerMLParser::Membership_importContext::Membership_importContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Membership_importContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="3368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Membership_importContext::SYMBOL_NAMESPACE_SUBSET()<sp/>{</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_NAMESPACE_SUBSET,<sp/>0);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Membership_importContext::SYMBOL_DOUBLE_STAR()<sp/>{</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOUBLE_STAR,<sp/>0);</highlight></codeline>
<codeline lineno="3376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Membership_importContext::SYMBOL_STAR()<sp/>{</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STAR,<sp/>0);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Membership_importContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMembership_import;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Membership_importContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMembership_import(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Membership_importContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMembership_import(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal">KerMLParser::Membership_importContext*<sp/>KerMLParser::membership_import()<sp/>{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><ref refid="df/d2f/class_ker_m_l_parser_1_1_membership__import_context" kindref="compound">Membership_importContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d2f/class_ker_m_l_parser_1_1_membership__import_context" kindref="compound">Membership_importContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>60,<sp/>KerMLParser::RuleMembership_import);</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(716);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(718);</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_NAMESPACE_SUBSET)<sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(717);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_NAMESPACE_SUBSET);</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(721);</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>32,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(720);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::SYMBOL_STAR</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DOUBLE_STAR))<sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Filter_packageContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal">KerMLParser::Filter_packageContext::Filter_packageContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><ref refid="d8/d95/class_ker_m_l_parser_1_1_import__declaration_context" kindref="compound">KerMLParser::Import_declarationContext</ref>*<sp/>KerMLParser::Filter_packageContext::import_declaration()<sp/>{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Import_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="3465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal">KerMLParser::Filter_package_memberContext*<sp/>KerMLParser::Filter_packageContext::filter_package_member()<sp/>{</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Filter_package_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="3469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Filter_packageContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFilter_package;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Filter_packageContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFilter_package(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Filter_packageContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFilter_package(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal">KerMLParser::Filter_packageContext*<sp/>KerMLParser::filter_package()<sp/>{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><ref refid="df/d9e/class_ker_m_l_parser_1_1_filter__package_context" kindref="compound">Filter_packageContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d9e/class_ker_m_l_parser_1_1_filter__package_context" kindref="compound">Filter_packageContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>62,<sp/>KerMLParser::RuleFilter_package);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(723);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/>import_declaration();</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(724);</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_package_member();</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Filter_package_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal">KerMLParser::Filter_package_memberContext::Filter_package_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Filter_package_memberContext::SYMBOL_SQUARE_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="3524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal">KerMLParser::Owned_expressionContext*<sp/>KerMLParser::Filter_package_memberContext::owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Filter_package_memberContext::SYMBOL_SQUARE_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SQUARE_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="3532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"></highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Filter_package_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFilter_package_member;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Filter_package_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFilter_package_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Filter_package_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFilter_package_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal">KerMLParser::Filter_package_memberContext*<sp/>KerMLParser::filter_package_member()<sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><ref refid="dc/dda/class_ker_m_l_parser_1_1_filter__package__member_context" kindref="compound">Filter_package_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/dda/class_ker_m_l_parser_1_1_filter__package__member_context" kindref="compound">Filter_package_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>64,<sp/>KerMLParser::RuleFilter_package_member);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(726);</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(727);</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression();</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(728);</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SQUARE_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ElementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal">KerMLParser::ElementContext::ElementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><ref refid="d9/d2b/class_ker_m_l_parser_1_1_annotating__element_context" kindref="compound">KerMLParser::Annotating_elementContext</ref>*<sp/>KerMLParser::ElementContext::annotating_element()<sp/>{</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Annotating_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="3589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal">KerMLParser::Non_feature_elementContext*<sp/>KerMLParser::ElementContext::non_feature_element()<sp/>{</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Non_feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal">KerMLParser::Feature_elementContext*<sp/>KerMLParser::ElementContext::feature_element()<sp/>{</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="3597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal">KerMLParser::Additional_optionsContext*<sp/>KerMLParser::ElementContext::additional_options()<sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Additional_optionsContext&gt;(0);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ElementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleElement;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ElementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterElement(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ElementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitElement(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal">KerMLParser::ElementContext*<sp/>KerMLParser::element()<sp/>{</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><ref refid="d6/de0/class_ker_m_l_parser_1_1_element_context" kindref="compound">ElementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/de0/class_ker_m_l_parser_1_1_element_context" kindref="compound">ElementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>66,<sp/>KerMLParser::RuleElement);</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(734);</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>33,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(730);</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>annotating_element();</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(731);</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>non_feature_element();</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(732);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_element();</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(733);</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>additional_options();</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Non_feature_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal">KerMLParser::Non_feature_elementContext::Non_feature_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="3681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><ref refid="d5/d4d/class_ker_m_l_parser_1_1_dependency_context" kindref="compound">KerMLParser::DependencyContext</ref>*<sp/>KerMLParser::Non_feature_elementContext::dependency()<sp/>{</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::DependencyContext&gt;(0);</highlight></codeline>
<codeline lineno="3685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal">KerMLParser::TypeContext*<sp/>KerMLParser::Non_feature_elementContext::type()<sp/>{</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::TypeContext&gt;(0);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal">KerMLParser::ClassifierContext*<sp/>KerMLParser::Non_feature_elementContext::classifier()<sp/>{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ClassifierContext&gt;(0);</highlight></codeline>
<codeline lineno="3693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal">KerMLParser::Data_typeContext*<sp/>KerMLParser::Non_feature_elementContext::data_type()<sp/>{</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Data_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal">KerMLParser::NamespaceContext*<sp/>KerMLParser::Non_feature_elementContext::namespace_()<sp/>{</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::NamespaceContext&gt;(0);</highlight></codeline>
<codeline lineno="3701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal">KerMLParser::ClassContext*<sp/>KerMLParser::Non_feature_elementContext::class_()<sp/>{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ClassContext&gt;(0);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal">KerMLParser::StructureContext*<sp/>KerMLParser::Non_feature_elementContext::structure()<sp/>{</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::StructureContext&gt;(0);</highlight></codeline>
<codeline lineno="3709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal">KerMLParser::MetaclassContext*<sp/>KerMLParser::Non_feature_elementContext::metaclass()<sp/>{</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::MetaclassContext&gt;(0);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal">KerMLParser::AssociationContext*<sp/>KerMLParser::Non_feature_elementContext::association()<sp/>{</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::AssociationContext&gt;(0);</highlight></codeline>
<codeline lineno="3717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal">KerMLParser::Association_structureContext*<sp/>KerMLParser::Non_feature_elementContext::association_structure()<sp/>{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Association_structureContext&gt;(0);</highlight></codeline>
<codeline lineno="3721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal">KerMLParser::InteractionContext*<sp/>KerMLParser::Non_feature_elementContext::interaction()<sp/>{</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::InteractionContext&gt;(0);</highlight></codeline>
<codeline lineno="3725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal">KerMLParser::BehaviorContext*<sp/>KerMLParser::Non_feature_elementContext::behavior()<sp/>{</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::BehaviorContext&gt;(0);</highlight></codeline>
<codeline lineno="3729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal">KerMLParser::FunctionContext*<sp/>KerMLParser::Non_feature_elementContext::function()<sp/>{</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::FunctionContext&gt;(0);</highlight></codeline>
<codeline lineno="3733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal">KerMLParser::PredicateContext*<sp/>KerMLParser::Non_feature_elementContext::predicate()<sp/>{</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::PredicateContext&gt;(0);</highlight></codeline>
<codeline lineno="3737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal">KerMLParser::MultiplicityContext*<sp/>KerMLParser::Non_feature_elementContext::multiplicity()<sp/>{</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::MultiplicityContext&gt;(0);</highlight></codeline>
<codeline lineno="3741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal">KerMLParser::PackageContext*<sp/>KerMLParser::Non_feature_elementContext::package()<sp/>{</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::PackageContext&gt;(0);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal">KerMLParser::Library_packageContext*<sp/>KerMLParser::Non_feature_elementContext::library_package()<sp/>{</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Library_packageContext&gt;(0);</highlight></codeline>
<codeline lineno="3749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal">KerMLParser::SpecializationContext*<sp/>KerMLParser::Non_feature_elementContext::specialization()<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SpecializationContext&gt;(0);</highlight></codeline>
<codeline lineno="3753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal">KerMLParser::ConjunctionContext*<sp/>KerMLParser::Non_feature_elementContext::conjunction()<sp/>{</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ConjunctionContext&gt;(0);</highlight></codeline>
<codeline lineno="3757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal">KerMLParser::SubclassificationContext*<sp/>KerMLParser::Non_feature_elementContext::subclassification()<sp/>{</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SubclassificationContext&gt;(0);</highlight></codeline>
<codeline lineno="3761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal">KerMLParser::DisjoiningContext*<sp/>KerMLParser::Non_feature_elementContext::disjoining()<sp/>{</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::DisjoiningContext&gt;(0);</highlight></codeline>
<codeline lineno="3765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal">KerMLParser::Feature_invertingContext*<sp/>KerMLParser::Non_feature_elementContext::feature_inverting()<sp/>{</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_invertingContext&gt;(0);</highlight></codeline>
<codeline lineno="3769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal">KerMLParser::Feature_typingContext*<sp/>KerMLParser::Non_feature_elementContext::feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal">KerMLParser::SubsettingContext*<sp/>KerMLParser::Non_feature_elementContext::subsetting()<sp/>{</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SubsettingContext&gt;(0);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal">KerMLParser::RedefinitionContext*<sp/>KerMLParser::Non_feature_elementContext::redefinition()<sp/>{</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::RedefinitionContext&gt;(0);</highlight></codeline>
<codeline lineno="3781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal">KerMLParser::Type_featuringContext*<sp/>KerMLParser::Non_feature_elementContext::type_featuring()<sp/>{</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_featuringContext&gt;(0);</highlight></codeline>
<codeline lineno="3785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal">KerMLParser::Namespace_importContext*<sp/>KerMLParser::Non_feature_elementContext::namespace_import()<sp/>{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_importContext&gt;(0);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNon_feature_element;</highlight></codeline>
<codeline lineno="3794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNon_feature_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNon_feature_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal">KerMLParser::Non_feature_elementContext*<sp/>KerMLParser::non_feature_element()<sp/>{</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><ref refid="d9/d8d/class_ker_m_l_parser_1_1_non__feature__element_context" kindref="compound">Non_feature_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d8d/class_ker_m_l_parser_1_1_non__feature__element_context" kindref="compound">Non_feature_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>68,<sp/>KerMLParser::RuleNon_feature_element);</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(763);</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>34,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(736);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dependency();</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(737);</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type();</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(738);</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classifier();</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(739);</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_type();</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>5);</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(740);</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namespace_();</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>6);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(741);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_();</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>7);</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(742);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>structure();</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>8);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(743);</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metaclass();</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>9);</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(744);</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>association();</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>10);</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(745);</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>association_structure();</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:<sp/>{</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>11);</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(746);</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interaction();</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:<sp/>{</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>12);</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(747);</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>behavior();</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:<sp/>{</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>13);</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(748);</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>function();</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:<sp/>{</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>14);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(749);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>predicate();</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:<sp/>{</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>15);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(750);</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity();</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:<sp/>{</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>16);</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(751);</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>package();</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>17:<sp/>{</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>17);</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(752);</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>library_package();</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>18:<sp/>{</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>18);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(753);</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specialization();</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>19:<sp/>{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>19);</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(754);</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjunction();</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>20:<sp/>{</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>20);</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(755);</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subclassification();</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>21:<sp/>{</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>21);</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(756);</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>disjoining();</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>22:<sp/>{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>22);</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(757);</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_inverting();</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>23:<sp/>{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>23);</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(758);</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_typing();</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24:<sp/>{</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>24);</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(759);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsetting();</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>25:<sp/>{</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>25);</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(760);</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>redefinition();</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>26:<sp/>{</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>26);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(761);</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_featuring();</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>27:<sp/>{</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>27);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(762);</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namespace_import();</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal">KerMLParser::Feature_elementContext::Feature_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><ref refid="d6/d78/class_ker_m_l_parser_1_1_feature_context" kindref="compound">KerMLParser::FeatureContext</ref>*<sp/>KerMLParser::Feature_elementContext::feature()<sp/>{</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::FeatureContext&gt;(0);</highlight></codeline>
<codeline lineno="4034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal">KerMLParser::StepContext*<sp/>KerMLParser::Feature_elementContext::step()<sp/>{</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::StepContext&gt;(0);</highlight></codeline>
<codeline lineno="4038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal">KerMLParser::ExpressionContext*<sp/>KerMLParser::Feature_elementContext::expression()<sp/>{</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ExpressionContext&gt;(0);</highlight></codeline>
<codeline lineno="4042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal">KerMLParser::Boolean_expressionContext*<sp/>KerMLParser::Feature_elementContext::boolean_expression()<sp/>{</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Boolean_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="4046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal">KerMLParser::InvariantContext*<sp/>KerMLParser::Feature_elementContext::invariant()<sp/>{</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::InvariantContext&gt;(0);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal">KerMLParser::ConnectorContext*<sp/>KerMLParser::Feature_elementContext::connector()<sp/>{</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ConnectorContext&gt;(0);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal">KerMLParser::Binding_connectorContext*<sp/>KerMLParser::Feature_elementContext::binding_connector()<sp/>{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Binding_connectorContext&gt;(0);</highlight></codeline>
<codeline lineno="4058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight></codeline>
<codeline lineno="4060"><highlight class="normal">KerMLParser::SuccessionContext*<sp/>KerMLParser::Feature_elementContext::succession()<sp/>{</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SuccessionContext&gt;(0);</highlight></codeline>
<codeline lineno="4062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal">KerMLParser::Item_flowContext*<sp/>KerMLParser::Feature_elementContext::item_flow()<sp/>{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flowContext&gt;(0);</highlight></codeline>
<codeline lineno="4066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal">KerMLParser::Succession_item_flowContext*<sp/>KerMLParser::Feature_elementContext::succession_item_flow()<sp/>{</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Succession_item_flowContext&gt;(0);</highlight></codeline>
<codeline lineno="4070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_element;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal">KerMLParser::Feature_elementContext*<sp/>KerMLParser::feature_element()<sp/>{</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><ref refid="d9/d8c/class_ker_m_l_parser_1_1_feature__element_context" kindref="compound">Feature_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d8c/class_ker_m_l_parser_1_1_feature__element_context" kindref="compound">Feature_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>70,<sp/>KerMLParser::RuleFeature_element);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(775);</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>35,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(765);</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature();</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(766);</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>step();</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(767);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expression();</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"></highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(768);</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boolean_expression();</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>5);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(769);</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invariant();</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>6);</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(770);</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>connector();</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>7);</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(771);</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binding_connector();</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"></highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>8);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(772);</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>succession();</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>9);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(773);</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item_flow();</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"></highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>{</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>10);</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(774);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>succession_item_flow();</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Additional_optionsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight></codeline>
<codeline lineno="4190"><highlight class="normal">KerMLParser::Additional_optionsContext::Additional_optionsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><ref refid="d5/d2d/class_ker_m_l_parser_1_1_meta__assignment_context" kindref="compound">KerMLParser::Meta_assignmentContext</ref>*<sp/>KerMLParser::Additional_optionsContext::meta_assignment()<sp/>{</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Meta_assignmentContext&gt;(0);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Additional_optionsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleAdditional_options;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Additional_optionsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterAdditional_options(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Additional_optionsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitAdditional_options(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal">KerMLParser::Additional_optionsContext*<sp/>KerMLParser::additional_options()<sp/>{</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><ref refid="d1/d7d/class_ker_m_l_parser_1_1_additional__options_context" kindref="compound">Additional_optionsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d7d/class_ker_m_l_parser_1_1_additional__options_context" kindref="compound">Additional_optionsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>72,<sp/>KerMLParser::RuleAdditional_options);</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(777);</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/>meta_assignment();</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"></highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>TypeContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal">KerMLParser::TypeContext::TypeContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::TypeContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="4249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::TypeContext::KEYWORD_TYPE()<sp/>{</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TYPE,<sp/>0);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal">KerMLParser::Type_declarationContext*<sp/>KerMLParser::TypeContext::type_declaration()<sp/>{</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="4257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight></codeline>
<codeline lineno="4259"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::TypeContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="4261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::TypeContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::TypeContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::TypeContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal">KerMLParser::TypeContext*<sp/>KerMLParser::type()<sp/>{</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><ref refid="d6/dfe/class_ker_m_l_parser_1_1_type_context" kindref="compound">TypeContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/dfe/class_ker_m_l_parser_1_1_type_context" kindref="compound">TypeContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>74,<sp/>KerMLParser::RuleType);</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(779);</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(780);</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_TYPE);</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(781);</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/>type_declaration();</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(782);</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"></highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_prefixContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4313"><highlight class="normal"></highlight></codeline>
<codeline lineno="4314"><highlight class="normal">KerMLParser::Type_prefixContext::Type_prefixContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_prefixContext::KEYWORD_ABSTRACT()<sp/>{</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ABSTRACT,<sp/>0);</highlight></codeline>
<codeline lineno="4320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"></highlight></codeline>
<codeline lineno="4322"><highlight class="normal">std::vector&lt;KerMLParser::Prefix_metadata_memberContext<sp/>*&gt;<sp/>KerMLParser::Type_prefixContext::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Prefix_metadata_memberContext&gt;();</highlight></codeline>
<codeline lineno="4324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::Type_prefixContext::prefix_metadata_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="4328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"></highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_prefixContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_prefix;</highlight></codeline>
<codeline lineno="4333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_prefixContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_prefix(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_prefixContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_prefix(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal">KerMLParser::Type_prefixContext*<sp/>KerMLParser::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">Type_prefixContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">Type_prefixContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>76,<sp/>KerMLParser::RuleType_prefix);</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(785);</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ABSTRACT)<sp/>{</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(784);</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ABSTRACT);</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(790);</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_HASHTAG)<sp/>{</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(787);</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_member();</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(792);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"></highlight></codeline>
<codeline lineno="4392"><highlight class="normal">KerMLParser::Type_declarationContext::Type_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"></highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><ref refid="d9/d18/class_ker_m_l_parser_1_1_identification_context" kindref="compound">KerMLParser::IdentificationContext</ref>*<sp/>KerMLParser::Type_declarationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_declarationContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal">KerMLParser::Multiplicity_boundsContext*<sp/>KerMLParser::Type_declarationContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="4406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"></highlight></codeline>
<codeline lineno="4408"><highlight class="normal">std::vector&lt;KerMLParser::Specialization_partContext<sp/>*&gt;<sp/>KerMLParser::Type_declarationContext::specialization_part()<sp/>{</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Specialization_partContext&gt;();</highlight></codeline>
<codeline lineno="4410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal">KerMLParser::Specialization_partContext*<sp/>KerMLParser::Type_declarationContext::specialization_part(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Specialization_partContext&gt;(i);</highlight></codeline>
<codeline lineno="4414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"></highlight></codeline>
<codeline lineno="4416"><highlight class="normal">std::vector&lt;KerMLParser::Conjugation_partContext<sp/>*&gt;<sp/>KerMLParser::Type_declarationContext::conjugation_part()<sp/>{</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Conjugation_partContext&gt;();</highlight></codeline>
<codeline lineno="4418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal">KerMLParser::Conjugation_partContext*<sp/>KerMLParser::Type_declarationContext::conjugation_part(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Conjugation_partContext&gt;(i);</highlight></codeline>
<codeline lineno="4422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal">std::vector&lt;KerMLParser::Type_relationship_partContext<sp/>*&gt;<sp/>KerMLParser::Type_declarationContext::type_relationship_part()<sp/>{</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Type_relationship_partContext&gt;();</highlight></codeline>
<codeline lineno="4426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal">KerMLParser::Type_relationship_partContext*<sp/>KerMLParser::Type_declarationContext::type_relationship_part(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_relationship_partContext&gt;(i);</highlight></codeline>
<codeline lineno="4430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_declaration;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"></highlight></codeline>
<codeline lineno="4449"><highlight class="normal">KerMLParser::Type_declarationContext*<sp/>KerMLParser::type_declaration()<sp/>{</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><ref refid="dc/d90/class_ker_m_l_parser_1_1_type__declaration_context" kindref="compound">Type_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d90/class_ker_m_l_parser_1_1_type__declaration_context" kindref="compound">Type_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>78,<sp/>KerMLParser::RuleType_declaration);</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(794);</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(793);</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(796);</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(798);</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(797);</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(802);<sp/></highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(802);</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SPECIALIZES:<sp/>{</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(800);</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specialization_part();</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::CONJUNGATES:<sp/>{</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(801);</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conjugation_part();</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(804);<sp/></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SPECIALIZES</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"></highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::CONJUNGATES);</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(809);</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>2251821288521728)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_UNIONS)<sp/>{</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(806);</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_relationship_part();</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(811);</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Specialization_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal">KerMLParser::Specialization_partContext::Specialization_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Specialization_partContext::SPECIALIZES()<sp/>{</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SPECIALIZES,<sp/>0);</highlight></codeline>
<codeline lineno="4539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal">std::vector&lt;KerMLParser::Owned_specializationContext<sp/>*&gt;<sp/>KerMLParser::Specialization_partContext::owned_specialization()<sp/>{</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_specializationContext&gt;();</highlight></codeline>
<codeline lineno="4543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal">KerMLParser::Owned_specializationContext*<sp/>KerMLParser::Specialization_partContext::owned_specialization(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_specializationContext&gt;(i);</highlight></codeline>
<codeline lineno="4547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"></highlight></codeline>
<codeline lineno="4549"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Specialization_partContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="4551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Specialization_partContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="4555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Specialization_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSpecialization_part;</highlight></codeline>
<codeline lineno="4560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Specialization_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSpecialization_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Specialization_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSpecialization_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="normal">KerMLParser::Specialization_partContext*<sp/>KerMLParser::specialization_part()<sp/>{</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><ref refid="db/d0d/class_ker_m_l_parser_1_1_specialization__part_context" kindref="compound">Specialization_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d0d/class_ker_m_l_parser_1_1_specialization__part_context" kindref="compound">Specialization_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>80,<sp/>KerMLParser::RuleSpecialization_part);</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(812);</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SPECIALIZES);</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(813);</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_specialization();</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(818);</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(814);</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(815);</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_specialization();</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(820);</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"></highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Conjugation_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal">KerMLParser::Conjugation_partContext::Conjugation_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight></codeline>
<codeline lineno="4621"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conjugation_partContext::CONJUNGATES()<sp/>{</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::CONJUNGATES,<sp/>0);</highlight></codeline>
<codeline lineno="4623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"></highlight></codeline>
<codeline lineno="4625"><highlight class="normal">KerMLParser::Owned_conjugationContext*<sp/>KerMLParser::Conjugation_partContext::owned_conjugation()<sp/>{</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_conjugationContext&gt;(0);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"></highlight></codeline>
<codeline lineno="4630"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Conjugation_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConjugation_part;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conjugation_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConjugation_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conjugation_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConjugation_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal">KerMLParser::Conjugation_partContext*<sp/>KerMLParser::conjugation_part()<sp/>{</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/class_ker_m_l_parser_1_1_conjugation__part_context" kindref="compound">Conjugation_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/dbb/class_ker_m_l_parser_1_1_conjugation__part_context" kindref="compound">Conjugation_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>82,<sp/>KerMLParser::RuleConjugation_part);</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(821);</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::CONJUNGATES);</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(822);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_conjugation();</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"></highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_relationship_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal">KerMLParser::Type_relationship_partContext::Type_relationship_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"></highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><ref refid="d6/dcb/class_ker_m_l_parser_1_1_disjoining__part_context" kindref="compound">KerMLParser::Disjoining_partContext</ref>*<sp/>KerMLParser::Type_relationship_partContext::disjoining_part()<sp/>{</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Disjoining_partContext&gt;(0);</highlight></codeline>
<codeline lineno="4682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal">KerMLParser::Unioning_partContext*<sp/>KerMLParser::Type_relationship_partContext::unioning_part()<sp/>{</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Unioning_partContext&gt;(0);</highlight></codeline>
<codeline lineno="4686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal">KerMLParser::Intersecting_partContext*<sp/>KerMLParser::Type_relationship_partContext::intersecting_part()<sp/>{</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Intersecting_partContext&gt;(0);</highlight></codeline>
<codeline lineno="4690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"></highlight></codeline>
<codeline lineno="4692"><highlight class="normal">KerMLParser::Differencing_partContext*<sp/>KerMLParser::Type_relationship_partContext::differencing_part()<sp/>{</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Differencing_partContext&gt;(0);</highlight></codeline>
<codeline lineno="4694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_relationship_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_relationship_part;</highlight></codeline>
<codeline lineno="4699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_relationship_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_relationship_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"></highlight></codeline>
<codeline lineno="4707"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_relationship_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_relationship_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal">KerMLParser::Type_relationship_partContext*<sp/>KerMLParser::type_relationship_part()<sp/>{</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><ref refid="d1/d62/class_ker_m_l_parser_1_1_type__relationship__part_context" kindref="compound">Type_relationship_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d62/class_ker_m_l_parser_1_1_type__relationship__part_context" kindref="compound">Type_relationship_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>84,<sp/>KerMLParser::RuleType_relationship_part);</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(828);</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_DISJOINT:<sp/>{</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(824);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disjoining_part();</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"></highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_UNIONS:<sp/>{</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(825);</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unioning_part();</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_INTERSECTS:<sp/>{</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(826);</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersecting_part();</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"></highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_DIFFERENCES:<sp/>{</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(827);</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>differencing_part();</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"></highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Disjoining_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4771"><highlight class="normal"></highlight></codeline>
<codeline lineno="4772"><highlight class="normal">KerMLParser::Disjoining_partContext::Disjoining_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Disjoining_partContext::KEYWORD_DISJOINT()<sp/>{</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DISJOINT,<sp/>0);</highlight></codeline>
<codeline lineno="4778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight></codeline>
<codeline lineno="4780"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Disjoining_partContext::KEYWORD_FROM()<sp/>{</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FROM,<sp/>0);</highlight></codeline>
<codeline lineno="4782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal">std::vector&lt;KerMLParser::Owned_disjoiningContext<sp/>*&gt;<sp/>KerMLParser::Disjoining_partContext::owned_disjoining()<sp/>{</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_disjoiningContext&gt;();</highlight></codeline>
<codeline lineno="4786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal">KerMLParser::Owned_disjoiningContext*<sp/>KerMLParser::Disjoining_partContext::owned_disjoining(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_disjoiningContext&gt;(i);</highlight></codeline>
<codeline lineno="4790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"></highlight></codeline>
<codeline lineno="4792"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Disjoining_partContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="4794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"></highlight></codeline>
<codeline lineno="4796"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Disjoining_partContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="4798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Disjoining_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleDisjoining_part;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Disjoining_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterDisjoining_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Disjoining_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitDisjoining_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal">KerMLParser::Disjoining_partContext*<sp/>KerMLParser::disjoining_part()<sp/>{</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><ref refid="d6/dcb/class_ker_m_l_parser_1_1_disjoining__part_context" kindref="compound">Disjoining_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/dcb/class_ker_m_l_parser_1_1_disjoining__part_context" kindref="compound">Disjoining_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>86,<sp/>KerMLParser::RuleDisjoining_part);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(830);</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DISJOINT);</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(831);</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FROM);</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(832);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_disjoining();</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(837);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(833);</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(834);</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_disjoining();</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(839);</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Unioning_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4861"><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal">KerMLParser::Unioning_partContext::Unioning_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Unioning_partContext::KEYWORD_UNIONS()<sp/>{</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_UNIONS,<sp/>0);</highlight></codeline>
<codeline lineno="4868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"></highlight></codeline>
<codeline lineno="4870"><highlight class="normal">std::vector&lt;KerMLParser::UnioningContext<sp/>*&gt;<sp/>KerMLParser::Unioning_partContext::unioning()<sp/>{</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::UnioningContext&gt;();</highlight></codeline>
<codeline lineno="4872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal">KerMLParser::UnioningContext*<sp/>KerMLParser::Unioning_partContext::unioning(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::UnioningContext&gt;(i);</highlight></codeline>
<codeline lineno="4876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"></highlight></codeline>
<codeline lineno="4878"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Unioning_partContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="4880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Unioning_partContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="4884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"></highlight></codeline>
<codeline lineno="4887"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Unioning_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleUnioning_part;</highlight></codeline>
<codeline lineno="4889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Unioning_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterUnioning_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Unioning_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitUnioning_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"></highlight></codeline>
<codeline lineno="4903"><highlight class="normal">KerMLParser::Unioning_partContext*<sp/>KerMLParser::unioning_part()<sp/>{</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><ref refid="dc/d64/class_ker_m_l_parser_1_1_unioning__part_context" kindref="compound">Unioning_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d64/class_ker_m_l_parser_1_1_unioning__part_context" kindref="compound">Unioning_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>88,<sp/>KerMLParser::RuleUnioning_part);</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"></highlight></codeline>
<codeline lineno="4908"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(840);</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_UNIONS);</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(841);</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/>unioning();</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(846);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(842);</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(843);</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unioning();</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(848);</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Intersecting_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4945"><highlight class="normal"></highlight></codeline>
<codeline lineno="4946"><highlight class="normal">KerMLParser::Intersecting_partContext::Intersecting_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="4948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Intersecting_partContext::KEYWORD_INTERSECTS()<sp/>{</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_INTERSECTS,<sp/>0);</highlight></codeline>
<codeline lineno="4952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"></highlight></codeline>
<codeline lineno="4954"><highlight class="normal">std::vector&lt;KerMLParser::IntersectingContext<sp/>*&gt;<sp/>KerMLParser::Intersecting_partContext::intersecting()<sp/>{</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::IntersectingContext&gt;();</highlight></codeline>
<codeline lineno="4956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"></highlight></codeline>
<codeline lineno="4958"><highlight class="normal">KerMLParser::IntersectingContext*<sp/>KerMLParser::Intersecting_partContext::intersecting(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IntersectingContext&gt;(i);</highlight></codeline>
<codeline lineno="4960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Intersecting_partContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="4964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"></highlight></codeline>
<codeline lineno="4966"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Intersecting_partContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight></codeline>
<codeline lineno="4971"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Intersecting_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleIntersecting_part;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"></highlight></codeline>
<codeline lineno="4975"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Intersecting_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterIntersecting_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"></highlight></codeline>
<codeline lineno="4981"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Intersecting_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitIntersecting_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal">KerMLParser::Intersecting_partContext*<sp/>KerMLParser::intersecting_part()<sp/>{</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><ref refid="de/d92/class_ker_m_l_parser_1_1_intersecting__part_context" kindref="compound">Intersecting_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d92/class_ker_m_l_parser_1_1_intersecting__part_context" kindref="compound">Intersecting_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>90,<sp/>KerMLParser::RuleIntersecting_part);</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight></codeline>
<codeline lineno="4992"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(849);</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_INTERSECTS);</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(850);</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/>intersecting();</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(855);</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(851);</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(852);</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersecting();</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(857);</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"></highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Differencing_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5029"><highlight class="normal"></highlight></codeline>
<codeline lineno="5030"><highlight class="normal">KerMLParser::Differencing_partContext::Differencing_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"></highlight></codeline>
<codeline lineno="5034"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Differencing_partContext::KEYWORD_DIFFERENCES()<sp/>{</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DIFFERENCES,<sp/>0);</highlight></codeline>
<codeline lineno="5036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal">std::vector&lt;KerMLParser::DifferencingContext<sp/>*&gt;<sp/>KerMLParser::Differencing_partContext::differencing()<sp/>{</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::DifferencingContext&gt;();</highlight></codeline>
<codeline lineno="5040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal">KerMLParser::DifferencingContext*<sp/>KerMLParser::Differencing_partContext::differencing(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::DifferencingContext&gt;(i);</highlight></codeline>
<codeline lineno="5044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"></highlight></codeline>
<codeline lineno="5046"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Differencing_partContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="5048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"></highlight></codeline>
<codeline lineno="5050"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Differencing_partContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="5052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"></highlight></codeline>
<codeline lineno="5054"><highlight class="normal"></highlight></codeline>
<codeline lineno="5055"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Differencing_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleDifferencing_part;</highlight></codeline>
<codeline lineno="5057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"></highlight></codeline>
<codeline lineno="5059"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Differencing_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterDifferencing_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"></highlight></codeline>
<codeline lineno="5065"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Differencing_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitDifferencing_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"></highlight></codeline>
<codeline lineno="5071"><highlight class="normal">KerMLParser::Differencing_partContext*<sp/>KerMLParser::differencing_part()<sp/>{</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><ref refid="d5/dd2/class_ker_m_l_parser_1_1_differencing__part_context" kindref="compound">Differencing_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/dd2/class_ker_m_l_parser_1_1_differencing__part_context" kindref="compound">Differencing_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>92,<sp/>KerMLParser::RuleDifferencing_part);</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"></highlight></codeline>
<codeline lineno="5076"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(858);</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DIFFERENCES);</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(859);</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/>differencing();</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(864);</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(860);</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(861);</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>differencing();</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(866);</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"></highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_bodyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5113"><highlight class="normal"></highlight></codeline>
<codeline lineno="5114"><highlight class="normal">KerMLParser::Type_bodyContext::Type_bodyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"></highlight></codeline>
<codeline lineno="5118"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_bodyContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="5120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_bodyContext::SYMBOL_CURLY_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="5124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"></highlight></codeline>
<codeline lineno="5126"><highlight class="normal">KerMLParser::Type_body_elementsContext*<sp/>KerMLParser::Type_bodyContext::type_body_elements()<sp/>{</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_body_elementsContext&gt;(0);</highlight></codeline>
<codeline lineno="5128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"></highlight></codeline>
<codeline lineno="5130"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_bodyContext::SYMBOL_CURLY_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="5132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"></highlight></codeline>
<codeline lineno="5135"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_bodyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_body;</highlight></codeline>
<codeline lineno="5137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"></highlight></codeline>
<codeline lineno="5139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_bodyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"></highlight></codeline>
<codeline lineno="5145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_bodyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"></highlight></codeline>
<codeline lineno="5151"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::type_body()<sp/>{</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><ref refid="d6/dc4/class_ker_m_l_parser_1_1_type__body_context" kindref="compound">Type_bodyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/dc4/class_ker_m_l_parser_1_1_type__body_context" kindref="compound">Type_bodyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>94,<sp/>KerMLParser::RuleType_body);</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"></highlight></codeline>
<codeline lineno="5155"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(872);</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STATEMENT_DELIMITER:<sp/>{</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(867);</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_CURLY_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(868);</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(869);</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_body_elements();</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(870);</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"></highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"></highlight></codeline>
<codeline lineno="5198"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_body_elementsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5199"><highlight class="normal"></highlight></codeline>
<codeline lineno="5200"><highlight class="normal">KerMLParser::Type_body_elementsContext::Type_body_elementsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"></highlight></codeline>
<codeline lineno="5204"><highlight class="normal">std::vector&lt;KerMLParser::ElementContext<sp/>*&gt;<sp/>KerMLParser::Type_body_elementsContext::element()<sp/>{</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::ElementContext&gt;();</highlight></codeline>
<codeline lineno="5206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"></highlight></codeline>
<codeline lineno="5208"><highlight class="normal">KerMLParser::ElementContext*<sp/>KerMLParser::Type_body_elementsContext::element(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ElementContext&gt;(i);</highlight></codeline>
<codeline lineno="5210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_body_elementsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_body_elements;</highlight></codeline>
<codeline lineno="5215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"></highlight></codeline>
<codeline lineno="5217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_body_elementsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_body_elements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"></highlight></codeline>
<codeline lineno="5223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_body_elementsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_body_elements(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"></highlight></codeline>
<codeline lineno="5229"><highlight class="normal">KerMLParser::Type_body_elementsContext*<sp/>KerMLParser::type_body_elements()<sp/>{</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><ref refid="db/d4c/class_ker_m_l_parser_1_1_type__body__elements_context" kindref="compound">Type_body_elementsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d4c/class_ker_m_l_parser_1_1_type__body__elements_context" kindref="compound">Type_body_elementsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>96,<sp/>KerMLParser::RuleType_body_elements);</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(877);</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>-5773292089211895232)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>64)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>64))<sp/>&amp;<sp/>78702848638471)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>129)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>129))<sp/>&amp;<sp/>67108867)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(874);</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element();</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(879);</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"></highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_body_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5268"><highlight class="normal"></highlight></codeline>
<codeline lineno="5269"><highlight class="normal">KerMLParser::Type_body_elementContext::Type_body_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"></highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><ref refid="d6/de0/class_ker_m_l_parser_1_1_element_context" kindref="compound">KerMLParser::ElementContext</ref>*<sp/>KerMLParser::Type_body_elementContext::element()<sp/>{</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ElementContext&gt;(0);</highlight></codeline>
<codeline lineno="5275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"></highlight></codeline>
<codeline lineno="5277"><highlight class="normal"></highlight></codeline>
<codeline lineno="5278"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_body_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_body_element;</highlight></codeline>
<codeline lineno="5280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"></highlight></codeline>
<codeline lineno="5282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_body_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_body_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"></highlight></codeline>
<codeline lineno="5288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_body_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_body_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"></highlight></codeline>
<codeline lineno="5294"><highlight class="normal">KerMLParser::Type_body_elementContext*<sp/>KerMLParser::type_body_element()<sp/>{</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><ref refid="dc/da3/class_ker_m_l_parser_1_1_type__body__element_context" kindref="compound">Type_body_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/da3/class_ker_m_l_parser_1_1_type__body__element_context" kindref="compound">Type_body_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>98,<sp/>KerMLParser::RuleType_body_element);</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"></highlight></codeline>
<codeline lineno="5298"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(880);</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/>element();</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"></highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"></highlight></codeline>
<codeline lineno="5320"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>SpecializationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"></highlight></codeline>
<codeline lineno="5322"><highlight class="normal">KerMLParser::SpecializationContext::SpecializationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight></codeline>
<codeline lineno="5326"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SpecializationContext::KEYWORD_SUBTYPE()<sp/>{</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SUBTYPE,<sp/>0);</highlight></codeline>
<codeline lineno="5328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"></highlight></codeline>
<codeline lineno="5330"><highlight class="normal">KerMLParser::Specific_typeContext*<sp/>KerMLParser::SpecializationContext::specific_type()<sp/>{</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Specific_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="5332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"></highlight></codeline>
<codeline lineno="5334"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SpecializationContext::SPECIALIZES()<sp/>{</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SPECIALIZES,<sp/>0);</highlight></codeline>
<codeline lineno="5336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"></highlight></codeline>
<codeline lineno="5338"><highlight class="normal">KerMLParser::General_typeContext*<sp/>KerMLParser::SpecializationContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="5340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"></highlight></codeline>
<codeline lineno="5342"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::SpecializationContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="5344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"></highlight></codeline>
<codeline lineno="5346"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SpecializationContext::KEYWORD_SPECILIZATION()<sp/>{</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SPECILIZATION,<sp/>0);</highlight></codeline>
<codeline lineno="5348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"></highlight></codeline>
<codeline lineno="5350"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::SpecializationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="5352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"></highlight></codeline>
<codeline lineno="5355"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::SpecializationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSpecialization;</highlight></codeline>
<codeline lineno="5357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"></highlight></codeline>
<codeline lineno="5359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SpecializationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSpecialization(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SpecializationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSpecialization(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"></highlight></codeline>
<codeline lineno="5371"><highlight class="normal">KerMLParser::SpecializationContext*<sp/>KerMLParser::specialization()<sp/>{</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><ref refid="d6/d27/class_ker_m_l_parser_1_1_specialization_context" kindref="compound">SpecializationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d27/class_ker_m_l_parser_1_1_specialization_context" kindref="compound">SpecializationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>100,<sp/>KerMLParser::RuleSpecialization);</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"></highlight></codeline>
<codeline lineno="5376"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(884);</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"></highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_SPECILIZATION)<sp/>{</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(882);</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SPECILIZATION);</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(883);</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(886);</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SUBTYPE);</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(887);</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/>specific_type();</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(888);</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SPECIALIZES);</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(889);</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(890);</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"></highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_specializationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5417"><highlight class="normal"></highlight></codeline>
<codeline lineno="5418"><highlight class="normal">KerMLParser::Owned_specializationContext::Owned_specializationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"></highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><ref refid="d4/d9f/class_ker_m_l_parser_1_1_general__type_context" kindref="compound">KerMLParser::General_typeContext</ref>*<sp/>KerMLParser::Owned_specializationContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="5424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"></highlight></codeline>
<codeline lineno="5426"><highlight class="normal"></highlight></codeline>
<codeline lineno="5427"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_specializationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_specialization;</highlight></codeline>
<codeline lineno="5429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"></highlight></codeline>
<codeline lineno="5431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_specializationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_specialization(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"></highlight></codeline>
<codeline lineno="5437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_specializationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_specialization(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"></highlight></codeline>
<codeline lineno="5443"><highlight class="normal">KerMLParser::Owned_specializationContext*<sp/>KerMLParser::owned_specialization()<sp/>{</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><ref refid="d8/ded/class_ker_m_l_parser_1_1_owned__specialization_context" kindref="compound">Owned_specializationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/ded/class_ker_m_l_parser_1_1_owned__specialization_context" kindref="compound">Owned_specializationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>102,<sp/>KerMLParser::RuleOwned_specialization);</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"></highlight></codeline>
<codeline lineno="5447"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(892);</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"></highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"></highlight></codeline>
<codeline lineno="5469"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Specific_typeContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5470"><highlight class="normal"></highlight></codeline>
<codeline lineno="5471"><highlight class="normal">KerMLParser::Specific_typeContext::Specific_typeContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"></highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Specific_typeContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="5477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"></highlight></codeline>
<codeline lineno="5479"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::Specific_typeContext::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="5481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"></highlight></codeline>
<codeline lineno="5483"><highlight class="normal"></highlight></codeline>
<codeline lineno="5484"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Specific_typeContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSpecific_type;</highlight></codeline>
<codeline lineno="5486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Specific_typeContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSpecific_type(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"></highlight></codeline>
<codeline lineno="5494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Specific_typeContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSpecific_type(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal">KerMLParser::Specific_typeContext*<sp/>KerMLParser::specific_type()<sp/>{</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><ref refid="d3/dd3/class_ker_m_l_parser_1_1_specific__type_context" kindref="compound">Specific_typeContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/dd3/class_ker_m_l_parser_1_1_specific__type_context" kindref="compound">Specific_typeContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>104,<sp/>KerMLParser::RuleSpecific_type);</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"></highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(896);</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>52,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(894);</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"></highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(895);</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"></highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"></highlight></codeline>
<codeline lineno="5543"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>General_typeContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5544"><highlight class="normal"></highlight></codeline>
<codeline lineno="5545"><highlight class="normal">KerMLParser::General_typeContext::General_typeContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"></highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::General_typeContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="5551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"></highlight></codeline>
<codeline lineno="5553"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::General_typeContext::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="5555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"></highlight></codeline>
<codeline lineno="5557"><highlight class="normal"></highlight></codeline>
<codeline lineno="5558"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::General_typeContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleGeneral_type;</highlight></codeline>
<codeline lineno="5560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"></highlight></codeline>
<codeline lineno="5562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::General_typeContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterGeneral_type(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"></highlight></codeline>
<codeline lineno="5568"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::General_typeContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitGeneral_type(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal">KerMLParser::General_typeContext*<sp/>KerMLParser::general_type()<sp/>{</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><ref refid="d4/d9f/class_ker_m_l_parser_1_1_general__type_context" kindref="compound">General_typeContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/d9f/class_ker_m_l_parser_1_1_general__type_context" kindref="compound">General_typeContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>106,<sp/>KerMLParser::RuleGeneral_type);</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"></highlight></codeline>
<codeline lineno="5578"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(900);</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>53,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(898);</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"></highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(899);</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"></highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"></highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"></highlight></codeline>
<codeline lineno="5617"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ConjunctionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5618"><highlight class="normal"></highlight></codeline>
<codeline lineno="5619"><highlight class="normal">KerMLParser::ConjunctionContext::ConjunctionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"></highlight></codeline>
<codeline lineno="5623"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ConjunctionContext::KEYWORD_CONJUGATE()<sp/>{</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_CONJUGATE,<sp/>0);</highlight></codeline>
<codeline lineno="5625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"></highlight></codeline>
<codeline lineno="5627"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ConjunctionContext::CONJUNGATES()<sp/>{</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::CONJUNGATES,<sp/>0);</highlight></codeline>
<codeline lineno="5629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"></highlight></codeline>
<codeline lineno="5631"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::ConjunctionContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="5633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"></highlight></codeline>
<codeline lineno="5635"><highlight class="normal">std::vector&lt;KerMLParser::Qualified_nameContext<sp/>*&gt;<sp/>KerMLParser::ConjunctionContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Qualified_nameContext&gt;();</highlight></codeline>
<codeline lineno="5637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"></highlight></codeline>
<codeline lineno="5639"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::ConjunctionContext::qualified_name(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(i);</highlight></codeline>
<codeline lineno="5641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"></highlight></codeline>
<codeline lineno="5643"><highlight class="normal">std::vector&lt;KerMLParser::Feature_chainContext<sp/>*&gt;<sp/>KerMLParser::ConjunctionContext::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Feature_chainContext&gt;();</highlight></codeline>
<codeline lineno="5645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"></highlight></codeline>
<codeline lineno="5647"><highlight class="normal">KerMLParser::Feature_chainContext*<sp/>KerMLParser::ConjunctionContext::feature_chain(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chainContext&gt;(i);</highlight></codeline>
<codeline lineno="5649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"></highlight></codeline>
<codeline lineno="5651"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ConjunctionContext::KEYWORD_CONJUGATION()<sp/>{</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_CONJUGATION,<sp/>0);</highlight></codeline>
<codeline lineno="5653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"></highlight></codeline>
<codeline lineno="5655"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::ConjunctionContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="5657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"></highlight></codeline>
<codeline lineno="5659"><highlight class="normal"></highlight></codeline>
<codeline lineno="5660"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ConjunctionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConjunction;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"></highlight></codeline>
<codeline lineno="5664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ConjunctionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConjunction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"></highlight></codeline>
<codeline lineno="5670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ConjunctionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConjunction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"></highlight></codeline>
<codeline lineno="5676"><highlight class="normal">KerMLParser::ConjunctionContext*<sp/>KerMLParser::conjunction()<sp/>{</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><ref refid="d8/d7d/class_ker_m_l_parser_1_1_conjunction_context" kindref="compound">ConjunctionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d7d/class_ker_m_l_parser_1_1_conjunction_context" kindref="compound">ConjunctionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>108,<sp/>KerMLParser::RuleConjunction);</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"></highlight></codeline>
<codeline lineno="5681"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(904);</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"></highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_CONJUGATION)<sp/>{</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(902);</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_CONJUGATION);</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(903);</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(906);</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_CONJUGATE);</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(909);</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>55,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(907);</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(908);</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"></highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(911);</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::CONJUNGATES);</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(914);</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>56,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(912);</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"></highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(913);</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(916);</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"></highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_conjugationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"></highlight></codeline>
<codeline lineno="5755"><highlight class="normal">KerMLParser::Owned_conjugationContext::Owned_conjugationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Owned_conjugationContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="5761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"></highlight></codeline>
<codeline lineno="5763"><highlight class="normal">KerMLParser::Feature_chainContext*<sp/>KerMLParser::Owned_conjugationContext::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="5765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"></highlight></codeline>
<codeline lineno="5767"><highlight class="normal"></highlight></codeline>
<codeline lineno="5768"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_conjugationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_conjugation;</highlight></codeline>
<codeline lineno="5770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"></highlight></codeline>
<codeline lineno="5772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_conjugationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_conjugation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"></highlight></codeline>
<codeline lineno="5778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_conjugationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_conjugation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal">KerMLParser::Owned_conjugationContext*<sp/>KerMLParser::owned_conjugation()<sp/>{</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><ref refid="dc/d75/class_ker_m_l_parser_1_1_owned__conjugation_context" kindref="compound">Owned_conjugationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d75/class_ker_m_l_parser_1_1_owned__conjugation_context" kindref="compound">Owned_conjugationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>110,<sp/>KerMLParser::RuleOwned_conjugation);</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"></highlight></codeline>
<codeline lineno="5788"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(920);</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>57,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(918);</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"></highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(919);</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"></highlight></codeline>
<codeline lineno="5827"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>DisjoiningContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5828"><highlight class="normal"></highlight></codeline>
<codeline lineno="5829"><highlight class="normal">KerMLParser::DisjoiningContext::DisjoiningContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"></highlight></codeline>
<codeline lineno="5833"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DisjoiningContext::KEYWORD_DISJOINT()<sp/>{</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DISJOINT,<sp/>0);</highlight></codeline>
<codeline lineno="5835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DisjoiningContext::KEYWORD_FROM()<sp/>{</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FROM,<sp/>0);</highlight></codeline>
<codeline lineno="5839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"></highlight></codeline>
<codeline lineno="5841"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::DisjoiningContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="5843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"></highlight></codeline>
<codeline lineno="5845"><highlight class="normal">std::vector&lt;KerMLParser::Qualified_nameContext<sp/>*&gt;<sp/>KerMLParser::DisjoiningContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Qualified_nameContext&gt;();</highlight></codeline>
<codeline lineno="5847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"></highlight></codeline>
<codeline lineno="5849"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::DisjoiningContext::qualified_name(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(i);</highlight></codeline>
<codeline lineno="5851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"></highlight></codeline>
<codeline lineno="5853"><highlight class="normal">std::vector&lt;KerMLParser::Feature_chainContext<sp/>*&gt;<sp/>KerMLParser::DisjoiningContext::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Feature_chainContext&gt;();</highlight></codeline>
<codeline lineno="5855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"></highlight></codeline>
<codeline lineno="5857"><highlight class="normal">KerMLParser::Feature_chainContext*<sp/>KerMLParser::DisjoiningContext::feature_chain(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chainContext&gt;(i);</highlight></codeline>
<codeline lineno="5859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"></highlight></codeline>
<codeline lineno="5861"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::DisjoiningContext::KEYWORD_DISJOINING()<sp/>{</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DISJOINING,<sp/>0);</highlight></codeline>
<codeline lineno="5863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"></highlight></codeline>
<codeline lineno="5865"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::DisjoiningContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="5867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"></highlight></codeline>
<codeline lineno="5869"><highlight class="normal"></highlight></codeline>
<codeline lineno="5870"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::DisjoiningContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleDisjoining;</highlight></codeline>
<codeline lineno="5872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"></highlight></codeline>
<codeline lineno="5874"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DisjoiningContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterDisjoining(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"></highlight></codeline>
<codeline lineno="5880"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DisjoiningContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitDisjoining(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"></highlight></codeline>
<codeline lineno="5886"><highlight class="normal">KerMLParser::DisjoiningContext*<sp/>KerMLParser::disjoining()<sp/>{</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><ref refid="d5/d36/class_ker_m_l_parser_1_1_disjoining_context" kindref="compound">DisjoiningContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d36/class_ker_m_l_parser_1_1_disjoining_context" kindref="compound">DisjoiningContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>112,<sp/>KerMLParser::RuleDisjoining);</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"></highlight></codeline>
<codeline lineno="5891"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(924);</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"></highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DISJOINING)<sp/>{</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(922);</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DISJOINING);</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(923);</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(926);</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DISJOINT);</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(929);</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>59,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(927);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"></highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(928);</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"></highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(931);</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FROM);</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(934);</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>60,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(932);</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"></highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(933);</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"></highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(936);</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"></highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="5961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"></highlight></codeline>
<codeline lineno="5963"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_disjoiningContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5964"><highlight class="normal"></highlight></codeline>
<codeline lineno="5965"><highlight class="normal">KerMLParser::Owned_disjoiningContext::Owned_disjoiningContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="5967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"></highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Owned_disjoiningContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="5971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"></highlight></codeline>
<codeline lineno="5973"><highlight class="normal">KerMLParser::Feature_chainContext*<sp/>KerMLParser::Owned_disjoiningContext::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="5975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"></highlight></codeline>
<codeline lineno="5978"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_disjoiningContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_disjoining;</highlight></codeline>
<codeline lineno="5980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_disjoiningContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_disjoining(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight></codeline>
<codeline lineno="5988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_disjoiningContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_disjoining(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"></highlight></codeline>
<codeline lineno="5994"><highlight class="normal">KerMLParser::Owned_disjoiningContext*<sp/>KerMLParser::owned_disjoining()<sp/>{</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><ref refid="df/d0c/class_ker_m_l_parser_1_1_owned__disjoining_context" kindref="compound">Owned_disjoiningContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d0c/class_ker_m_l_parser_1_1_owned__disjoining_context" kindref="compound">Owned_disjoiningContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>114,<sp/>KerMLParser::RuleOwned_disjoining);</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"></highlight></codeline>
<codeline lineno="5998"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(940);</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>61,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(938);</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"></highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(939);</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"></highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"></highlight></codeline>
<codeline lineno="6037"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>UnioningContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6038"><highlight class="normal"></highlight></codeline>
<codeline lineno="6039"><highlight class="normal">KerMLParser::UnioningContext::UnioningContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6042"><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::UnioningContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="6045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"></highlight></codeline>
<codeline lineno="6047"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::UnioningContext::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="6049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"></highlight></codeline>
<codeline lineno="6051"><highlight class="normal"></highlight></codeline>
<codeline lineno="6052"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::UnioningContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleUnioning;</highlight></codeline>
<codeline lineno="6054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"></highlight></codeline>
<codeline lineno="6056"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::UnioningContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterUnioning(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"></highlight></codeline>
<codeline lineno="6062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::UnioningContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitUnioning(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"></highlight></codeline>
<codeline lineno="6068"><highlight class="normal">KerMLParser::UnioningContext*<sp/>KerMLParser::unioning()<sp/>{</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><ref refid="d7/d85/class_ker_m_l_parser_1_1_unioning_context" kindref="compound">UnioningContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/d85/class_ker_m_l_parser_1_1_unioning_context" kindref="compound">UnioningContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>116,<sp/>KerMLParser::RuleUnioning);</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"></highlight></codeline>
<codeline lineno="6072"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(944);</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>62,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(942);</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"></highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(943);</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"></highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"></highlight></codeline>
<codeline lineno="6111"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>IntersectingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6112"><highlight class="normal"></highlight></codeline>
<codeline lineno="6113"><highlight class="normal">KerMLParser::IntersectingContext::IntersectingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"></highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::IntersectingContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="6119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"></highlight></codeline>
<codeline lineno="6121"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::IntersectingContext::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="6123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"></highlight></codeline>
<codeline lineno="6125"><highlight class="normal"></highlight></codeline>
<codeline lineno="6126"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::IntersectingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleIntersecting;</highlight></codeline>
<codeline lineno="6128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6129"><highlight class="normal"></highlight></codeline>
<codeline lineno="6130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::IntersectingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterIntersecting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::IntersectingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitIntersecting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"></highlight></codeline>
<codeline lineno="6142"><highlight class="normal">KerMLParser::IntersectingContext*<sp/>KerMLParser::intersecting()<sp/>{</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><ref refid="d1/d5d/class_ker_m_l_parser_1_1_intersecting_context" kindref="compound">IntersectingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d5d/class_ker_m_l_parser_1_1_intersecting_context" kindref="compound">IntersectingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>118,<sp/>KerMLParser::RuleIntersecting);</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(948);</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>63,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(946);</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"></highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(947);</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"></highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"></highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"></highlight></codeline>
<codeline lineno="6185"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>DifferencingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"></highlight></codeline>
<codeline lineno="6187"><highlight class="normal">KerMLParser::DifferencingContext::DifferencingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"></highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::DifferencingContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="6193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"></highlight></codeline>
<codeline lineno="6195"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::DifferencingContext::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="6197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"></highlight></codeline>
<codeline lineno="6199"><highlight class="normal"></highlight></codeline>
<codeline lineno="6200"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::DifferencingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleDifferencing;</highlight></codeline>
<codeline lineno="6202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"></highlight></codeline>
<codeline lineno="6204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DifferencingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterDifferencing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"></highlight></codeline>
<codeline lineno="6210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::DifferencingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitDifferencing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"></highlight></codeline>
<codeline lineno="6216"><highlight class="normal">KerMLParser::DifferencingContext*<sp/>KerMLParser::differencing()<sp/>{</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><ref refid="d5/da0/class_ker_m_l_parser_1_1_differencing_context" kindref="compound">DifferencingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/da0/class_ker_m_l_parser_1_1_differencing_context" kindref="compound">DifferencingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>120,<sp/>KerMLParser::RuleDifferencing);</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"></highlight></codeline>
<codeline lineno="6220"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(952);</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>64,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(950);</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"></highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(951);</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"></highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"></highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"></highlight></codeline>
<codeline lineno="6259"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6260"><highlight class="normal"></highlight></codeline>
<codeline lineno="6261"><highlight class="normal">KerMLParser::Feature_memberContext::Feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"></highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><ref refid="db/ddb/class_ker_m_l_parser_1_1_type__feature__member_context" kindref="compound">KerMLParser::Type_feature_memberContext</ref>*<sp/>KerMLParser::Feature_memberContext::type_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="6267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"></highlight></codeline>
<codeline lineno="6269"><highlight class="normal">KerMLParser::Owned_feature_memberContext*<sp/>KerMLParser::Feature_memberContext::owned_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="6271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"></highlight></codeline>
<codeline lineno="6273"><highlight class="normal"></highlight></codeline>
<codeline lineno="6274"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_member;</highlight></codeline>
<codeline lineno="6276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"></highlight></codeline>
<codeline lineno="6278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"></highlight></codeline>
<codeline lineno="6284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"></highlight></codeline>
<codeline lineno="6290"><highlight class="normal">KerMLParser::Feature_memberContext*<sp/>KerMLParser::feature_member()<sp/>{</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><ref refid="d5/d76/class_ker_m_l_parser_1_1_feature__member_context" kindref="compound">Feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d76/class_ker_m_l_parser_1_1_feature__member_context" kindref="compound">Feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>122,<sp/>KerMLParser::RuleFeature_member);</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"></highlight></codeline>
<codeline lineno="6294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(956);</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>65,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(954);</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_feature_member();</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"></highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(955);</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_member();</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"></highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"></highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"></highlight></codeline>
<codeline lineno="6333"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6334"><highlight class="normal"></highlight></codeline>
<codeline lineno="6335"><highlight class="normal">KerMLParser::Type_feature_memberContext::Type_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"></highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Type_feature_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="6341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"></highlight></codeline>
<codeline lineno="6343"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_feature_memberContext::KEYWORD_MEMBER()<sp/>{</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_MEMBER,<sp/>0);</highlight></codeline>
<codeline lineno="6345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"></highlight></codeline>
<codeline lineno="6347"><highlight class="normal">KerMLParser::Feature_elementContext*<sp/>KerMLParser::Type_feature_memberContext::feature_element()<sp/>{</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="6349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"></highlight></codeline>
<codeline lineno="6351"><highlight class="normal"></highlight></codeline>
<codeline lineno="6352"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_feature_member;</highlight></codeline>
<codeline lineno="6354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"></highlight></codeline>
<codeline lineno="6356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"></highlight></codeline>
<codeline lineno="6368"><highlight class="normal">KerMLParser::Type_feature_memberContext*<sp/>KerMLParser::type_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><ref refid="db/ddb/class_ker_m_l_parser_1_1_type__feature__member_context" kindref="compound">Type_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/ddb/class_ker_m_l_parser_1_1_type__feature__member_context" kindref="compound">Type_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>124,<sp/>KerMLParser::RuleType_feature_member);</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"></highlight></codeline>
<codeline lineno="6372"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(958);</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(959);</highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_MEMBER);</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(960);</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_element();</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"></highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"></highlight></codeline>
<codeline lineno="6398"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6399"><highlight class="normal"></highlight></codeline>
<codeline lineno="6400"><highlight class="normal">KerMLParser::Owned_feature_memberContext::Owned_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"></highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Owned_feature_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="6406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"></highlight></codeline>
<codeline lineno="6408"><highlight class="normal">KerMLParser::Feature_elementContext*<sp/>KerMLParser::Owned_feature_memberContext::feature_element()<sp/>{</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="6410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"></highlight></codeline>
<codeline lineno="6412"><highlight class="normal"></highlight></codeline>
<codeline lineno="6413"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_feature_member;</highlight></codeline>
<codeline lineno="6415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"></highlight></codeline>
<codeline lineno="6417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"></highlight></codeline>
<codeline lineno="6423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"></highlight></codeline>
<codeline lineno="6429"><highlight class="normal">KerMLParser::Owned_feature_memberContext*<sp/>KerMLParser::owned_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><ref refid="d9/d5b/class_ker_m_l_parser_1_1_owned__feature__member_context" kindref="compound">Owned_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d5b/class_ker_m_l_parser_1_1_owned__feature__member_context" kindref="compound">Owned_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>126,<sp/>KerMLParser::RuleOwned_feature_member);</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"></highlight></codeline>
<codeline lineno="6433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(962);</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(963);</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_element();</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"></highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"></highlight></codeline>
<codeline lineno="6457"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ClassifierContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6458"><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="normal">KerMLParser::ClassifierContext::ClassifierContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"></highlight></codeline>
<codeline lineno="6463"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ClassifierContext::KEYWORD_CLASSIFIER()<sp/>{</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_CLASSIFIER,<sp/>0);</highlight></codeline>
<codeline lineno="6465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"></highlight></codeline>
<codeline lineno="6467"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::ClassifierContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="6469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"></highlight></codeline>
<codeline lineno="6471"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::ClassifierContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="6473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"></highlight></codeline>
<codeline lineno="6475"><highlight class="normal">KerMLParser::Type_prefixContext*<sp/>KerMLParser::ClassifierContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="6477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"></highlight></codeline>
<codeline lineno="6479"><highlight class="normal"></highlight></codeline>
<codeline lineno="6480"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ClassifierContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleClassifier;</highlight></codeline>
<codeline lineno="6482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"></highlight></codeline>
<codeline lineno="6484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ClassifierContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterClassifier(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"></highlight></codeline>
<codeline lineno="6490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ClassifierContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitClassifier(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"></highlight></codeline>
<codeline lineno="6496"><highlight class="normal">KerMLParser::ClassifierContext*<sp/>KerMLParser::classifier()<sp/>{</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/><ref refid="db/de1/class_ker_m_l_parser_1_1_classifier_context" kindref="compound">ClassifierContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/de1/class_ker_m_l_parser_1_1_classifier_context" kindref="compound">ClassifierContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>128,<sp/>KerMLParser::RuleClassifier);</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"></highlight></codeline>
<codeline lineno="6500"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(966);</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"></highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>66,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(965);</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"></highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(968);</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_CLASSIFIER);</highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(969);</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(970);</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"></highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"></highlight></codeline>
<codeline lineno="6539"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Classifier_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6540"><highlight class="normal"></highlight></codeline>
<codeline lineno="6541"><highlight class="normal">KerMLParser::Classifier_declarationContext::Classifier_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"></highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><ref refid="d9/d18/class_ker_m_l_parser_1_1_identification_context" kindref="compound">KerMLParser::IdentificationContext</ref>*<sp/>KerMLParser::Classifier_declarationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="6547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Classifier_declarationContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="6551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"></highlight></codeline>
<codeline lineno="6553"><highlight class="normal">KerMLParser::Multiplicity_boundsContext*<sp/>KerMLParser::Classifier_declarationContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="6555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"></highlight></codeline>
<codeline lineno="6557"><highlight class="normal">KerMLParser::Superclassing_partContext*<sp/>KerMLParser::Classifier_declarationContext::superclassing_part()<sp/>{</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Superclassing_partContext&gt;(0);</highlight></codeline>
<codeline lineno="6559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"></highlight></codeline>
<codeline lineno="6561"><highlight class="normal">KerMLParser::Conjugation_partContext*<sp/>KerMLParser::Classifier_declarationContext::conjugation_part()<sp/>{</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Conjugation_partContext&gt;(0);</highlight></codeline>
<codeline lineno="6563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal">std::vector&lt;KerMLParser::Type_relationship_partContext<sp/>*&gt;<sp/>KerMLParser::Classifier_declarationContext::type_relationship_part()<sp/>{</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Type_relationship_partContext&gt;();</highlight></codeline>
<codeline lineno="6567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"></highlight></codeline>
<codeline lineno="6569"><highlight class="normal">KerMLParser::Type_relationship_partContext*<sp/>KerMLParser::Classifier_declarationContext::type_relationship_part(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_relationship_partContext&gt;(i);</highlight></codeline>
<codeline lineno="6571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"></highlight></codeline>
<codeline lineno="6573"><highlight class="normal"></highlight></codeline>
<codeline lineno="6574"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Classifier_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleClassifier_declaration;</highlight></codeline>
<codeline lineno="6576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"></highlight></codeline>
<codeline lineno="6578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Classifier_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterClassifier_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"></highlight></codeline>
<codeline lineno="6584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Classifier_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitClassifier_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"></highlight></codeline>
<codeline lineno="6590"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><ref refid="d4/d4d/class_ker_m_l_parser_1_1_classifier__declaration_context" kindref="compound">Classifier_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/d4d/class_ker_m_l_parser_1_1_classifier__declaration_context" kindref="compound">Classifier_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>130,<sp/>KerMLParser::RuleClassifier_declaration);</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6594"><highlight class="normal"></highlight></codeline>
<codeline lineno="6595"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6597"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(973);</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"></highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(972);</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(975);</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(977);</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"></highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(976);</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(981);</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"></highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>69,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(979);</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>superclassing_part();</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"></highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(980);</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjugation_part();</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(986);</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>2251821288521728)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_UNIONS)<sp/>{</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(983);</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_relationship_part();</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(988);</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"></highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"></highlight></codeline>
<codeline lineno="6663"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Superclassing_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6664"><highlight class="normal"></highlight></codeline>
<codeline lineno="6665"><highlight class="normal">KerMLParser::Superclassing_partContext::Superclassing_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"></highlight></codeline>
<codeline lineno="6669"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Superclassing_partContext::SPECIALIZES()<sp/>{</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SPECIALIZES,<sp/>0);</highlight></codeline>
<codeline lineno="6671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"></highlight></codeline>
<codeline lineno="6673"><highlight class="normal">std::vector&lt;KerMLParser::Owned_subclassificationContext<sp/>*&gt;<sp/>KerMLParser::Superclassing_partContext::owned_subclassification()<sp/>{</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_subclassificationContext&gt;();</highlight></codeline>
<codeline lineno="6675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"></highlight></codeline>
<codeline lineno="6677"><highlight class="normal">KerMLParser::Owned_subclassificationContext*<sp/>KerMLParser::Superclassing_partContext::owned_subclassification(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_subclassificationContext&gt;(i);</highlight></codeline>
<codeline lineno="6679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"></highlight></codeline>
<codeline lineno="6681"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Superclassing_partContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="6683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"></highlight></codeline>
<codeline lineno="6685"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Superclassing_partContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="6687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6688"><highlight class="normal"></highlight></codeline>
<codeline lineno="6689"><highlight class="normal"></highlight></codeline>
<codeline lineno="6690"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Superclassing_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSuperclassing_part;</highlight></codeline>
<codeline lineno="6692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6693"><highlight class="normal"></highlight></codeline>
<codeline lineno="6694"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Superclassing_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSuperclassing_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"></highlight></codeline>
<codeline lineno="6700"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Superclassing_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSuperclassing_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"></highlight></codeline>
<codeline lineno="6706"><highlight class="normal">KerMLParser::Superclassing_partContext*<sp/>KerMLParser::superclassing_part()<sp/>{</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><ref refid="d1/d66/class_ker_m_l_parser_1_1_superclassing__part_context" kindref="compound">Superclassing_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d66/class_ker_m_l_parser_1_1_superclassing__part_context" kindref="compound">Superclassing_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>132,<sp/>KerMLParser::RuleSuperclassing_part);</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"></highlight></codeline>
<codeline lineno="6711"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6715"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(989);</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SPECIALIZES);</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(990);</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_subclassification();</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(995);</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(991);</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(992);</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_subclassification();</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(997);</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6743"><highlight class="normal"></highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"></highlight></codeline>
<codeline lineno="6747"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>SubclassificationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6748"><highlight class="normal"></highlight></codeline>
<codeline lineno="6749"><highlight class="normal">KerMLParser::SubclassificationContext::SubclassificationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"></highlight></codeline>
<codeline lineno="6753"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubclassificationContext::KEYWORD_SUBCLASSIFIER()<sp/>{</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SUBCLASSIFIER,<sp/>0);</highlight></codeline>
<codeline lineno="6755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"></highlight></codeline>
<codeline lineno="6757"><highlight class="normal">std::vector&lt;KerMLParser::Qualified_nameContext<sp/>*&gt;<sp/>KerMLParser::SubclassificationContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Qualified_nameContext&gt;();</highlight></codeline>
<codeline lineno="6759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"></highlight></codeline>
<codeline lineno="6761"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::SubclassificationContext::qualified_name(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(i);</highlight></codeline>
<codeline lineno="6763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"></highlight></codeline>
<codeline lineno="6765"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubclassificationContext::SPECIALIZES()<sp/>{</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SPECIALIZES,<sp/>0);</highlight></codeline>
<codeline lineno="6767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"></highlight></codeline>
<codeline lineno="6769"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::SubclassificationContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="6771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"></highlight></codeline>
<codeline lineno="6773"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubclassificationContext::KEYWORD_SPECILIZATION()<sp/>{</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SPECILIZATION,<sp/>0);</highlight></codeline>
<codeline lineno="6775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::SubclassificationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="6779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"></highlight></codeline>
<codeline lineno="6781"><highlight class="normal"></highlight></codeline>
<codeline lineno="6782"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::SubclassificationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSubclassification;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"></highlight></codeline>
<codeline lineno="6786"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubclassificationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSubclassification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"></highlight></codeline>
<codeline lineno="6792"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubclassificationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSubclassification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"></highlight></codeline>
<codeline lineno="6798"><highlight class="normal">KerMLParser::SubclassificationContext*<sp/>KerMLParser::subclassification()<sp/>{</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><ref refid="d8/d21/class_ker_m_l_parser_1_1_subclassification_context" kindref="compound">SubclassificationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d21/class_ker_m_l_parser_1_1_subclassification_context" kindref="compound">SubclassificationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>134,<sp/>KerMLParser::RuleSubclassification);</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"></highlight></codeline>
<codeline lineno="6803"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6805"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1000);</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"></highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_SPECILIZATION)<sp/>{</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(998);</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SPECILIZATION);</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(999);</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1002);</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SUBCLASSIFIER);</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1003);</highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1004);</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SPECIALIZES);</highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1005);</highlight></codeline>
<codeline lineno="6829"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1006);</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"></highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"></highlight></codeline>
<codeline lineno="6843"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_subclassificationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6844"><highlight class="normal"></highlight></codeline>
<codeline lineno="6845"><highlight class="normal">KerMLParser::Owned_subclassificationContext::Owned_subclassificationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Owned_subclassificationContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="6851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"></highlight></codeline>
<codeline lineno="6853"><highlight class="normal"></highlight></codeline>
<codeline lineno="6854"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_subclassificationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_subclassification;</highlight></codeline>
<codeline lineno="6856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"></highlight></codeline>
<codeline lineno="6858"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_subclassificationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_subclassification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"></highlight></codeline>
<codeline lineno="6864"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_subclassificationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_subclassification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"></highlight></codeline>
<codeline lineno="6870"><highlight class="normal">KerMLParser::Owned_subclassificationContext*<sp/>KerMLParser::owned_subclassification()<sp/>{</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><ref refid="df/d28/class_ker_m_l_parser_1_1_owned__subclassification_context" kindref="compound">Owned_subclassificationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d28/class_ker_m_l_parser_1_1_owned__subclassification_context" kindref="compound">Owned_subclassificationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>136,<sp/>KerMLParser::RuleOwned_subclassification);</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"></highlight></codeline>
<codeline lineno="6874"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1008);</highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6892"><highlight class="normal"></highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="6894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"></highlight></codeline>
<codeline lineno="6896"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>FeatureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6897"><highlight class="normal"></highlight></codeline>
<codeline lineno="6898"><highlight class="normal">KerMLParser::FeatureContext::FeatureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="6900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"></highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><ref refid="d6/dc4/class_ker_m_l_parser_1_1_type__body_context" kindref="compound">KerMLParser::Type_bodyContext</ref>*<sp/>KerMLParser::FeatureContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="6904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6905"><highlight class="normal"></highlight></codeline>
<codeline lineno="6906"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::FeatureContext::KEYWORD_FEATURE()<sp/>{</highlight></codeline>
<codeline lineno="6907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FEATURE,<sp/>0);</highlight></codeline>
<codeline lineno="6908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6909"><highlight class="normal"></highlight></codeline>
<codeline lineno="6910"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::FeatureContext::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="6911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="6912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"></highlight></codeline>
<codeline lineno="6914"><highlight class="normal">KerMLParser::Feature_prefixContext*<sp/>KerMLParser::FeatureContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="6916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"></highlight></codeline>
<codeline lineno="6918"><highlight class="normal">KerMLParser::SubsettingsContext*<sp/>KerMLParser::FeatureContext::subsettings()<sp/>{</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SubsettingsContext&gt;(0);</highlight></codeline>
<codeline lineno="6920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"></highlight></codeline>
<codeline lineno="6922"><highlight class="normal">KerMLParser::Feature_assignmentContext*<sp/>KerMLParser::FeatureContext::feature_assignment()<sp/>{</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_assignmentContext&gt;(0);</highlight></codeline>
<codeline lineno="6924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"></highlight></codeline>
<codeline lineno="6926"><highlight class="normal">KerMLParser::Feature_valueContext*<sp/>KerMLParser::FeatureContext::feature_value()<sp/>{</highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="6928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"></highlight></codeline>
<codeline lineno="6930"><highlight class="normal">KerMLParser::Feature_declarationContext*<sp/>KerMLParser::FeatureContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="6932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"></highlight></codeline>
<codeline lineno="6934"><highlight class="normal"></highlight></codeline>
<codeline lineno="6935"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::FeatureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature;</highlight></codeline>
<codeline lineno="6937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"></highlight></codeline>
<codeline lineno="6939"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::FeatureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"></highlight></codeline>
<codeline lineno="6945"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::FeatureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"></highlight></codeline>
<codeline lineno="6951"><highlight class="normal">KerMLParser::FeatureContext*<sp/>KerMLParser::feature()<sp/>{</highlight></codeline>
<codeline lineno="6952"><highlight class="normal"><sp/><sp/><ref refid="d6/d78/class_ker_m_l_parser_1_1_feature_context" kindref="compound">FeatureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d78/class_ker_m_l_parser_1_1_feature_context" kindref="compound">FeatureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>138,<sp/>KerMLParser::RuleFeature);</highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6955"><highlight class="normal"></highlight></codeline>
<codeline lineno="6956"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1011);</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"></highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>73,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1010);</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"></highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1017);</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>74,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1013);</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FEATURE);</highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1014);</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"></highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1015);</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FEATURE);</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"></highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1016);</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_member();</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"></highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1020);</highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"></highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SUBSETS)<sp/>{</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1019);</highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsettings();</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1023);</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"></highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_ASSIGN)<sp/>{</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1022);</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_assignment();</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1026);</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"></highlight></codeline>
<codeline lineno="7023"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="7025"><highlight class="normal"></highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1025);</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_value();</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1028);</highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7036"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"></highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"></highlight></codeline>
<codeline lineno="7043"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_prefixContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7044"><highlight class="normal"></highlight></codeline>
<codeline lineno="7045"><highlight class="normal">KerMLParser::Feature_prefixContext::Feature_prefixContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7048"><highlight class="normal"></highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><ref refid="dc/d3d/class_ker_m_l_parser_1_1_feature__direction_context" kindref="compound">KerMLParser::Feature_directionContext</ref>*<sp/>KerMLParser::Feature_prefixContext::feature_direction()<sp/>{</highlight></codeline>
<codeline lineno="7050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_directionContext&gt;(0);</highlight></codeline>
<codeline lineno="7051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"></highlight></codeline>
<codeline lineno="7053"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_prefixContext::KEYWORD_ABSTRACT()<sp/>{</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ABSTRACT,<sp/>0);</highlight></codeline>
<codeline lineno="7055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"></highlight></codeline>
<codeline lineno="7057"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_prefixContext::KEYWORD_READONLY()<sp/>{</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_READONLY,<sp/>0);</highlight></codeline>
<codeline lineno="7059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7060"><highlight class="normal"></highlight></codeline>
<codeline lineno="7061"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_prefixContext::KEYWORD_DERIVED()<sp/>{</highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DERIVED,<sp/>0);</highlight></codeline>
<codeline lineno="7063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"></highlight></codeline>
<codeline lineno="7065"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_prefixContext::KEYWORD_END()<sp/>{</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_END,<sp/>0);</highlight></codeline>
<codeline lineno="7067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"></highlight></codeline>
<codeline lineno="7069"><highlight class="normal">std::vector&lt;KerMLParser::Prefix_metadata_memberContext<sp/>*&gt;<sp/>KerMLParser::Feature_prefixContext::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Prefix_metadata_memberContext&gt;();</highlight></codeline>
<codeline lineno="7071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"></highlight></codeline>
<codeline lineno="7073"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::Feature_prefixContext::prefix_metadata_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="7075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7076"><highlight class="normal"></highlight></codeline>
<codeline lineno="7077"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_prefixContext::KEYWORD_VAR()<sp/>{</highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_VAR,<sp/>0);</highlight></codeline>
<codeline lineno="7079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"></highlight></codeline>
<codeline lineno="7081"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_prefixContext::KEYWORD_COMPOSITE()<sp/>{</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_COMPOSITE,<sp/>0);</highlight></codeline>
<codeline lineno="7083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7084"><highlight class="normal"></highlight></codeline>
<codeline lineno="7085"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_prefixContext::KEYWORD_PORTION()<sp/>{</highlight></codeline>
<codeline lineno="7086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_PORTION,<sp/>0);</highlight></codeline>
<codeline lineno="7087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7088"><highlight class="normal"></highlight></codeline>
<codeline lineno="7089"><highlight class="normal"></highlight></codeline>
<codeline lineno="7090"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_prefixContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_prefix;</highlight></codeline>
<codeline lineno="7092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"></highlight></codeline>
<codeline lineno="7094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_prefixContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_prefix(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"></highlight></codeline>
<codeline lineno="7100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_prefixContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_prefix(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"></highlight></codeline>
<codeline lineno="7106"><highlight class="normal">KerMLParser::Feature_prefixContext*<sp/>KerMLParser::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">Feature_prefixContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">Feature_prefixContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>140,<sp/>KerMLParser::RuleFeature_prefix);</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"></highlight></codeline>
<codeline lineno="7111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alt;</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1031);</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7123"><highlight class="normal"></highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((((_la<sp/>-<sp/>54)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>54))<sp/>&amp;<sp/>524291)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1030);</highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_direction();</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1034);</highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"></highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ABSTRACT)<sp/>{</highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1033);</highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ABSTRACT);</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1037);</highlight></codeline>
<codeline lineno="7139"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7140"><highlight class="normal"></highlight></codeline>
<codeline lineno="7141"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_COMPOSITE<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_PORTION</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"></highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_VAR)<sp/>{</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1036);</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_COMPOSITE<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_PORTION</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"></highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_VAR))<sp/>{</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7157"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1040);</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"></highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_READONLY)<sp/>{</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1039);</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_READONLY);</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1043);</highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7167"><highlight class="normal"></highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DERIVED)<sp/>{</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1042);</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DERIVED);</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1046);</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"></highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_END)<sp/>{</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1045);</highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_END);</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1051);</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>84,<sp/>_ctx);</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1048);</highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_member();<sp/></highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1053);</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>84,<sp/>_ctx);</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7200"><highlight class="normal"></highlight></codeline>
<codeline lineno="7201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"></highlight></codeline>
<codeline lineno="7204"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_directionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7205"><highlight class="normal"></highlight></codeline>
<codeline lineno="7206"><highlight class="normal">KerMLParser::Feature_directionContext::Feature_directionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7209"><highlight class="normal"></highlight></codeline>
<codeline lineno="7210"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_directionContext::KEYWORD_IN()<sp/>{</highlight></codeline>
<codeline lineno="7211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_IN,<sp/>0);</highlight></codeline>
<codeline lineno="7212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7213"><highlight class="normal"></highlight></codeline>
<codeline lineno="7214"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_directionContext::KEYWORD_OUT()<sp/>{</highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_OUT,<sp/>0);</highlight></codeline>
<codeline lineno="7216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7217"><highlight class="normal"></highlight></codeline>
<codeline lineno="7218"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_directionContext::KEYWORD_INOUT()<sp/>{</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_INOUT,<sp/>0);</highlight></codeline>
<codeline lineno="7220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"></highlight></codeline>
<codeline lineno="7222"><highlight class="normal"></highlight></codeline>
<codeline lineno="7223"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_directionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_direction;</highlight></codeline>
<codeline lineno="7225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7226"><highlight class="normal"></highlight></codeline>
<codeline lineno="7227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_directionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_direction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"></highlight></codeline>
<codeline lineno="7233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_directionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7236"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_direction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"></highlight></codeline>
<codeline lineno="7239"><highlight class="normal">KerMLParser::Feature_directionContext*<sp/>KerMLParser::feature_direction()<sp/>{</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><ref refid="dc/d3d/class_ker_m_l_parser_1_1_feature__direction_context" kindref="compound">Feature_directionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d3d/class_ker_m_l_parser_1_1_feature__direction_context" kindref="compound">Feature_directionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>142,<sp/>KerMLParser::RuleFeature_direction);</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"></highlight></codeline>
<codeline lineno="7244"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1054);</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((((_la<sp/>-<sp/>54)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>54))<sp/>&amp;<sp/>524291)<sp/>!=<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"></highlight></codeline>
<codeline lineno="7271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7273"><highlight class="normal"></highlight></codeline>
<codeline lineno="7274"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7275"><highlight class="normal"></highlight></codeline>
<codeline lineno="7276"><highlight class="normal">KerMLParser::Feature_declarationContext::Feature_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7279"><highlight class="normal"></highlight></codeline>
<codeline lineno="7280"><highlight class="normal"><ref refid="df/d2f/class_ker_m_l_parser_1_1_feature__identification_context" kindref="compound">KerMLParser::Feature_identificationContext</ref>*<sp/>KerMLParser::Feature_declarationContext::feature_identification()<sp/>{</highlight></codeline>
<codeline lineno="7281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_identificationContext&gt;(0);</highlight></codeline>
<codeline lineno="7282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7283"><highlight class="normal"></highlight></codeline>
<codeline lineno="7284"><highlight class="normal">KerMLParser::Feature_specialization_partContext*<sp/>KerMLParser::Feature_declarationContext::feature_specialization_part()<sp/>{</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_specialization_partContext&gt;(0);</highlight></codeline>
<codeline lineno="7286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"></highlight></codeline>
<codeline lineno="7288"><highlight class="normal">KerMLParser::Conjugation_partContext*<sp/>KerMLParser::Feature_declarationContext::conjugation_part()<sp/>{</highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Conjugation_partContext&gt;(0);</highlight></codeline>
<codeline lineno="7290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7291"><highlight class="normal"></highlight></codeline>
<codeline lineno="7292"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_declarationContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="7293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="7294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7295"><highlight class="normal"></highlight></codeline>
<codeline lineno="7296"><highlight class="normal">std::vector&lt;KerMLParser::Feature_relationship_partContext<sp/>*&gt;<sp/>KerMLParser::Feature_declarationContext::feature_relationship_part()<sp/>{</highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Feature_relationship_partContext&gt;();</highlight></codeline>
<codeline lineno="7298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7299"><highlight class="normal"></highlight></codeline>
<codeline lineno="7300"><highlight class="normal">KerMLParser::Feature_relationship_partContext*<sp/>KerMLParser::Feature_declarationContext::feature_relationship_part(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_relationship_partContext&gt;(i);</highlight></codeline>
<codeline lineno="7302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"></highlight></codeline>
<codeline lineno="7304"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Feature_declarationContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="7306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"></highlight></codeline>
<codeline lineno="7308"><highlight class="normal"></highlight></codeline>
<codeline lineno="7309"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_declaration;</highlight></codeline>
<codeline lineno="7311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"></highlight></codeline>
<codeline lineno="7313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"></highlight></codeline>
<codeline lineno="7319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7324"><highlight class="normal"></highlight></codeline>
<codeline lineno="7325"><highlight class="normal">KerMLParser::Feature_declarationContext*<sp/>KerMLParser::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><ref refid="d0/da8/class_ker_m_l_parser_1_1_feature__declaration_context" kindref="compound">Feature_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/da8/class_ker_m_l_parser_1_1_feature__declaration_context" kindref="compound">Feature_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>144,<sp/>KerMLParser::RuleFeature_declaration);</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"></highlight></codeline>
<codeline lineno="7330"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1057);</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"></highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1056);</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1066);</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_SMALLER:</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::NAME:<sp/>{</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1059);</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_identification();</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1062);</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"></highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>86,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="7359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1060);</highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_specialization_part();</highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"></highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1061);</highlight></codeline>
<codeline lineno="7366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conjugation_part();</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7369"><highlight class="normal"></highlight></codeline>
<codeline lineno="7370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"></highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::TYPED_BY:</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SUBSETS:</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::REFERENCES:</highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::REDEFINES:</highlight></codeline>
<codeline lineno="7380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_IN:</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_INOUT:</highlight></codeline>
<codeline lineno="7382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_OUT:</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1064);</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_specialization_part();</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"></highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::CONJUNGATES:<sp/>{</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1065);</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conjugation_part();</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7394"><highlight class="normal"></highlight></codeline>
<codeline lineno="7395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1071);</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>290484396464013312)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_UNIONS)<sp/>{</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1068);</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_relationship_part();</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1073);</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1075);</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"></highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>89,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1074);</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"></highlight></codeline>
<codeline lineno="7419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7422"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7425"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7426"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7429"><highlight class="normal"></highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"></highlight></codeline>
<codeline lineno="7433"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_identificationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7434"><highlight class="normal"></highlight></codeline>
<codeline lineno="7435"><highlight class="normal">KerMLParser::Feature_identificationContext::Feature_identificationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"></highlight></codeline>
<codeline lineno="7439"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_identificationContext::SYMBOL_SMALLER()<sp/>{</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SMALLER,<sp/>0);</highlight></codeline>
<codeline lineno="7441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"></highlight></codeline>
<codeline lineno="7443"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Feature_identificationContext::NAME()<sp/>{</highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="7445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"></highlight></codeline>
<codeline lineno="7447"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_identificationContext::NAME(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::NAME,<sp/>i);</highlight></codeline>
<codeline lineno="7449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"></highlight></codeline>
<codeline lineno="7451"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_identificationContext::SYMBOL_GREATER()<sp/>{</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_GREATER,<sp/>0);</highlight></codeline>
<codeline lineno="7453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"></highlight></codeline>
<codeline lineno="7455"><highlight class="normal"></highlight></codeline>
<codeline lineno="7456"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_identificationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_identification;</highlight></codeline>
<codeline lineno="7458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"></highlight></codeline>
<codeline lineno="7460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_identificationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_identification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"></highlight></codeline>
<codeline lineno="7466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_identificationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_identification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"></highlight></codeline>
<codeline lineno="7472"><highlight class="normal">KerMLParser::Feature_identificationContext*<sp/>KerMLParser::feature_identification()<sp/>{</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/><ref refid="df/d2f/class_ker_m_l_parser_1_1_feature__identification_context" kindref="compound">Feature_identificationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d2f/class_ker_m_l_parser_1_1_feature__identification_context" kindref="compound">Feature_identificationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>146,<sp/>KerMLParser::RuleFeature_identification);</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7476"><highlight class="normal"></highlight></codeline>
<codeline lineno="7477"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7479"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1084);</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_SMALLER:<sp/>{</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1077);</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SMALLER);</highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1078);</highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1079);</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_GREATER);</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1081);</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"></highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="7501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1080);</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7506"><highlight class="normal"></highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::NAME:<sp/>{</highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1083);</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"></highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"></highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7527"><highlight class="normal"></highlight></codeline>
<codeline lineno="7528"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_relationship_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7529"><highlight class="normal"></highlight></codeline>
<codeline lineno="7530"><highlight class="normal">KerMLParser::Feature_relationship_partContext::Feature_relationship_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7531"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7533"><highlight class="normal"></highlight></codeline>
<codeline lineno="7534"><highlight class="normal"><ref refid="d1/d62/class_ker_m_l_parser_1_1_type__relationship__part_context" kindref="compound">KerMLParser::Type_relationship_partContext</ref>*<sp/>KerMLParser::Feature_relationship_partContext::type_relationship_part()<sp/>{</highlight></codeline>
<codeline lineno="7535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_relationship_partContext&gt;(0);</highlight></codeline>
<codeline lineno="7536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7537"><highlight class="normal"></highlight></codeline>
<codeline lineno="7538"><highlight class="normal">KerMLParser::Chaining_partContext*<sp/>KerMLParser::Feature_relationship_partContext::chaining_part()<sp/>{</highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Chaining_partContext&gt;(0);</highlight></codeline>
<codeline lineno="7540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7541"><highlight class="normal"></highlight></codeline>
<codeline lineno="7542"><highlight class="normal">KerMLParser::Inverting_partContext*<sp/>KerMLParser::Feature_relationship_partContext::inverting_part()<sp/>{</highlight></codeline>
<codeline lineno="7543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Inverting_partContext&gt;(0);</highlight></codeline>
<codeline lineno="7544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7545"><highlight class="normal"></highlight></codeline>
<codeline lineno="7546"><highlight class="normal">KerMLParser::Type_featuring_partContext*<sp/>KerMLParser::Feature_relationship_partContext::type_featuring_part()<sp/>{</highlight></codeline>
<codeline lineno="7547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_featuring_partContext&gt;(0);</highlight></codeline>
<codeline lineno="7548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7549"><highlight class="normal"></highlight></codeline>
<codeline lineno="7550"><highlight class="normal"></highlight></codeline>
<codeline lineno="7551"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_relationship_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_relationship_part;</highlight></codeline>
<codeline lineno="7553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"></highlight></codeline>
<codeline lineno="7555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_relationship_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_relationship_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"></highlight></codeline>
<codeline lineno="7561"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_relationship_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7564"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_relationship_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7566"><highlight class="normal"></highlight></codeline>
<codeline lineno="7567"><highlight class="normal">KerMLParser::Feature_relationship_partContext*<sp/>KerMLParser::feature_relationship_part()<sp/>{</highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/><ref refid="d0/d01/class_ker_m_l_parser_1_1_feature__relationship__part_context" kindref="compound">Feature_relationship_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/d01/class_ker_m_l_parser_1_1_feature__relationship__part_context" kindref="compound">Feature_relationship_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>148,<sp/>KerMLParser::RuleFeature_relationship_part);</highlight></codeline>
<codeline lineno="7570"><highlight class="normal"></highlight></codeline>
<codeline lineno="7571"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7576"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7577"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7579"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1090);</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_DIFFERENCES:</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_DISJOINT:</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_INTERSECTS:</highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_UNIONS:<sp/>{</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1086);</highlight></codeline>
<codeline lineno="7588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_relationship_part();</highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7591"><highlight class="normal"></highlight></codeline>
<codeline lineno="7592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_CHAINS:<sp/>{</highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1087);</highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chaining_part();</highlight></codeline>
<codeline lineno="7596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7598"><highlight class="normal"></highlight></codeline>
<codeline lineno="7599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_INVERSE:<sp/>{</highlight></codeline>
<codeline lineno="7600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1088);</highlight></codeline>
<codeline lineno="7602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inverting_part();</highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7605"><highlight class="normal"></highlight></codeline>
<codeline lineno="7606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_FEATURED:<sp/>{</highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="7608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1089);</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_featuring_part();</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"></highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"></highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"></highlight></codeline>
<codeline lineno="7627"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Chaining_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7628"><highlight class="normal"></highlight></codeline>
<codeline lineno="7629"><highlight class="normal">KerMLParser::Chaining_partContext::Chaining_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"></highlight></codeline>
<codeline lineno="7633"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Chaining_partContext::KEYWORD_CHAINS()<sp/>{</highlight></codeline>
<codeline lineno="7634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_CHAINS,<sp/>0);</highlight></codeline>
<codeline lineno="7635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"></highlight></codeline>
<codeline lineno="7637"><highlight class="normal">KerMLParser::Owned_feature_chainingContext*<sp/>KerMLParser::Chaining_partContext::owned_feature_chaining()<sp/>{</highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainingContext&gt;(0);</highlight></codeline>
<codeline lineno="7639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"></highlight></codeline>
<codeline lineno="7641"><highlight class="normal">KerMLParser::Feature_chainContext*<sp/>KerMLParser::Chaining_partContext::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="7643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"></highlight></codeline>
<codeline lineno="7645"><highlight class="normal"></highlight></codeline>
<codeline lineno="7646"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Chaining_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleChaining_part;</highlight></codeline>
<codeline lineno="7648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"></highlight></codeline>
<codeline lineno="7650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Chaining_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterChaining_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7655"><highlight class="normal"></highlight></codeline>
<codeline lineno="7656"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Chaining_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitChaining_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7661"><highlight class="normal"></highlight></codeline>
<codeline lineno="7662"><highlight class="normal">KerMLParser::Chaining_partContext*<sp/>KerMLParser::chaining_part()<sp/>{</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"><sp/><sp/><ref refid="da/d82/class_ker_m_l_parser_1_1_chaining__part_context" kindref="compound">Chaining_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d82/class_ker_m_l_parser_1_1_chaining__part_context" kindref="compound">Chaining_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>150,<sp/>KerMLParser::RuleChaining_part);</highlight></codeline>
<codeline lineno="7665"><highlight class="normal"></highlight></codeline>
<codeline lineno="7666"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7671"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7675"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1092);</highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_CHAINS);</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1095);</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>93,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="7680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1093);</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chaining();</highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"></highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1094);</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="7689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7691"><highlight class="normal"></highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7698"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7699"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"></highlight></codeline>
<codeline lineno="7703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7705"><highlight class="normal"></highlight></codeline>
<codeline lineno="7706"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Inverting_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7707"><highlight class="normal"></highlight></codeline>
<codeline lineno="7708"><highlight class="normal">KerMLParser::Inverting_partContext::Inverting_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"></highlight></codeline>
<codeline lineno="7712"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Inverting_partContext::KEYWORD_INVERSE()<sp/>{</highlight></codeline>
<codeline lineno="7713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_INVERSE,<sp/>0);</highlight></codeline>
<codeline lineno="7714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7715"><highlight class="normal"></highlight></codeline>
<codeline lineno="7716"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Inverting_partContext::KEYWORD_OF()<sp/>{</highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_OF,<sp/>0);</highlight></codeline>
<codeline lineno="7718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"></highlight></codeline>
<codeline lineno="7720"><highlight class="normal">KerMLParser::Owned_feature_invertingContext*<sp/>KerMLParser::Inverting_partContext::owned_feature_inverting()<sp/>{</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_invertingContext&gt;(0);</highlight></codeline>
<codeline lineno="7722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"></highlight></codeline>
<codeline lineno="7724"><highlight class="normal"></highlight></codeline>
<codeline lineno="7725"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Inverting_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleInverting_part;</highlight></codeline>
<codeline lineno="7727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"></highlight></codeline>
<codeline lineno="7729"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Inverting_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterInverting_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7734"><highlight class="normal"></highlight></codeline>
<codeline lineno="7735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Inverting_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitInverting_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7740"><highlight class="normal"></highlight></codeline>
<codeline lineno="7741"><highlight class="normal">KerMLParser::Inverting_partContext*<sp/>KerMLParser::inverting_part()<sp/>{</highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><ref refid="d1/d46/class_ker_m_l_parser_1_1_inverting__part_context" kindref="compound">Inverting_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d46/class_ker_m_l_parser_1_1_inverting__part_context" kindref="compound">Inverting_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7743"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>152,<sp/>KerMLParser::RuleInverting_part);</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"></highlight></codeline>
<codeline lineno="7745"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7749"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7750"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7753"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7754"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1097);</highlight></codeline>
<codeline lineno="7755"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_INVERSE);</highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1098);</highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_OF);</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1099);</highlight></codeline>
<codeline lineno="7759"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_feature_inverting();</highlight></codeline>
<codeline lineno="7760"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7764"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7767"><highlight class="normal"></highlight></codeline>
<codeline lineno="7768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7770"><highlight class="normal"></highlight></codeline>
<codeline lineno="7771"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_featuring_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7772"><highlight class="normal"></highlight></codeline>
<codeline lineno="7773"><highlight class="normal">KerMLParser::Type_featuring_partContext::Type_featuring_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7774"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7776"><highlight class="normal"></highlight></codeline>
<codeline lineno="7777"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_featuring_partContext::KEYWORD_FEATURED()<sp/>{</highlight></codeline>
<codeline lineno="7778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FEATURED,<sp/>0);</highlight></codeline>
<codeline lineno="7779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7780"><highlight class="normal"></highlight></codeline>
<codeline lineno="7781"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_featuring_partContext::KEYWORD_BY()<sp/>{</highlight></codeline>
<codeline lineno="7782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_BY,<sp/>0);</highlight></codeline>
<codeline lineno="7783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7784"><highlight class="normal"></highlight></codeline>
<codeline lineno="7785"><highlight class="normal">std::vector&lt;KerMLParser::Owned_type_featuringContext<sp/>*&gt;<sp/>KerMLParser::Type_featuring_partContext::owned_type_featuring()<sp/>{</highlight></codeline>
<codeline lineno="7786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_type_featuringContext&gt;();</highlight></codeline>
<codeline lineno="7787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"></highlight></codeline>
<codeline lineno="7789"><highlight class="normal">KerMLParser::Owned_type_featuringContext*<sp/>KerMLParser::Type_featuring_partContext::owned_type_featuring(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_type_featuringContext&gt;(i);</highlight></codeline>
<codeline lineno="7791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7792"><highlight class="normal"></highlight></codeline>
<codeline lineno="7793"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Type_featuring_partContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="7795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7796"><highlight class="normal"></highlight></codeline>
<codeline lineno="7797"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_featuring_partContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="7799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"></highlight></codeline>
<codeline lineno="7801"><highlight class="normal"></highlight></codeline>
<codeline lineno="7802"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_featuring_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_featuring_part;</highlight></codeline>
<codeline lineno="7804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"></highlight></codeline>
<codeline lineno="7806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_featuring_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_featuring_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7811"><highlight class="normal"></highlight></codeline>
<codeline lineno="7812"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_featuring_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_featuring_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7817"><highlight class="normal"></highlight></codeline>
<codeline lineno="7818"><highlight class="normal">KerMLParser::Type_featuring_partContext*<sp/>KerMLParser::type_featuring_part()<sp/>{</highlight></codeline>
<codeline lineno="7819"><highlight class="normal"><sp/><sp/><ref refid="d5/d6e/class_ker_m_l_parser_1_1_type__featuring__part_context" kindref="compound">Type_featuring_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d6e/class_ker_m_l_parser_1_1_type__featuring__part_context" kindref="compound">Type_featuring_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7820"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>154,<sp/>KerMLParser::RuleType_featuring_part);</highlight></codeline>
<codeline lineno="7821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7822"><highlight class="normal"></highlight></codeline>
<codeline lineno="7823"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7827"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7831"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7832"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1101);</highlight></codeline>
<codeline lineno="7833"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FEATURED);</highlight></codeline>
<codeline lineno="7834"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1102);</highlight></codeline>
<codeline lineno="7835"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_BY);</highlight></codeline>
<codeline lineno="7836"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1103);</highlight></codeline>
<codeline lineno="7837"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_type_featuring();</highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1108);</highlight></codeline>
<codeline lineno="7839"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="7842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1104);</highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="7844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1105);</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_type_featuring();</highlight></codeline>
<codeline lineno="7846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1110);</highlight></codeline>
<codeline lineno="7847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7850"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7853"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7854"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7855"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7856"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7857"><highlight class="normal"></highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7860"><highlight class="normal"></highlight></codeline>
<codeline lineno="7861"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_specialization_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7862"><highlight class="normal"></highlight></codeline>
<codeline lineno="7863"><highlight class="normal">KerMLParser::Feature_specialization_partContext::Feature_specialization_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="7865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"></highlight></codeline>
<codeline lineno="7867"><highlight class="normal">std::vector&lt;KerMLParser::Feature_specilizationContext<sp/>*&gt;<sp/>KerMLParser::Feature_specialization_partContext::feature_specilization()<sp/>{</highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Feature_specilizationContext&gt;();</highlight></codeline>
<codeline lineno="7869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7870"><highlight class="normal"></highlight></codeline>
<codeline lineno="7871"><highlight class="normal">KerMLParser::Feature_specilizationContext*<sp/>KerMLParser::Feature_specialization_partContext::feature_specilization(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_specilizationContext&gt;(i);</highlight></codeline>
<codeline lineno="7873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"></highlight></codeline>
<codeline lineno="7875"><highlight class="normal">KerMLParser::Multiplicity_partContext*<sp/>KerMLParser::Feature_specialization_partContext::multiplicity_part()<sp/>{</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_partContext&gt;(0);</highlight></codeline>
<codeline lineno="7877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7878"><highlight class="normal"></highlight></codeline>
<codeline lineno="7879"><highlight class="normal"></highlight></codeline>
<codeline lineno="7880"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_specialization_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_specialization_part;</highlight></codeline>
<codeline lineno="7882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7883"><highlight class="normal"></highlight></codeline>
<codeline lineno="7884"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_specialization_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_specialization_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7889"><highlight class="normal"></highlight></codeline>
<codeline lineno="7890"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_specialization_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="7892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_specialization_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7895"><highlight class="normal"></highlight></codeline>
<codeline lineno="7896"><highlight class="normal">KerMLParser::Feature_specialization_partContext*<sp/>KerMLParser::feature_specialization_part()<sp/>{</highlight></codeline>
<codeline lineno="7897"><highlight class="normal"><sp/><sp/><ref refid="d7/de1/class_ker_m_l_parser_1_1_feature__specialization__part_context" kindref="compound">Feature_specialization_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/de1/class_ker_m_l_parser_1_1_feature__specialization__part_context" kindref="compound">Feature_specialization_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>156,<sp/>KerMLParser::RuleFeature_specialization_part);</highlight></codeline>
<codeline lineno="7899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7900"><highlight class="normal"></highlight></codeline>
<codeline lineno="7901"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="7903"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="7905"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7906"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="7907"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alt;</highlight></codeline>
<codeline lineno="7910"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1131);</highlight></codeline>
<codeline lineno="7911"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="7913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::TYPED_BY:</highlight></codeline>
<codeline lineno="7914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SUBSETS:</highlight></codeline>
<codeline lineno="7915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::REFERENCES:</highlight></codeline>
<codeline lineno="7916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::REDEFINES:</highlight></codeline>
<codeline lineno="7917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_IN:</highlight></codeline>
<codeline lineno="7918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_INOUT:</highlight></codeline>
<codeline lineno="7919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_OUT:<sp/>{</highlight></codeline>
<codeline lineno="7920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="7921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1112);<sp/></highlight></codeline>
<codeline lineno="7922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(alt)<sp/>{</highlight></codeline>
<codeline lineno="7926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="7927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1111);</highlight></codeline>
<codeline lineno="7928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_specilization();</highlight></codeline>
<codeline lineno="7929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7931"><highlight class="normal"></highlight></codeline>
<codeline lineno="7932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1114);<sp/></highlight></codeline>
<codeline lineno="7936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>95,<sp/>_ctx);</highlight></codeline>
<codeline lineno="7938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER);</highlight></codeline>
<codeline lineno="7939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1117);</highlight></codeline>
<codeline lineno="7940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7941"><highlight class="normal"></highlight></codeline>
<codeline lineno="7942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="7943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="7944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1116);</highlight></codeline>
<codeline lineno="7945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_part();</highlight></codeline>
<codeline lineno="7946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1122);</highlight></codeline>
<codeline lineno="7948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>97,<sp/>_ctx);</highlight></codeline>
<codeline lineno="7950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="7951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="7952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1119);</highlight></codeline>
<codeline lineno="7953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_specilization();<sp/></highlight></codeline>
<codeline lineno="7954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1124);</highlight></codeline>
<codeline lineno="7956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>97,<sp/>_ctx);</highlight></codeline>
<codeline lineno="7958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7961"><highlight class="normal"></highlight></codeline>
<codeline lineno="7962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="7963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="7964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1125);</highlight></codeline>
<codeline lineno="7965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_part();</highlight></codeline>
<codeline lineno="7966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1127);<sp/></highlight></codeline>
<codeline lineno="7967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(alt)<sp/>{</highlight></codeline>
<codeline lineno="7971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="7972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1126);</highlight></codeline>
<codeline lineno="7973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_specilization();</highlight></codeline>
<codeline lineno="7974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7976"><highlight class="normal"></highlight></codeline>
<codeline lineno="7977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1129);<sp/></highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>98,<sp/>_ctx);</highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER);</highlight></codeline>
<codeline lineno="7984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7986"><highlight class="normal"></highlight></codeline>
<codeline lineno="7987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7990"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7991"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="7993"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="7994"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="7995"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="7996"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7997"><highlight class="normal"></highlight></codeline>
<codeline lineno="7998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="7999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8000"><highlight class="normal"></highlight></codeline>
<codeline lineno="8001"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Multiplicity_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8002"><highlight class="normal"></highlight></codeline>
<codeline lineno="8003"><highlight class="normal">KerMLParser::Multiplicity_partContext::Multiplicity_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8004"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8006"><highlight class="normal"></highlight></codeline>
<codeline lineno="8007"><highlight class="normal"><ref refid="d2/d28/class_ker_m_l_parser_1_1_multiplicity__bounds_context" kindref="compound">KerMLParser::Multiplicity_boundsContext</ref>*<sp/>KerMLParser::Multiplicity_partContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="8008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="8009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8010"><highlight class="normal"></highlight></codeline>
<codeline lineno="8011"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Multiplicity_partContext::KEYWORD_ORDERED()<sp/>{</highlight></codeline>
<codeline lineno="8012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ORDERED,<sp/>0);</highlight></codeline>
<codeline lineno="8013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8014"><highlight class="normal"></highlight></codeline>
<codeline lineno="8015"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Multiplicity_partContext::KEYWORD_NONUNIQUE()<sp/>{</highlight></codeline>
<codeline lineno="8016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_NONUNIQUE,<sp/>0);</highlight></codeline>
<codeline lineno="8017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8018"><highlight class="normal"></highlight></codeline>
<codeline lineno="8019"><highlight class="normal"></highlight></codeline>
<codeline lineno="8020"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMultiplicity_part;</highlight></codeline>
<codeline lineno="8022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8023"><highlight class="normal"></highlight></codeline>
<codeline lineno="8024"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8027"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMultiplicity_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8029"><highlight class="normal"></highlight></codeline>
<codeline lineno="8030"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8033"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMultiplicity_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8035"><highlight class="normal"></highlight></codeline>
<codeline lineno="8036"><highlight class="normal">KerMLParser::Multiplicity_partContext*<sp/>KerMLParser::multiplicity_part()<sp/>{</highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/><ref refid="df/d38/class_ker_m_l_parser_1_1_multiplicity__part_context" kindref="compound">Multiplicity_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d38/class_ker_m_l_parser_1_1_multiplicity__part_context" kindref="compound">Multiplicity_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8038"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>158,<sp/>KerMLParser::RuleMultiplicity_part);</highlight></codeline>
<codeline lineno="8039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8040"><highlight class="normal"></highlight></codeline>
<codeline lineno="8041"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8043"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8045"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8046"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8047"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8049"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8050"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1133);</highlight></codeline>
<codeline lineno="8051"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="8052"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1146);</highlight></codeline>
<codeline lineno="8053"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>104,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="8055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="8056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1138);</highlight></codeline>
<codeline lineno="8057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8058"><highlight class="normal"></highlight></codeline>
<codeline lineno="8059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ORDERED)<sp/>{</highlight></codeline>
<codeline lineno="8061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1134);</highlight></codeline>
<codeline lineno="8062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ORDERED);</highlight></codeline>
<codeline lineno="8063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1136);</highlight></codeline>
<codeline lineno="8064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8065"><highlight class="normal"></highlight></codeline>
<codeline lineno="8066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_NONUNIQUE)<sp/>{</highlight></codeline>
<codeline lineno="8068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1135);</highlight></codeline>
<codeline lineno="8069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_NONUNIQUE);</highlight></codeline>
<codeline lineno="8070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8074"><highlight class="normal"></highlight></codeline>
<codeline lineno="8075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="8076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1144);</highlight></codeline>
<codeline lineno="8077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8078"><highlight class="normal"></highlight></codeline>
<codeline lineno="8079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_NONUNIQUE</highlight></codeline>
<codeline lineno="8081"><highlight class="normal"></highlight></codeline>
<codeline lineno="8082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_ORDERED)<sp/>{</highlight></codeline>
<codeline lineno="8083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1141);</highlight></codeline>
<codeline lineno="8084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8085"><highlight class="normal"></highlight></codeline>
<codeline lineno="8086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_NONUNIQUE)<sp/>{</highlight></codeline>
<codeline lineno="8088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1140);</highlight></codeline>
<codeline lineno="8089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_NONUNIQUE);</highlight></codeline>
<codeline lineno="8090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1143);</highlight></codeline>
<codeline lineno="8092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ORDERED);</highlight></codeline>
<codeline lineno="8093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8096"><highlight class="normal"></highlight></codeline>
<codeline lineno="8097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8100"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8103"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8104"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8105"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8107"><highlight class="normal"></highlight></codeline>
<codeline lineno="8108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8110"><highlight class="normal"></highlight></codeline>
<codeline lineno="8111"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_specilizationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8112"><highlight class="normal"></highlight></codeline>
<codeline lineno="8113"><highlight class="normal">KerMLParser::Feature_specilizationContext::Feature_specilizationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8114"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8116"><highlight class="normal"></highlight></codeline>
<codeline lineno="8117"><highlight class="normal"><ref refid="d3/dbd/class_ker_m_l_parser_1_1_typings_context" kindref="compound">KerMLParser::TypingsContext</ref>*<sp/>KerMLParser::Feature_specilizationContext::typings()<sp/>{</highlight></codeline>
<codeline lineno="8118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::TypingsContext&gt;(0);</highlight></codeline>
<codeline lineno="8119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8120"><highlight class="normal"></highlight></codeline>
<codeline lineno="8121"><highlight class="normal">KerMLParser::SubsettingsContext*<sp/>KerMLParser::Feature_specilizationContext::subsettings()<sp/>{</highlight></codeline>
<codeline lineno="8122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SubsettingsContext&gt;(0);</highlight></codeline>
<codeline lineno="8123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8124"><highlight class="normal"></highlight></codeline>
<codeline lineno="8125"><highlight class="normal">KerMLParser::ReferencesContext*<sp/>KerMLParser::Feature_specilizationContext::references()<sp/>{</highlight></codeline>
<codeline lineno="8126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ReferencesContext&gt;(0);</highlight></codeline>
<codeline lineno="8127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8128"><highlight class="normal"></highlight></codeline>
<codeline lineno="8129"><highlight class="normal">KerMLParser::RedefinitionsContext*<sp/>KerMLParser::Feature_specilizationContext::redefinitions()<sp/>{</highlight></codeline>
<codeline lineno="8130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::RedefinitionsContext&gt;(0);</highlight></codeline>
<codeline lineno="8131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8132"><highlight class="normal"></highlight></codeline>
<codeline lineno="8133"><highlight class="normal"></highlight></codeline>
<codeline lineno="8134"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_specilizationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_specilization;</highlight></codeline>
<codeline lineno="8136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8137"><highlight class="normal"></highlight></codeline>
<codeline lineno="8138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_specilizationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8141"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_specilization(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8143"><highlight class="normal"></highlight></codeline>
<codeline lineno="8144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_specilizationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8147"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_specilization(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8149"><highlight class="normal"></highlight></codeline>
<codeline lineno="8150"><highlight class="normal">KerMLParser::Feature_specilizationContext*<sp/>KerMLParser::feature_specilization()<sp/>{</highlight></codeline>
<codeline lineno="8151"><highlight class="normal"><sp/><sp/><ref refid="df/dfb/class_ker_m_l_parser_1_1_feature__specilization_context" kindref="compound">Feature_specilizationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/dfb/class_ker_m_l_parser_1_1_feature__specilization_context" kindref="compound">Feature_specilizationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8152"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>160,<sp/>KerMLParser::RuleFeature_specilization);</highlight></codeline>
<codeline lineno="8153"><highlight class="normal"></highlight></codeline>
<codeline lineno="8154"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8156"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8159"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8160"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8162"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1152);</highlight></codeline>
<codeline lineno="8163"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="8165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::TYPED_BY:<sp/>{</highlight></codeline>
<codeline lineno="8166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1148);</highlight></codeline>
<codeline lineno="8168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typings();</highlight></codeline>
<codeline lineno="8169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8171"><highlight class="normal"></highlight></codeline>
<codeline lineno="8172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SUBSETS:<sp/>{</highlight></codeline>
<codeline lineno="8173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="8174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1149);</highlight></codeline>
<codeline lineno="8175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsettings();</highlight></codeline>
<codeline lineno="8176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8178"><highlight class="normal"></highlight></codeline>
<codeline lineno="8179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::REFERENCES:<sp/>{</highlight></codeline>
<codeline lineno="8180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="8181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1150);</highlight></codeline>
<codeline lineno="8182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>references();</highlight></codeline>
<codeline lineno="8183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8185"><highlight class="normal"></highlight></codeline>
<codeline lineno="8186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::REDEFINES:</highlight></codeline>
<codeline lineno="8187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_IN:</highlight></codeline>
<codeline lineno="8188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_INOUT:</highlight></codeline>
<codeline lineno="8189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_OUT:<sp/>{</highlight></codeline>
<codeline lineno="8190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="8191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1151);</highlight></codeline>
<codeline lineno="8192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redefinitions();</highlight></codeline>
<codeline lineno="8193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8195"><highlight class="normal"></highlight></codeline>
<codeline lineno="8196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8199"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8202"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8203"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8204"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8206"><highlight class="normal"></highlight></codeline>
<codeline lineno="8207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8209"><highlight class="normal"></highlight></codeline>
<codeline lineno="8210"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>TypingsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8211"><highlight class="normal"></highlight></codeline>
<codeline lineno="8212"><highlight class="normal">KerMLParser::TypingsContext::TypingsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8213"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8215"><highlight class="normal"></highlight></codeline>
<codeline lineno="8216"><highlight class="normal"><ref refid="d1/df2/class_ker_m_l_parser_1_1_typed__by_context" kindref="compound">KerMLParser::Typed_byContext</ref>*<sp/>KerMLParser::TypingsContext::typed_by()<sp/>{</highlight></codeline>
<codeline lineno="8217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Typed_byContext&gt;(0);</highlight></codeline>
<codeline lineno="8218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8219"><highlight class="normal"></highlight></codeline>
<codeline lineno="8220"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::TypingsContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="8221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="8222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8223"><highlight class="normal"></highlight></codeline>
<codeline lineno="8224"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::TypingsContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="8225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="8226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8227"><highlight class="normal"></highlight></codeline>
<codeline lineno="8228"><highlight class="normal">std::vector&lt;KerMLParser::Owned_feature_typingContext<sp/>*&gt;<sp/>KerMLParser::TypingsContext::owned_feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="8229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_feature_typingContext&gt;();</highlight></codeline>
<codeline lineno="8230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8231"><highlight class="normal"></highlight></codeline>
<codeline lineno="8232"><highlight class="normal">KerMLParser::Owned_feature_typingContext*<sp/>KerMLParser::TypingsContext::owned_feature_typing(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="8233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_typingContext&gt;(i);</highlight></codeline>
<codeline lineno="8234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8235"><highlight class="normal"></highlight></codeline>
<codeline lineno="8236"><highlight class="normal"></highlight></codeline>
<codeline lineno="8237"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::TypingsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleTypings;</highlight></codeline>
<codeline lineno="8239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8240"><highlight class="normal"></highlight></codeline>
<codeline lineno="8241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::TypingsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8244"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterTypings(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8246"><highlight class="normal"></highlight></codeline>
<codeline lineno="8247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::TypingsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8250"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitTypings(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8252"><highlight class="normal"></highlight></codeline>
<codeline lineno="8253"><highlight class="normal">KerMLParser::TypingsContext*<sp/>KerMLParser::typings()<sp/>{</highlight></codeline>
<codeline lineno="8254"><highlight class="normal"><sp/><sp/><ref refid="d3/dbd/class_ker_m_l_parser_1_1_typings_context" kindref="compound">TypingsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/dbd/class_ker_m_l_parser_1_1_typings_context" kindref="compound">TypingsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8255"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>162,<sp/>KerMLParser::RuleTypings);</highlight></codeline>
<codeline lineno="8256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8257"><highlight class="normal"></highlight></codeline>
<codeline lineno="8258"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8260"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8263"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8264"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8266"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8267"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1154);</highlight></codeline>
<codeline lineno="8268"><highlight class="normal"><sp/><sp/><sp/><sp/>typed_by();</highlight></codeline>
<codeline lineno="8269"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1159);</highlight></codeline>
<codeline lineno="8270"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8271"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="8273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1155);</highlight></codeline>
<codeline lineno="8274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="8275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1156);</highlight></codeline>
<codeline lineno="8276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_typing();</highlight></codeline>
<codeline lineno="8277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1161);</highlight></codeline>
<codeline lineno="8278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8281"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8284"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8285"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8286"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8288"><highlight class="normal"></highlight></codeline>
<codeline lineno="8289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8291"><highlight class="normal"></highlight></codeline>
<codeline lineno="8292"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Typed_byContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8293"><highlight class="normal"></highlight></codeline>
<codeline lineno="8294"><highlight class="normal">KerMLParser::Typed_byContext::Typed_byContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8295"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8297"><highlight class="normal"></highlight></codeline>
<codeline lineno="8298"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Typed_byContext::TYPED_BY()<sp/>{</highlight></codeline>
<codeline lineno="8299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::TYPED_BY,<sp/>0);</highlight></codeline>
<codeline lineno="8300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8301"><highlight class="normal"></highlight></codeline>
<codeline lineno="8302"><highlight class="normal">KerMLParser::Owned_feature_typingContext*<sp/>KerMLParser::Typed_byContext::owned_feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="8303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="8304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8305"><highlight class="normal"></highlight></codeline>
<codeline lineno="8306"><highlight class="normal"></highlight></codeline>
<codeline lineno="8307"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Typed_byContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleTyped_by;</highlight></codeline>
<codeline lineno="8309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8310"><highlight class="normal"></highlight></codeline>
<codeline lineno="8311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Typed_byContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8314"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterTyped_by(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8316"><highlight class="normal"></highlight></codeline>
<codeline lineno="8317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Typed_byContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8320"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitTyped_by(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8322"><highlight class="normal"></highlight></codeline>
<codeline lineno="8323"><highlight class="normal">KerMLParser::Typed_byContext*<sp/>KerMLParser::typed_by()<sp/>{</highlight></codeline>
<codeline lineno="8324"><highlight class="normal"><sp/><sp/><ref refid="d1/df2/class_ker_m_l_parser_1_1_typed__by_context" kindref="compound">Typed_byContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/df2/class_ker_m_l_parser_1_1_typed__by_context" kindref="compound">Typed_byContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8325"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>164,<sp/>KerMLParser::RuleTyped_by);</highlight></codeline>
<codeline lineno="8326"><highlight class="normal"></highlight></codeline>
<codeline lineno="8327"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8329"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8332"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8333"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8335"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8336"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1162);</highlight></codeline>
<codeline lineno="8337"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::TYPED_BY);</highlight></codeline>
<codeline lineno="8338"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1163);</highlight></codeline>
<codeline lineno="8339"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_feature_typing();</highlight></codeline>
<codeline lineno="8340"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8343"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8344"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8345"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8347"><highlight class="normal"></highlight></codeline>
<codeline lineno="8348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8350"><highlight class="normal"></highlight></codeline>
<codeline lineno="8351"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>SubsettingsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8352"><highlight class="normal"></highlight></codeline>
<codeline lineno="8353"><highlight class="normal">KerMLParser::SubsettingsContext::SubsettingsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8354"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8356"><highlight class="normal"></highlight></codeline>
<codeline lineno="8357"><highlight class="normal"><ref refid="dc/dae/class_ker_m_l_parser_1_1_subsets_context" kindref="compound">KerMLParser::SubsetsContext</ref>*<sp/>KerMLParser::SubsettingsContext::subsets()<sp/>{</highlight></codeline>
<codeline lineno="8358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SubsetsContext&gt;(0);</highlight></codeline>
<codeline lineno="8359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8360"><highlight class="normal"></highlight></codeline>
<codeline lineno="8361"><highlight class="normal">std::vector&lt;KerMLParser::Owned_subsettingContext<sp/>*&gt;<sp/>KerMLParser::SubsettingsContext::owned_subsetting()<sp/>{</highlight></codeline>
<codeline lineno="8362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_subsettingContext&gt;();</highlight></codeline>
<codeline lineno="8363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8364"><highlight class="normal"></highlight></codeline>
<codeline lineno="8365"><highlight class="normal">KerMLParser::Owned_subsettingContext*<sp/>KerMLParser::SubsettingsContext::owned_subsetting(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="8366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_subsettingContext&gt;(i);</highlight></codeline>
<codeline lineno="8367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8368"><highlight class="normal"></highlight></codeline>
<codeline lineno="8369"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::SubsettingsContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="8370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="8371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8372"><highlight class="normal"></highlight></codeline>
<codeline lineno="8373"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubsettingsContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="8374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="8375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8376"><highlight class="normal"></highlight></codeline>
<codeline lineno="8377"><highlight class="normal"></highlight></codeline>
<codeline lineno="8378"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::SubsettingsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSubsettings;</highlight></codeline>
<codeline lineno="8380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8381"><highlight class="normal"></highlight></codeline>
<codeline lineno="8382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubsettingsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8385"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSubsettings(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8387"><highlight class="normal"></highlight></codeline>
<codeline lineno="8388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubsettingsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8391"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSubsettings(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8393"><highlight class="normal"></highlight></codeline>
<codeline lineno="8394"><highlight class="normal">KerMLParser::SubsettingsContext*<sp/>KerMLParser::subsettings()<sp/>{</highlight></codeline>
<codeline lineno="8395"><highlight class="normal"><sp/><sp/><ref refid="df/d9d/class_ker_m_l_parser_1_1_subsettings_context" kindref="compound">SubsettingsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d9d/class_ker_m_l_parser_1_1_subsettings_context" kindref="compound">SubsettingsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8396"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>166,<sp/>KerMLParser::RuleSubsettings);</highlight></codeline>
<codeline lineno="8397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8398"><highlight class="normal"></highlight></codeline>
<codeline lineno="8399"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8401"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8404"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8405"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8407"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8408"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1165);</highlight></codeline>
<codeline lineno="8409"><highlight class="normal"><sp/><sp/><sp/><sp/>subsets();</highlight></codeline>
<codeline lineno="8410"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1167);</highlight></codeline>
<codeline lineno="8411"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8412"><highlight class="normal"></highlight></codeline>
<codeline lineno="8413"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="8415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1166);</highlight></codeline>
<codeline lineno="8416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_subsetting();</highlight></codeline>
<codeline lineno="8417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8418"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1173);</highlight></codeline>
<codeline lineno="8419"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8420"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="8422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1169);</highlight></codeline>
<codeline lineno="8423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="8424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1170);</highlight></codeline>
<codeline lineno="8425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_subsetting();</highlight></codeline>
<codeline lineno="8426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1175);</highlight></codeline>
<codeline lineno="8427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8430"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8433"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8434"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8435"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8437"><highlight class="normal"></highlight></codeline>
<codeline lineno="8438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8440"><highlight class="normal"></highlight></codeline>
<codeline lineno="8441"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>SubsetsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8442"><highlight class="normal"></highlight></codeline>
<codeline lineno="8443"><highlight class="normal">KerMLParser::SubsetsContext::SubsetsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8444"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8446"><highlight class="normal"></highlight></codeline>
<codeline lineno="8447"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubsetsContext::SUBSETS()<sp/>{</highlight></codeline>
<codeline lineno="8448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SUBSETS,<sp/>0);</highlight></codeline>
<codeline lineno="8449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8450"><highlight class="normal"></highlight></codeline>
<codeline lineno="8451"><highlight class="normal">KerMLParser::Owned_subsettingContext*<sp/>KerMLParser::SubsetsContext::owned_subsetting()<sp/>{</highlight></codeline>
<codeline lineno="8452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_subsettingContext&gt;(0);</highlight></codeline>
<codeline lineno="8453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8454"><highlight class="normal"></highlight></codeline>
<codeline lineno="8455"><highlight class="normal"></highlight></codeline>
<codeline lineno="8456"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::SubsetsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSubsets;</highlight></codeline>
<codeline lineno="8458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8459"><highlight class="normal"></highlight></codeline>
<codeline lineno="8460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubsetsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8463"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSubsets(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8465"><highlight class="normal"></highlight></codeline>
<codeline lineno="8466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubsetsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8469"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSubsets(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8471"><highlight class="normal"></highlight></codeline>
<codeline lineno="8472"><highlight class="normal">KerMLParser::SubsetsContext*<sp/>KerMLParser::subsets()<sp/>{</highlight></codeline>
<codeline lineno="8473"><highlight class="normal"><sp/><sp/><ref refid="dc/dae/class_ker_m_l_parser_1_1_subsets_context" kindref="compound">SubsetsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/dae/class_ker_m_l_parser_1_1_subsets_context" kindref="compound">SubsetsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8474"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>168,<sp/>KerMLParser::RuleSubsets);</highlight></codeline>
<codeline lineno="8475"><highlight class="normal"></highlight></codeline>
<codeline lineno="8476"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8478"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8480"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8481"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8482"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8484"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8485"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1176);</highlight></codeline>
<codeline lineno="8486"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SUBSETS);</highlight></codeline>
<codeline lineno="8487"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1177);</highlight></codeline>
<codeline lineno="8488"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_subsetting();</highlight></codeline>
<codeline lineno="8489"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8492"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8493"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8494"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8496"><highlight class="normal"></highlight></codeline>
<codeline lineno="8497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8499"><highlight class="normal"></highlight></codeline>
<codeline lineno="8500"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ReferencesContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8501"><highlight class="normal"></highlight></codeline>
<codeline lineno="8502"><highlight class="normal">KerMLParser::ReferencesContext::ReferencesContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8503"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8505"><highlight class="normal"></highlight></codeline>
<codeline lineno="8506"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ReferencesContext::REFERENCES()<sp/>{</highlight></codeline>
<codeline lineno="8507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::REFERENCES,<sp/>0);</highlight></codeline>
<codeline lineno="8508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8509"><highlight class="normal"></highlight></codeline>
<codeline lineno="8510"><highlight class="normal">KerMLParser::Owned_reference_subsettingContext*<sp/>KerMLParser::ReferencesContext::owned_reference_subsetting()<sp/>{</highlight></codeline>
<codeline lineno="8511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_reference_subsettingContext&gt;(0);</highlight></codeline>
<codeline lineno="8512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8513"><highlight class="normal"></highlight></codeline>
<codeline lineno="8514"><highlight class="normal"></highlight></codeline>
<codeline lineno="8515"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ReferencesContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleReferences;</highlight></codeline>
<codeline lineno="8517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8518"><highlight class="normal"></highlight></codeline>
<codeline lineno="8519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ReferencesContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8522"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterReferences(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8524"><highlight class="normal"></highlight></codeline>
<codeline lineno="8525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ReferencesContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8528"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitReferences(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8530"><highlight class="normal"></highlight></codeline>
<codeline lineno="8531"><highlight class="normal">KerMLParser::ReferencesContext*<sp/>KerMLParser::references()<sp/>{</highlight></codeline>
<codeline lineno="8532"><highlight class="normal"><sp/><sp/><ref refid="d0/ddb/class_ker_m_l_parser_1_1_references_context" kindref="compound">ReferencesContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/ddb/class_ker_m_l_parser_1_1_references_context" kindref="compound">ReferencesContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8533"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>170,<sp/>KerMLParser::RuleReferences);</highlight></codeline>
<codeline lineno="8534"><highlight class="normal"></highlight></codeline>
<codeline lineno="8535"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8537"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8540"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8541"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8543"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8544"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1179);</highlight></codeline>
<codeline lineno="8545"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::REFERENCES);</highlight></codeline>
<codeline lineno="8546"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1180);</highlight></codeline>
<codeline lineno="8547"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_reference_subsetting();</highlight></codeline>
<codeline lineno="8548"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8551"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8552"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8553"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8555"><highlight class="normal"></highlight></codeline>
<codeline lineno="8556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8558"><highlight class="normal"></highlight></codeline>
<codeline lineno="8559"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>RedefinitionsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8560"><highlight class="normal"></highlight></codeline>
<codeline lineno="8561"><highlight class="normal">KerMLParser::RedefinitionsContext::RedefinitionsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8562"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8564"><highlight class="normal"></highlight></codeline>
<codeline lineno="8565"><highlight class="normal"><ref refid="da/d53/class_ker_m_l_parser_1_1_redefines_context" kindref="compound">KerMLParser::RedefinesContext</ref>*<sp/>KerMLParser::RedefinitionsContext::redefines()<sp/>{</highlight></codeline>
<codeline lineno="8566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::RedefinesContext&gt;(0);</highlight></codeline>
<codeline lineno="8567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8568"><highlight class="normal"></highlight></codeline>
<codeline lineno="8569"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::RedefinitionsContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="8570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>0);</highlight></codeline>
<codeline lineno="8571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8572"><highlight class="normal"></highlight></codeline>
<codeline lineno="8573"><highlight class="normal">KerMLParser::Owned_redefinitionContext*<sp/>KerMLParser::RedefinitionsContext::owned_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="8574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_redefinitionContext&gt;(0);</highlight></codeline>
<codeline lineno="8575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8576"><highlight class="normal"></highlight></codeline>
<codeline lineno="8577"><highlight class="normal"></highlight></codeline>
<codeline lineno="8578"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::RedefinitionsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleRedefinitions;</highlight></codeline>
<codeline lineno="8580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8581"><highlight class="normal"></highlight></codeline>
<codeline lineno="8582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::RedefinitionsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8585"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterRedefinitions(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8587"><highlight class="normal"></highlight></codeline>
<codeline lineno="8588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::RedefinitionsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8591"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitRedefinitions(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8593"><highlight class="normal"></highlight></codeline>
<codeline lineno="8594"><highlight class="normal">KerMLParser::RedefinitionsContext*<sp/>KerMLParser::redefinitions()<sp/>{</highlight></codeline>
<codeline lineno="8595"><highlight class="normal"><sp/><sp/><ref refid="d6/d99/class_ker_m_l_parser_1_1_redefinitions_context" kindref="compound">RedefinitionsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d99/class_ker_m_l_parser_1_1_redefinitions_context" kindref="compound">RedefinitionsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8596"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>172,<sp/>KerMLParser::RuleRedefinitions);</highlight></codeline>
<codeline lineno="8597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8598"><highlight class="normal"></highlight></codeline>
<codeline lineno="8599"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8601"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8604"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8605"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8607"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8608"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1182);</highlight></codeline>
<codeline lineno="8609"><highlight class="normal"><sp/><sp/><sp/><sp/>redefines();</highlight></codeline>
<codeline lineno="8610"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1185);</highlight></codeline>
<codeline lineno="8611"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8612"><highlight class="normal"></highlight></codeline>
<codeline lineno="8613"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="8615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1183);</highlight></codeline>
<codeline lineno="8616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="8617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1184);</highlight></codeline>
<codeline lineno="8618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_redefinition();</highlight></codeline>
<codeline lineno="8619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8620"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8623"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8624"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8625"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8627"><highlight class="normal"></highlight></codeline>
<codeline lineno="8628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8630"><highlight class="normal"></highlight></codeline>
<codeline lineno="8631"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>RedefinesContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8632"><highlight class="normal"></highlight></codeline>
<codeline lineno="8633"><highlight class="normal">KerMLParser::RedefinesContext::RedefinesContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8634"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8636"><highlight class="normal"></highlight></codeline>
<codeline lineno="8637"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::RedefinesContext::REDEFINES()<sp/>{</highlight></codeline>
<codeline lineno="8638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::REDEFINES,<sp/>0);</highlight></codeline>
<codeline lineno="8639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8640"><highlight class="normal"></highlight></codeline>
<codeline lineno="8641"><highlight class="normal">KerMLParser::Owned_redefinitionContext*<sp/>KerMLParser::RedefinesContext::owned_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="8642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_redefinitionContext&gt;(0);</highlight></codeline>
<codeline lineno="8643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8644"><highlight class="normal"></highlight></codeline>
<codeline lineno="8645"><highlight class="normal">KerMLParser::Feature_directionContext*<sp/>KerMLParser::RedefinesContext::feature_direction()<sp/>{</highlight></codeline>
<codeline lineno="8646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_directionContext&gt;(0);</highlight></codeline>
<codeline lineno="8647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8648"><highlight class="normal"></highlight></codeline>
<codeline lineno="8649"><highlight class="normal"></highlight></codeline>
<codeline lineno="8650"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::RedefinesContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleRedefines;</highlight></codeline>
<codeline lineno="8652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8653"><highlight class="normal"></highlight></codeline>
<codeline lineno="8654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::RedefinesContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8657"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterRedefines(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8659"><highlight class="normal"></highlight></codeline>
<codeline lineno="8660"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::RedefinesContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8663"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitRedefines(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8665"><highlight class="normal"></highlight></codeline>
<codeline lineno="8666"><highlight class="normal">KerMLParser::RedefinesContext*<sp/>KerMLParser::redefines()<sp/>{</highlight></codeline>
<codeline lineno="8667"><highlight class="normal"><sp/><sp/><ref refid="da/d53/class_ker_m_l_parser_1_1_redefines_context" kindref="compound">RedefinesContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d53/class_ker_m_l_parser_1_1_redefines_context" kindref="compound">RedefinesContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8668"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>174,<sp/>KerMLParser::RuleRedefines);</highlight></codeline>
<codeline lineno="8669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8670"><highlight class="normal"></highlight></codeline>
<codeline lineno="8671"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8673"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8675"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8676"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8677"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8679"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8680"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1188);</highlight></codeline>
<codeline lineno="8681"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8682"><highlight class="normal"></highlight></codeline>
<codeline lineno="8683"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((((_la<sp/>-<sp/>54)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="8685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>54))<sp/>&amp;<sp/>524291)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="8686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1187);</highlight></codeline>
<codeline lineno="8687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_direction();</highlight></codeline>
<codeline lineno="8688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8689"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1190);</highlight></codeline>
<codeline lineno="8690"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::REDEFINES);</highlight></codeline>
<codeline lineno="8691"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1191);</highlight></codeline>
<codeline lineno="8692"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_redefinition();</highlight></codeline>
<codeline lineno="8693"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8694"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8696"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8697"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8698"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8700"><highlight class="normal"></highlight></codeline>
<codeline lineno="8701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8703"><highlight class="normal"></highlight></codeline>
<codeline lineno="8704"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_typingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8705"><highlight class="normal"></highlight></codeline>
<codeline lineno="8706"><highlight class="normal">KerMLParser::Feature_typingContext::Feature_typingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8707"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8709"><highlight class="normal"></highlight></codeline>
<codeline lineno="8710"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Feature_typingContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="8711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="8712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8713"><highlight class="normal"></highlight></codeline>
<codeline lineno="8714"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_typingContext::TYPED_BY()<sp/>{</highlight></codeline>
<codeline lineno="8715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::TYPED_BY,<sp/>0);</highlight></codeline>
<codeline lineno="8716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8717"><highlight class="normal"></highlight></codeline>
<codeline lineno="8718"><highlight class="normal">KerMLParser::General_typeContext*<sp/>KerMLParser::Feature_typingContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="8719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="8720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8721"><highlight class="normal"></highlight></codeline>
<codeline lineno="8722"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::Feature_typingContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="8723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="8724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8725"><highlight class="normal"></highlight></codeline>
<codeline lineno="8726"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_typingContext::KEYWORD_SPECILIZATION()<sp/>{</highlight></codeline>
<codeline lineno="8727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SPECILIZATION,<sp/>0);</highlight></codeline>
<codeline lineno="8728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8729"><highlight class="normal"></highlight></codeline>
<codeline lineno="8730"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Feature_typingContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="8731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="8732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8733"><highlight class="normal"></highlight></codeline>
<codeline lineno="8734"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_typingContext::KEYWORD_TYPING()<sp/>{</highlight></codeline>
<codeline lineno="8735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TYPING,<sp/>0);</highlight></codeline>
<codeline lineno="8736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8737"><highlight class="normal"></highlight></codeline>
<codeline lineno="8738"><highlight class="normal">KerMLParser::Multiplicity_partContext*<sp/>KerMLParser::Feature_typingContext::multiplicity_part()<sp/>{</highlight></codeline>
<codeline lineno="8739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_partContext&gt;(0);</highlight></codeline>
<codeline lineno="8740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8741"><highlight class="normal"></highlight></codeline>
<codeline lineno="8742"><highlight class="normal"></highlight></codeline>
<codeline lineno="8743"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_typingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_typing;</highlight></codeline>
<codeline lineno="8745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8746"><highlight class="normal"></highlight></codeline>
<codeline lineno="8747"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_typingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8750"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_typing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8752"><highlight class="normal"></highlight></codeline>
<codeline lineno="8753"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_typingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8756"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_typing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8758"><highlight class="normal"></highlight></codeline>
<codeline lineno="8759"><highlight class="normal">KerMLParser::Feature_typingContext*<sp/>KerMLParser::feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="8760"><highlight class="normal"><sp/><sp/><ref refid="d7/d14/class_ker_m_l_parser_1_1_feature__typing_context" kindref="compound">Feature_typingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/d14/class_ker_m_l_parser_1_1_feature__typing_context" kindref="compound">Feature_typingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8761"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>176,<sp/>KerMLParser::RuleFeature_typing);</highlight></codeline>
<codeline lineno="8762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8763"><highlight class="normal"></highlight></codeline>
<codeline lineno="8764"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8766"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8768"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8769"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8770"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8772"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8773"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1195);</highlight></codeline>
<codeline lineno="8774"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8775"><highlight class="normal"></highlight></codeline>
<codeline lineno="8776"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_SPECILIZATION)<sp/>{</highlight></codeline>
<codeline lineno="8778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1193);</highlight></codeline>
<codeline lineno="8779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SPECILIZATION);</highlight></codeline>
<codeline lineno="8780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1194);</highlight></codeline>
<codeline lineno="8781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="8782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8783"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1198);</highlight></codeline>
<codeline lineno="8784"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8785"><highlight class="normal"></highlight></codeline>
<codeline lineno="8786"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_TYPING)<sp/>{</highlight></codeline>
<codeline lineno="8788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1197);</highlight></codeline>
<codeline lineno="8789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_TYPING);</highlight></codeline>
<codeline lineno="8790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8791"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1200);</highlight></codeline>
<codeline lineno="8792"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="8793"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1201);</highlight></codeline>
<codeline lineno="8794"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::TYPED_BY);</highlight></codeline>
<codeline lineno="8795"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1202);</highlight></codeline>
<codeline lineno="8796"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="8797"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1204);</highlight></codeline>
<codeline lineno="8798"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8799"><highlight class="normal"></highlight></codeline>
<codeline lineno="8800"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="8802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1203);</highlight></codeline>
<codeline lineno="8803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_part();</highlight></codeline>
<codeline lineno="8804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8805"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1206);</highlight></codeline>
<codeline lineno="8806"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="8807"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8810"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8811"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8812"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8814"><highlight class="normal"></highlight></codeline>
<codeline lineno="8815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8817"><highlight class="normal"></highlight></codeline>
<codeline lineno="8818"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_feature_typingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8819"><highlight class="normal"></highlight></codeline>
<codeline lineno="8820"><highlight class="normal">KerMLParser::Owned_feature_typingContext::Owned_feature_typingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8821"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8823"><highlight class="normal"></highlight></codeline>
<codeline lineno="8824"><highlight class="normal"><ref refid="d4/d9f/class_ker_m_l_parser_1_1_general__type_context" kindref="compound">KerMLParser::General_typeContext</ref>*<sp/>KerMLParser::Owned_feature_typingContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="8825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="8826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8827"><highlight class="normal"></highlight></codeline>
<codeline lineno="8828"><highlight class="normal"></highlight></codeline>
<codeline lineno="8829"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_typingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_feature_typing;</highlight></codeline>
<codeline lineno="8831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8832"><highlight class="normal"></highlight></codeline>
<codeline lineno="8833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_typingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8836"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_feature_typing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8838"><highlight class="normal"></highlight></codeline>
<codeline lineno="8839"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_typingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8842"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_feature_typing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8844"><highlight class="normal"></highlight></codeline>
<codeline lineno="8845"><highlight class="normal">KerMLParser::Owned_feature_typingContext*<sp/>KerMLParser::owned_feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="8846"><highlight class="normal"><sp/><sp/><ref refid="d0/d7c/class_ker_m_l_parser_1_1_owned__feature__typing_context" kindref="compound">Owned_feature_typingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/d7c/class_ker_m_l_parser_1_1_owned__feature__typing_context" kindref="compound">Owned_feature_typingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8847"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>178,<sp/>KerMLParser::RuleOwned_feature_typing);</highlight></codeline>
<codeline lineno="8848"><highlight class="normal"></highlight></codeline>
<codeline lineno="8849"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8851"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8853"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8854"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8855"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8857"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8858"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1208);</highlight></codeline>
<codeline lineno="8859"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="8860"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8861"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8863"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8864"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8865"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8867"><highlight class="normal"></highlight></codeline>
<codeline lineno="8868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8870"><highlight class="normal"></highlight></codeline>
<codeline lineno="8871"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>SubsettingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8872"><highlight class="normal"></highlight></codeline>
<codeline lineno="8873"><highlight class="normal">KerMLParser::SubsettingContext::SubsettingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8874"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8876"><highlight class="normal"></highlight></codeline>
<codeline lineno="8877"><highlight class="normal"><ref refid="d3/dd3/class_ker_m_l_parser_1_1_specific__type_context" kindref="compound">KerMLParser::Specific_typeContext</ref>*<sp/>KerMLParser::SubsettingContext::specific_type()<sp/>{</highlight></codeline>
<codeline lineno="8878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Specific_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="8879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8880"><highlight class="normal"></highlight></codeline>
<codeline lineno="8881"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubsettingContext::SUBSETS()<sp/>{</highlight></codeline>
<codeline lineno="8882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SUBSETS,<sp/>0);</highlight></codeline>
<codeline lineno="8883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8884"><highlight class="normal"></highlight></codeline>
<codeline lineno="8885"><highlight class="normal">KerMLParser::General_typeContext*<sp/>KerMLParser::SubsettingContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="8886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="8887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8888"><highlight class="normal"></highlight></codeline>
<codeline lineno="8889"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::SubsettingContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="8890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="8891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8892"><highlight class="normal"></highlight></codeline>
<codeline lineno="8893"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubsettingContext::KEYWORD_SPECILIZATION()<sp/>{</highlight></codeline>
<codeline lineno="8894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SPECILIZATION,<sp/>0);</highlight></codeline>
<codeline lineno="8895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8896"><highlight class="normal"></highlight></codeline>
<codeline lineno="8897"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::SubsettingContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="8898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="8899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8900"><highlight class="normal"></highlight></codeline>
<codeline lineno="8901"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SubsettingContext::KEYWORD_SUBSET()<sp/>{</highlight></codeline>
<codeline lineno="8902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SUBSET,<sp/>0);</highlight></codeline>
<codeline lineno="8903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8904"><highlight class="normal"></highlight></codeline>
<codeline lineno="8905"><highlight class="normal">KerMLParser::Multiplicity_partContext*<sp/>KerMLParser::SubsettingContext::multiplicity_part()<sp/>{</highlight></codeline>
<codeline lineno="8906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_partContext&gt;(0);</highlight></codeline>
<codeline lineno="8907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8908"><highlight class="normal"></highlight></codeline>
<codeline lineno="8909"><highlight class="normal"></highlight></codeline>
<codeline lineno="8910"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::SubsettingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSubsetting;</highlight></codeline>
<codeline lineno="8912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8913"><highlight class="normal"></highlight></codeline>
<codeline lineno="8914"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubsettingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8917"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSubsetting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8919"><highlight class="normal"></highlight></codeline>
<codeline lineno="8920"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SubsettingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="8921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="8922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8923"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSubsetting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8925"><highlight class="normal"></highlight></codeline>
<codeline lineno="8926"><highlight class="normal">KerMLParser::SubsettingContext*<sp/>KerMLParser::subsetting()<sp/>{</highlight></codeline>
<codeline lineno="8927"><highlight class="normal"><sp/><sp/><ref refid="df/de2/class_ker_m_l_parser_1_1_subsetting_context" kindref="compound">SubsettingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/de2/class_ker_m_l_parser_1_1_subsetting_context" kindref="compound">SubsettingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="8928"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>180,<sp/>KerMLParser::RuleSubsetting);</highlight></codeline>
<codeline lineno="8929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8930"><highlight class="normal"></highlight></codeline>
<codeline lineno="8931"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="8933"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="8935"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8936"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="8937"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="8938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8939"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="8940"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1212);</highlight></codeline>
<codeline lineno="8941"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8942"><highlight class="normal"></highlight></codeline>
<codeline lineno="8943"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_SPECILIZATION)<sp/>{</highlight></codeline>
<codeline lineno="8945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1210);</highlight></codeline>
<codeline lineno="8946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SPECILIZATION);</highlight></codeline>
<codeline lineno="8947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1211);</highlight></codeline>
<codeline lineno="8948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="8949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8950"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1215);</highlight></codeline>
<codeline lineno="8951"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8952"><highlight class="normal"></highlight></codeline>
<codeline lineno="8953"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_SUBSET)<sp/>{</highlight></codeline>
<codeline lineno="8955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1214);</highlight></codeline>
<codeline lineno="8956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SUBSET);</highlight></codeline>
<codeline lineno="8957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8958"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1217);</highlight></codeline>
<codeline lineno="8959"><highlight class="normal"><sp/><sp/><sp/><sp/>specific_type();</highlight></codeline>
<codeline lineno="8960"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1218);</highlight></codeline>
<codeline lineno="8961"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SUBSETS);</highlight></codeline>
<codeline lineno="8962"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1219);</highlight></codeline>
<codeline lineno="8963"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="8964"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1221);</highlight></codeline>
<codeline lineno="8965"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8966"><highlight class="normal"></highlight></codeline>
<codeline lineno="8967"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="8968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="8969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1220);</highlight></codeline>
<codeline lineno="8970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_part();</highlight></codeline>
<codeline lineno="8971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8972"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1223);</highlight></codeline>
<codeline lineno="8973"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="8974"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8975"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="8977"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="8978"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="8979"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="8980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8981"><highlight class="normal"></highlight></codeline>
<codeline lineno="8982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="8983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8984"><highlight class="normal"></highlight></codeline>
<codeline lineno="8985"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_subsettingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8986"><highlight class="normal"></highlight></codeline>
<codeline lineno="8987"><highlight class="normal">KerMLParser::Owned_subsettingContext::Owned_subsettingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="8988"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="8989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8990"><highlight class="normal"></highlight></codeline>
<codeline lineno="8991"><highlight class="normal"><ref refid="d4/d9f/class_ker_m_l_parser_1_1_general__type_context" kindref="compound">KerMLParser::General_typeContext</ref>*<sp/>KerMLParser::Owned_subsettingContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="8992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="8993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8994"><highlight class="normal"></highlight></codeline>
<codeline lineno="8995"><highlight class="normal"></highlight></codeline>
<codeline lineno="8996"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_subsettingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_subsetting;</highlight></codeline>
<codeline lineno="8998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8999"><highlight class="normal"></highlight></codeline>
<codeline lineno="9000"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_subsettingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9003"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_subsetting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9005"><highlight class="normal"></highlight></codeline>
<codeline lineno="9006"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_subsettingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9009"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_subsetting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9011"><highlight class="normal"></highlight></codeline>
<codeline lineno="9012"><highlight class="normal">KerMLParser::Owned_subsettingContext*<sp/>KerMLParser::owned_subsetting()<sp/>{</highlight></codeline>
<codeline lineno="9013"><highlight class="normal"><sp/><sp/><ref refid="d9/dee/class_ker_m_l_parser_1_1_owned__subsetting_context" kindref="compound">Owned_subsettingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/dee/class_ker_m_l_parser_1_1_owned__subsetting_context" kindref="compound">Owned_subsettingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9014"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>182,<sp/>KerMLParser::RuleOwned_subsetting);</highlight></codeline>
<codeline lineno="9015"><highlight class="normal"></highlight></codeline>
<codeline lineno="9016"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9018"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9020"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9021"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9022"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9024"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9025"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1225);</highlight></codeline>
<codeline lineno="9026"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="9027"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9030"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9031"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9032"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9034"><highlight class="normal"></highlight></codeline>
<codeline lineno="9035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9037"><highlight class="normal"></highlight></codeline>
<codeline lineno="9038"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_reference_subsettingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9039"><highlight class="normal"></highlight></codeline>
<codeline lineno="9040"><highlight class="normal">KerMLParser::Owned_reference_subsettingContext::Owned_reference_subsettingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9041"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9043"><highlight class="normal"></highlight></codeline>
<codeline lineno="9044"><highlight class="normal"><ref refid="d4/d9f/class_ker_m_l_parser_1_1_general__type_context" kindref="compound">KerMLParser::General_typeContext</ref>*<sp/>KerMLParser::Owned_reference_subsettingContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="9045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="9046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9047"><highlight class="normal"></highlight></codeline>
<codeline lineno="9048"><highlight class="normal"></highlight></codeline>
<codeline lineno="9049"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_reference_subsettingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_reference_subsetting;</highlight></codeline>
<codeline lineno="9051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9052"><highlight class="normal"></highlight></codeline>
<codeline lineno="9053"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_reference_subsettingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9056"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_reference_subsetting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9058"><highlight class="normal"></highlight></codeline>
<codeline lineno="9059"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_reference_subsettingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9062"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_reference_subsetting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9064"><highlight class="normal"></highlight></codeline>
<codeline lineno="9065"><highlight class="normal">KerMLParser::Owned_reference_subsettingContext*<sp/>KerMLParser::owned_reference_subsetting()<sp/>{</highlight></codeline>
<codeline lineno="9066"><highlight class="normal"><sp/><sp/><ref refid="db/dbf/class_ker_m_l_parser_1_1_owned__reference__subsetting_context" kindref="compound">Owned_reference_subsettingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/dbf/class_ker_m_l_parser_1_1_owned__reference__subsetting_context" kindref="compound">Owned_reference_subsettingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9067"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>184,<sp/>KerMLParser::RuleOwned_reference_subsetting);</highlight></codeline>
<codeline lineno="9068"><highlight class="normal"></highlight></codeline>
<codeline lineno="9069"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9071"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9073"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9074"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9075"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9077"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9078"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1227);</highlight></codeline>
<codeline lineno="9079"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="9080"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9083"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9084"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9085"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9087"><highlight class="normal"></highlight></codeline>
<codeline lineno="9088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9090"><highlight class="normal"></highlight></codeline>
<codeline lineno="9091"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>RedefinitionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9092"><highlight class="normal"></highlight></codeline>
<codeline lineno="9093"><highlight class="normal">KerMLParser::RedefinitionContext::RedefinitionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9094"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9096"><highlight class="normal"></highlight></codeline>
<codeline lineno="9097"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::RedefinitionContext::REDEFINES()<sp/>{</highlight></codeline>
<codeline lineno="9098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::REDEFINES,<sp/>0);</highlight></codeline>
<codeline lineno="9099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9100"><highlight class="normal"></highlight></codeline>
<codeline lineno="9101"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::RedefinitionContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="9102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="9103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9104"><highlight class="normal"></highlight></codeline>
<codeline lineno="9105"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::RedefinitionContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="9106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="9107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9108"><highlight class="normal"></highlight></codeline>
<codeline lineno="9109"><highlight class="normal">KerMLParser::Feature_directionContext*<sp/>KerMLParser::RedefinitionContext::feature_direction()<sp/>{</highlight></codeline>
<codeline lineno="9110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_directionContext&gt;(0);</highlight></codeline>
<codeline lineno="9111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9112"><highlight class="normal"></highlight></codeline>
<codeline lineno="9113"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::RedefinitionContext::KEYWORD_SPECILIZATION()<sp/>{</highlight></codeline>
<codeline lineno="9114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SPECILIZATION,<sp/>0);</highlight></codeline>
<codeline lineno="9115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9116"><highlight class="normal"></highlight></codeline>
<codeline lineno="9117"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::RedefinitionContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="9118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="9119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9120"><highlight class="normal"></highlight></codeline>
<codeline lineno="9121"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::RedefinitionContext::KEYWORD_REDEFINITION()<sp/>{</highlight></codeline>
<codeline lineno="9122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_REDEFINITION,<sp/>0);</highlight></codeline>
<codeline lineno="9123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9124"><highlight class="normal"></highlight></codeline>
<codeline lineno="9125"><highlight class="normal">KerMLParser::Specific_typeContext*<sp/>KerMLParser::RedefinitionContext::specific_type()<sp/>{</highlight></codeline>
<codeline lineno="9126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Specific_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="9127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9128"><highlight class="normal"></highlight></codeline>
<codeline lineno="9129"><highlight class="normal">KerMLParser::Typed_byContext*<sp/>KerMLParser::RedefinitionContext::typed_by()<sp/>{</highlight></codeline>
<codeline lineno="9130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Typed_byContext&gt;(0);</highlight></codeline>
<codeline lineno="9131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9132"><highlight class="normal"></highlight></codeline>
<codeline lineno="9133"><highlight class="normal">KerMLParser::Multiplicity_partContext*<sp/>KerMLParser::RedefinitionContext::multiplicity_part()<sp/>{</highlight></codeline>
<codeline lineno="9134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_partContext&gt;(0);</highlight></codeline>
<codeline lineno="9135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9136"><highlight class="normal"></highlight></codeline>
<codeline lineno="9137"><highlight class="normal">KerMLParser::SubsetsContext*<sp/>KerMLParser::RedefinitionContext::subsets()<sp/>{</highlight></codeline>
<codeline lineno="9138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SubsetsContext&gt;(0);</highlight></codeline>
<codeline lineno="9139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9140"><highlight class="normal"></highlight></codeline>
<codeline lineno="9141"><highlight class="normal">KerMLParser::Feature_assignmentContext*<sp/>KerMLParser::RedefinitionContext::feature_assignment()<sp/>{</highlight></codeline>
<codeline lineno="9142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_assignmentContext&gt;(0);</highlight></codeline>
<codeline lineno="9143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9144"><highlight class="normal"></highlight></codeline>
<codeline lineno="9145"><highlight class="normal"></highlight></codeline>
<codeline lineno="9146"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::RedefinitionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleRedefinition;</highlight></codeline>
<codeline lineno="9148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9149"><highlight class="normal"></highlight></codeline>
<codeline lineno="9150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::RedefinitionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9153"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterRedefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9155"><highlight class="normal"></highlight></codeline>
<codeline lineno="9156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::RedefinitionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9159"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitRedefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9161"><highlight class="normal"></highlight></codeline>
<codeline lineno="9162"><highlight class="normal">KerMLParser::RedefinitionContext*<sp/>KerMLParser::redefinition()<sp/>{</highlight></codeline>
<codeline lineno="9163"><highlight class="normal"><sp/><sp/><ref refid="df/d04/class_ker_m_l_parser_1_1_redefinition_context" kindref="compound">RedefinitionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d04/class_ker_m_l_parser_1_1_redefinition_context" kindref="compound">RedefinitionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9164"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>186,<sp/>KerMLParser::RuleRedefinition);</highlight></codeline>
<codeline lineno="9165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9166"><highlight class="normal"></highlight></codeline>
<codeline lineno="9167"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9169"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9172"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9173"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9175"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9176"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1230);</highlight></codeline>
<codeline lineno="9177"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9178"><highlight class="normal"></highlight></codeline>
<codeline lineno="9179"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((((_la<sp/>-<sp/>54)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="9181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>54))<sp/>&amp;<sp/>524291)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="9182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1229);</highlight></codeline>
<codeline lineno="9183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_direction();</highlight></codeline>
<codeline lineno="9184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9185"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1234);</highlight></codeline>
<codeline lineno="9186"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9187"><highlight class="normal"></highlight></codeline>
<codeline lineno="9188"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_SPECILIZATION)<sp/>{</highlight></codeline>
<codeline lineno="9190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1232);</highlight></codeline>
<codeline lineno="9191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SPECILIZATION);</highlight></codeline>
<codeline lineno="9192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1233);</highlight></codeline>
<codeline lineno="9193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="9194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9195"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1238);</highlight></codeline>
<codeline lineno="9196"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9197"><highlight class="normal"></highlight></codeline>
<codeline lineno="9198"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_REDEFINITION)<sp/>{</highlight></codeline>
<codeline lineno="9200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1236);</highlight></codeline>
<codeline lineno="9201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_REDEFINITION);</highlight></codeline>
<codeline lineno="9202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1237);</highlight></codeline>
<codeline lineno="9203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specific_type();</highlight></codeline>
<codeline lineno="9204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9205"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1240);</highlight></codeline>
<codeline lineno="9206"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::REDEFINES);</highlight></codeline>
<codeline lineno="9207"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1241);</highlight></codeline>
<codeline lineno="9208"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9209"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1243);</highlight></codeline>
<codeline lineno="9210"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9211"><highlight class="normal"></highlight></codeline>
<codeline lineno="9212"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::TYPED_BY)<sp/>{</highlight></codeline>
<codeline lineno="9214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1242);</highlight></codeline>
<codeline lineno="9215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typed_by();</highlight></codeline>
<codeline lineno="9216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9217"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1246);</highlight></codeline>
<codeline lineno="9218"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9219"><highlight class="normal"></highlight></codeline>
<codeline lineno="9220"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="9222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1245);</highlight></codeline>
<codeline lineno="9223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_part();</highlight></codeline>
<codeline lineno="9224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9225"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1249);</highlight></codeline>
<codeline lineno="9226"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9227"><highlight class="normal"></highlight></codeline>
<codeline lineno="9228"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SUBSETS)<sp/>{</highlight></codeline>
<codeline lineno="9230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1248);</highlight></codeline>
<codeline lineno="9231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsets();</highlight></codeline>
<codeline lineno="9232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9233"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1252);</highlight></codeline>
<codeline lineno="9234"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9235"><highlight class="normal"></highlight></codeline>
<codeline lineno="9236"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_ASSIGN)<sp/>{</highlight></codeline>
<codeline lineno="9238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1251);</highlight></codeline>
<codeline lineno="9239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_assignment();</highlight></codeline>
<codeline lineno="9240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9241"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1254);</highlight></codeline>
<codeline lineno="9242"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="9243"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9246"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9247"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9248"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9250"><highlight class="normal"></highlight></codeline>
<codeline lineno="9251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9253"><highlight class="normal"></highlight></codeline>
<codeline lineno="9254"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_redefinitionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9255"><highlight class="normal"></highlight></codeline>
<codeline lineno="9256"><highlight class="normal">KerMLParser::Owned_redefinitionContext::Owned_redefinitionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9257"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9259"><highlight class="normal"></highlight></codeline>
<codeline lineno="9260"><highlight class="normal"><ref refid="d4/d9f/class_ker_m_l_parser_1_1_general__type_context" kindref="compound">KerMLParser::General_typeContext</ref>*<sp/>KerMLParser::Owned_redefinitionContext::general_type()<sp/>{</highlight></codeline>
<codeline lineno="9261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::General_typeContext&gt;(0);</highlight></codeline>
<codeline lineno="9262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9263"><highlight class="normal"></highlight></codeline>
<codeline lineno="9264"><highlight class="normal"></highlight></codeline>
<codeline lineno="9265"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_redefinitionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_redefinition;</highlight></codeline>
<codeline lineno="9267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9268"><highlight class="normal"></highlight></codeline>
<codeline lineno="9269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_redefinitionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9272"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_redefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9274"><highlight class="normal"></highlight></codeline>
<codeline lineno="9275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_redefinitionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9278"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_redefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9280"><highlight class="normal"></highlight></codeline>
<codeline lineno="9281"><highlight class="normal">KerMLParser::Owned_redefinitionContext*<sp/>KerMLParser::owned_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="9282"><highlight class="normal"><sp/><sp/><ref refid="d0/df0/class_ker_m_l_parser_1_1_owned__redefinition_context" kindref="compound">Owned_redefinitionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/df0/class_ker_m_l_parser_1_1_owned__redefinition_context" kindref="compound">Owned_redefinitionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9283"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>188,<sp/>KerMLParser::RuleOwned_redefinition);</highlight></codeline>
<codeline lineno="9284"><highlight class="normal"></highlight></codeline>
<codeline lineno="9285"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9287"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9290"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9291"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9293"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9294"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1256);</highlight></codeline>
<codeline lineno="9295"><highlight class="normal"><sp/><sp/><sp/><sp/>general_type();</highlight></codeline>
<codeline lineno="9296"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9299"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9300"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9301"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9303"><highlight class="normal"></highlight></codeline>
<codeline lineno="9304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9306"><highlight class="normal"></highlight></codeline>
<codeline lineno="9307"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_feature_chainContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9308"><highlight class="normal"></highlight></codeline>
<codeline lineno="9309"><highlight class="normal">KerMLParser::Owned_feature_chainContext::Owned_feature_chainContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9310"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9312"><highlight class="normal"></highlight></codeline>
<codeline lineno="9313"><highlight class="normal"><ref refid="d2/d78/class_ker_m_l_parser_1_1_feature__chain_context" kindref="compound">KerMLParser::Feature_chainContext</ref>*<sp/>KerMLParser::Owned_feature_chainContext::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="9314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="9315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9316"><highlight class="normal"></highlight></codeline>
<codeline lineno="9317"><highlight class="normal"></highlight></codeline>
<codeline lineno="9318"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chainContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_feature_chain;</highlight></codeline>
<codeline lineno="9320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9321"><highlight class="normal"></highlight></codeline>
<codeline lineno="9322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chainContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9325"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_feature_chain(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9327"><highlight class="normal"></highlight></codeline>
<codeline lineno="9328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chainContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9331"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_feature_chain(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9333"><highlight class="normal"></highlight></codeline>
<codeline lineno="9334"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="9335"><highlight class="normal"><sp/><sp/><ref refid="d3/dff/class_ker_m_l_parser_1_1_owned__feature__chain_context" kindref="compound">Owned_feature_chainContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/dff/class_ker_m_l_parser_1_1_owned__feature__chain_context" kindref="compound">Owned_feature_chainContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9336"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>190,<sp/>KerMLParser::RuleOwned_feature_chain);</highlight></codeline>
<codeline lineno="9337"><highlight class="normal"></highlight></codeline>
<codeline lineno="9338"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9340"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9343"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9344"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9346"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9347"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1258);</highlight></codeline>
<codeline lineno="9348"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="9349"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9352"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9353"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9354"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9356"><highlight class="normal"></highlight></codeline>
<codeline lineno="9357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9359"><highlight class="normal"></highlight></codeline>
<codeline lineno="9360"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_chainContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9361"><highlight class="normal"></highlight></codeline>
<codeline lineno="9362"><highlight class="normal">KerMLParser::Feature_chainContext::Feature_chainContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9363"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9365"><highlight class="normal"></highlight></codeline>
<codeline lineno="9366"><highlight class="normal">std::vector&lt;KerMLParser::Owned_feature_chainingContext<sp/>*&gt;<sp/>KerMLParser::Feature_chainContext::owned_feature_chaining()<sp/>{</highlight></codeline>
<codeline lineno="9367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_feature_chainingContext&gt;();</highlight></codeline>
<codeline lineno="9368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9369"><highlight class="normal"></highlight></codeline>
<codeline lineno="9370"><highlight class="normal">KerMLParser::Owned_feature_chainingContext*<sp/>KerMLParser::Feature_chainContext::owned_feature_chaining(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="9371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainingContext&gt;(i);</highlight></codeline>
<codeline lineno="9372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9373"><highlight class="normal"></highlight></codeline>
<codeline lineno="9374"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Feature_chainContext::SYMBOL_DOT()<sp/>{</highlight></codeline>
<codeline lineno="9375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="9376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9377"><highlight class="normal"></highlight></codeline>
<codeline lineno="9378"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_chainContext::SYMBOL_DOT(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="9379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT,<sp/>i);</highlight></codeline>
<codeline lineno="9380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9381"><highlight class="normal"></highlight></codeline>
<codeline lineno="9382"><highlight class="normal"></highlight></codeline>
<codeline lineno="9383"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chainContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_chain;</highlight></codeline>
<codeline lineno="9385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9386"><highlight class="normal"></highlight></codeline>
<codeline lineno="9387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chainContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9390"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_chain(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9392"><highlight class="normal"></highlight></codeline>
<codeline lineno="9393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chainContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9396"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_chain(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9398"><highlight class="normal"></highlight></codeline>
<codeline lineno="9399"><highlight class="normal">KerMLParser::Feature_chainContext*<sp/>KerMLParser::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="9400"><highlight class="normal"><sp/><sp/><ref refid="d2/d78/class_ker_m_l_parser_1_1_feature__chain_context" kindref="compound">Feature_chainContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d78/class_ker_m_l_parser_1_1_feature__chain_context" kindref="compound">Feature_chainContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9401"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>192,<sp/>KerMLParser::RuleFeature_chain);</highlight></codeline>
<codeline lineno="9402"><highlight class="normal"></highlight></codeline>
<codeline lineno="9403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9405"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9408"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9409"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alt;</highlight></codeline>
<codeline lineno="9412"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9413"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1260);</highlight></codeline>
<codeline lineno="9414"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_feature_chaining();</highlight></codeline>
<codeline lineno="9415"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1265);</highlight></codeline>
<codeline lineno="9416"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9417"><highlight class="normal"><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>124,<sp/>_ctx);</highlight></codeline>
<codeline lineno="9418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="9419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="9420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1261);</highlight></codeline>
<codeline lineno="9421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="9422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1262);</highlight></codeline>
<codeline lineno="9423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chaining();<sp/></highlight></codeline>
<codeline lineno="9424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1267);</highlight></codeline>
<codeline lineno="9426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>124,<sp/>_ctx);</highlight></codeline>
<codeline lineno="9428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9429"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9432"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9433"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9434"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9436"><highlight class="normal"></highlight></codeline>
<codeline lineno="9437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9439"><highlight class="normal"></highlight></codeline>
<codeline lineno="9440"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_feature_chainingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9441"><highlight class="normal"></highlight></codeline>
<codeline lineno="9442"><highlight class="normal">KerMLParser::Owned_feature_chainingContext::Owned_feature_chainingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9443"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9445"><highlight class="normal"></highlight></codeline>
<codeline lineno="9446"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Owned_feature_chainingContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="9447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="9448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9449"><highlight class="normal"></highlight></codeline>
<codeline lineno="9450"><highlight class="normal"></highlight></codeline>
<codeline lineno="9451"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chainingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_feature_chaining;</highlight></codeline>
<codeline lineno="9453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9454"><highlight class="normal"></highlight></codeline>
<codeline lineno="9455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chainingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9458"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_feature_chaining(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9460"><highlight class="normal"></highlight></codeline>
<codeline lineno="9461"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chainingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9464"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_feature_chaining(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9466"><highlight class="normal"></highlight></codeline>
<codeline lineno="9467"><highlight class="normal">KerMLParser::Owned_feature_chainingContext*<sp/>KerMLParser::owned_feature_chaining()<sp/>{</highlight></codeline>
<codeline lineno="9468"><highlight class="normal"><sp/><sp/><ref refid="df/d26/class_ker_m_l_parser_1_1_owned__feature__chaining_context" kindref="compound">Owned_feature_chainingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d26/class_ker_m_l_parser_1_1_owned__feature__chaining_context" kindref="compound">Owned_feature_chainingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9469"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>194,<sp/>KerMLParser::RuleOwned_feature_chaining);</highlight></codeline>
<codeline lineno="9470"><highlight class="normal"></highlight></codeline>
<codeline lineno="9471"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9473"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9476"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9477"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9479"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9480"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1268);</highlight></codeline>
<codeline lineno="9481"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9482"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9485"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9486"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9487"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9489"><highlight class="normal"></highlight></codeline>
<codeline lineno="9490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9492"><highlight class="normal"></highlight></codeline>
<codeline lineno="9493"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_invertingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9494"><highlight class="normal"></highlight></codeline>
<codeline lineno="9495"><highlight class="normal">KerMLParser::Feature_invertingContext::Feature_invertingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9496"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9498"><highlight class="normal"></highlight></codeline>
<codeline lineno="9499"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_invertingContext::KEYWORD_INVERSE()<sp/>{</highlight></codeline>
<codeline lineno="9500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_INVERSE,<sp/>0);</highlight></codeline>
<codeline lineno="9501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9502"><highlight class="normal"></highlight></codeline>
<codeline lineno="9503"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_invertingContext::KEYWORD_OF()<sp/>{</highlight></codeline>
<codeline lineno="9504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_OF,<sp/>0);</highlight></codeline>
<codeline lineno="9505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9506"><highlight class="normal"></highlight></codeline>
<codeline lineno="9507"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::Feature_invertingContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="9508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="9509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9510"><highlight class="normal"></highlight></codeline>
<codeline lineno="9511"><highlight class="normal">std::vector&lt;KerMLParser::Qualified_nameContext<sp/>*&gt;<sp/>KerMLParser::Feature_invertingContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="9512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Qualified_nameContext&gt;();</highlight></codeline>
<codeline lineno="9513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9514"><highlight class="normal"></highlight></codeline>
<codeline lineno="9515"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::Feature_invertingContext::qualified_name(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="9516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(i);</highlight></codeline>
<codeline lineno="9517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9518"><highlight class="normal"></highlight></codeline>
<codeline lineno="9519"><highlight class="normal">std::vector&lt;KerMLParser::Owned_feature_chainContext<sp/>*&gt;<sp/>KerMLParser::Feature_invertingContext::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="9520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_feature_chainContext&gt;();</highlight></codeline>
<codeline lineno="9521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9522"><highlight class="normal"></highlight></codeline>
<codeline lineno="9523"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::Feature_invertingContext::owned_feature_chain(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="9524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainContext&gt;(i);</highlight></codeline>
<codeline lineno="9525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9526"><highlight class="normal"></highlight></codeline>
<codeline lineno="9527"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_invertingContext::KEYWORD_INVERTING()<sp/>{</highlight></codeline>
<codeline lineno="9528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_INVERTING,<sp/>0);</highlight></codeline>
<codeline lineno="9529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9530"><highlight class="normal"></highlight></codeline>
<codeline lineno="9531"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Feature_invertingContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="9532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="9533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9534"><highlight class="normal"></highlight></codeline>
<codeline lineno="9535"><highlight class="normal"></highlight></codeline>
<codeline lineno="9536"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_invertingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_inverting;</highlight></codeline>
<codeline lineno="9538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9539"><highlight class="normal"></highlight></codeline>
<codeline lineno="9540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_invertingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9543"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_inverting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9545"><highlight class="normal"></highlight></codeline>
<codeline lineno="9546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_invertingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9549"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_inverting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9551"><highlight class="normal"></highlight></codeline>
<codeline lineno="9552"><highlight class="normal">KerMLParser::Feature_invertingContext*<sp/>KerMLParser::feature_inverting()<sp/>{</highlight></codeline>
<codeline lineno="9553"><highlight class="normal"><sp/><sp/><ref refid="db/d30/class_ker_m_l_parser_1_1_feature__inverting_context" kindref="compound">Feature_invertingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d30/class_ker_m_l_parser_1_1_feature__inverting_context" kindref="compound">Feature_invertingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9554"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>196,<sp/>KerMLParser::RuleFeature_inverting);</highlight></codeline>
<codeline lineno="9555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9556"><highlight class="normal"></highlight></codeline>
<codeline lineno="9557"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9559"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9562"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9563"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9565"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9566"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1272);</highlight></codeline>
<codeline lineno="9567"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9568"><highlight class="normal"></highlight></codeline>
<codeline lineno="9569"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="9570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_INVERTING)<sp/>{</highlight></codeline>
<codeline lineno="9571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1270);</highlight></codeline>
<codeline lineno="9572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_INVERTING);</highlight></codeline>
<codeline lineno="9573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1271);</highlight></codeline>
<codeline lineno="9574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="9575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9576"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1274);</highlight></codeline>
<codeline lineno="9577"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_INVERSE);</highlight></codeline>
<codeline lineno="9578"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1277);</highlight></codeline>
<codeline lineno="9579"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>126,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="9581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="9582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1275);</highlight></codeline>
<codeline lineno="9583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9586"><highlight class="normal"></highlight></codeline>
<codeline lineno="9587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="9588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1276);</highlight></codeline>
<codeline lineno="9589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="9590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9592"><highlight class="normal"></highlight></codeline>
<codeline lineno="9593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9596"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1279);</highlight></codeline>
<codeline lineno="9597"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_OF);</highlight></codeline>
<codeline lineno="9598"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1282);</highlight></codeline>
<codeline lineno="9599"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>127,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="9601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="9602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1280);</highlight></codeline>
<codeline lineno="9603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9606"><highlight class="normal"></highlight></codeline>
<codeline lineno="9607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="9608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1281);</highlight></codeline>
<codeline lineno="9609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="9610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9612"><highlight class="normal"></highlight></codeline>
<codeline lineno="9613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9616"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1284);</highlight></codeline>
<codeline lineno="9617"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="9618"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9621"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9622"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9623"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9624"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9625"><highlight class="normal"></highlight></codeline>
<codeline lineno="9626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9628"><highlight class="normal"></highlight></codeline>
<codeline lineno="9629"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_feature_invertingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9630"><highlight class="normal"></highlight></codeline>
<codeline lineno="9631"><highlight class="normal">KerMLParser::Owned_feature_invertingContext::Owned_feature_invertingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9632"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9634"><highlight class="normal"></highlight></codeline>
<codeline lineno="9635"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Owned_feature_invertingContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="9636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="9637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9638"><highlight class="normal"></highlight></codeline>
<codeline lineno="9639"><highlight class="normal">KerMLParser::Owned_feature_chainContext*<sp/>KerMLParser::Owned_feature_invertingContext::owned_feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="9640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="9641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9642"><highlight class="normal"></highlight></codeline>
<codeline lineno="9643"><highlight class="normal"></highlight></codeline>
<codeline lineno="9644"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_invertingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_feature_inverting;</highlight></codeline>
<codeline lineno="9646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9647"><highlight class="normal"></highlight></codeline>
<codeline lineno="9648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_invertingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9651"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_feature_inverting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9653"><highlight class="normal"></highlight></codeline>
<codeline lineno="9654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_invertingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9657"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_feature_inverting(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9659"><highlight class="normal"></highlight></codeline>
<codeline lineno="9660"><highlight class="normal">KerMLParser::Owned_feature_invertingContext*<sp/>KerMLParser::owned_feature_inverting()<sp/>{</highlight></codeline>
<codeline lineno="9661"><highlight class="normal"><sp/><sp/><ref refid="db/d76/class_ker_m_l_parser_1_1_owned__feature__inverting_context" kindref="compound">Owned_feature_invertingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d76/class_ker_m_l_parser_1_1_owned__feature__inverting_context" kindref="compound">Owned_feature_invertingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9662"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>198,<sp/>KerMLParser::RuleOwned_feature_inverting);</highlight></codeline>
<codeline lineno="9663"><highlight class="normal"></highlight></codeline>
<codeline lineno="9664"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9666"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9669"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9670"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9672"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1288);</highlight></codeline>
<codeline lineno="9673"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>128,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="9675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="9676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1286);</highlight></codeline>
<codeline lineno="9678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9681"><highlight class="normal"></highlight></codeline>
<codeline lineno="9682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="9683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="9684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1287);</highlight></codeline>
<codeline lineno="9685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain();</highlight></codeline>
<codeline lineno="9686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9688"><highlight class="normal"></highlight></codeline>
<codeline lineno="9689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9692"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9695"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9696"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9697"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9699"><highlight class="normal"></highlight></codeline>
<codeline lineno="9700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9702"><highlight class="normal"></highlight></codeline>
<codeline lineno="9703"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_featuringContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9704"><highlight class="normal"></highlight></codeline>
<codeline lineno="9705"><highlight class="normal">KerMLParser::Type_featuringContext::Type_featuringContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9706"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9708"><highlight class="normal"></highlight></codeline>
<codeline lineno="9709"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_featuringContext::KEYWORD_FEATURING()<sp/>{</highlight></codeline>
<codeline lineno="9710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FEATURING,<sp/>0);</highlight></codeline>
<codeline lineno="9711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9712"><highlight class="normal"></highlight></codeline>
<codeline lineno="9713"><highlight class="normal">std::vector&lt;KerMLParser::Qualified_nameContext<sp/>*&gt;<sp/>KerMLParser::Type_featuringContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="9714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Qualified_nameContext&gt;();</highlight></codeline>
<codeline lineno="9715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9716"><highlight class="normal"></highlight></codeline>
<codeline lineno="9717"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::Type_featuringContext::qualified_name(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="9718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(i);</highlight></codeline>
<codeline lineno="9719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9720"><highlight class="normal"></highlight></codeline>
<codeline lineno="9721"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_featuringContext::KEYWORD_BY()<sp/>{</highlight></codeline>
<codeline lineno="9722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_BY,<sp/>0);</highlight></codeline>
<codeline lineno="9723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9724"><highlight class="normal"></highlight></codeline>
<codeline lineno="9725"><highlight class="normal">KerMLParser::Relationship_bodyContext*<sp/>KerMLParser::Type_featuringContext::relationship_body()<sp/>{</highlight></codeline>
<codeline lineno="9726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Relationship_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="9727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9728"><highlight class="normal"></highlight></codeline>
<codeline lineno="9729"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Type_featuringContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="9730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="9731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9732"><highlight class="normal"></highlight></codeline>
<codeline lineno="9733"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Type_featuringContext::KEYWORD_OF()<sp/>{</highlight></codeline>
<codeline lineno="9734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_OF,<sp/>0);</highlight></codeline>
<codeline lineno="9735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9736"><highlight class="normal"></highlight></codeline>
<codeline lineno="9737"><highlight class="normal"></highlight></codeline>
<codeline lineno="9738"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_featuringContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_featuring;</highlight></codeline>
<codeline lineno="9740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9741"><highlight class="normal"></highlight></codeline>
<codeline lineno="9742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_featuringContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9745"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_featuring(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9747"><highlight class="normal"></highlight></codeline>
<codeline lineno="9748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_featuringContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9751"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_featuring(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9753"><highlight class="normal"></highlight></codeline>
<codeline lineno="9754"><highlight class="normal">KerMLParser::Type_featuringContext*<sp/>KerMLParser::type_featuring()<sp/>{</highlight></codeline>
<codeline lineno="9755"><highlight class="normal"><sp/><sp/><ref refid="d8/d7c/class_ker_m_l_parser_1_1_type__featuring_context" kindref="compound">Type_featuringContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d7c/class_ker_m_l_parser_1_1_type__featuring_context" kindref="compound">Type_featuringContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9756"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>200,<sp/>KerMLParser::RuleType_featuring);</highlight></codeline>
<codeline lineno="9757"><highlight class="normal"></highlight></codeline>
<codeline lineno="9758"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9760"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9762"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9763"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9764"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9766"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9767"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1290);</highlight></codeline>
<codeline lineno="9768"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FEATURING);</highlight></codeline>
<codeline lineno="9769"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1294);</highlight></codeline>
<codeline lineno="9770"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9771"><highlight class="normal"></highlight></codeline>
<codeline lineno="9772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>129,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="9773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="9774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1291);</highlight></codeline>
<codeline lineno="9775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="9776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1292);</highlight></codeline>
<codeline lineno="9777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_OF);</highlight></codeline>
<codeline lineno="9778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9780"><highlight class="normal"></highlight></codeline>
<codeline lineno="9781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9784"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1296);</highlight></codeline>
<codeline lineno="9785"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9786"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1297);</highlight></codeline>
<codeline lineno="9787"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_BY);</highlight></codeline>
<codeline lineno="9788"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1298);</highlight></codeline>
<codeline lineno="9789"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9790"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1299);</highlight></codeline>
<codeline lineno="9791"><highlight class="normal"><sp/><sp/><sp/><sp/>relationship_body();</highlight></codeline>
<codeline lineno="9792"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9795"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9796"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9797"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9799"><highlight class="normal"></highlight></codeline>
<codeline lineno="9800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9802"><highlight class="normal"></highlight></codeline>
<codeline lineno="9803"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_type_featuringContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9804"><highlight class="normal"></highlight></codeline>
<codeline lineno="9805"><highlight class="normal">KerMLParser::Owned_type_featuringContext::Owned_type_featuringContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9806"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9808"><highlight class="normal"></highlight></codeline>
<codeline lineno="9809"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Owned_type_featuringContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="9810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="9811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9812"><highlight class="normal"></highlight></codeline>
<codeline lineno="9813"><highlight class="normal"></highlight></codeline>
<codeline lineno="9814"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_type_featuringContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_type_featuring;</highlight></codeline>
<codeline lineno="9816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9817"><highlight class="normal"></highlight></codeline>
<codeline lineno="9818"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_type_featuringContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9821"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_type_featuring(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9823"><highlight class="normal"></highlight></codeline>
<codeline lineno="9824"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_type_featuringContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9827"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_type_featuring(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9829"><highlight class="normal"></highlight></codeline>
<codeline lineno="9830"><highlight class="normal">KerMLParser::Owned_type_featuringContext*<sp/>KerMLParser::owned_type_featuring()<sp/>{</highlight></codeline>
<codeline lineno="9831"><highlight class="normal"><sp/><sp/><ref refid="d4/d58/class_ker_m_l_parser_1_1_owned__type__featuring_context" kindref="compound">Owned_type_featuringContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/d58/class_ker_m_l_parser_1_1_owned__type__featuring_context" kindref="compound">Owned_type_featuringContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9832"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>202,<sp/>KerMLParser::RuleOwned_type_featuring);</highlight></codeline>
<codeline lineno="9833"><highlight class="normal"></highlight></codeline>
<codeline lineno="9834"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9836"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9838"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9839"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9840"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9842"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9843"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1301);</highlight></codeline>
<codeline lineno="9844"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="9845"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9846"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9848"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9849"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9850"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9852"><highlight class="normal"></highlight></codeline>
<codeline lineno="9853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9855"><highlight class="normal"></highlight></codeline>
<codeline lineno="9856"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Data_typeContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9857"><highlight class="normal"></highlight></codeline>
<codeline lineno="9858"><highlight class="normal">KerMLParser::Data_typeContext::Data_typeContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9859"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9861"><highlight class="normal"></highlight></codeline>
<codeline lineno="9862"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::Data_typeContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="9863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="9864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9865"><highlight class="normal"></highlight></codeline>
<codeline lineno="9866"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Data_typeContext::KEYWORD_DATATYPE()<sp/>{</highlight></codeline>
<codeline lineno="9867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DATATYPE,<sp/>0);</highlight></codeline>
<codeline lineno="9868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9869"><highlight class="normal"></highlight></codeline>
<codeline lineno="9870"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::Data_typeContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="9871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="9872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9873"><highlight class="normal"></highlight></codeline>
<codeline lineno="9874"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Data_typeContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="9875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="9876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9877"><highlight class="normal"></highlight></codeline>
<codeline lineno="9878"><highlight class="normal"></highlight></codeline>
<codeline lineno="9879"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Data_typeContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleData_type;</highlight></codeline>
<codeline lineno="9881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9882"><highlight class="normal"></highlight></codeline>
<codeline lineno="9883"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Data_typeContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9886"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterData_type(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9888"><highlight class="normal"></highlight></codeline>
<codeline lineno="9889"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Data_typeContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9892"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitData_type(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9894"><highlight class="normal"></highlight></codeline>
<codeline lineno="9895"><highlight class="normal">KerMLParser::Data_typeContext*<sp/>KerMLParser::data_type()<sp/>{</highlight></codeline>
<codeline lineno="9896"><highlight class="normal"><sp/><sp/><ref refid="d2/d03/class_ker_m_l_parser_1_1_data__type_context" kindref="compound">Data_typeContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d03/class_ker_m_l_parser_1_1_data__type_context" kindref="compound">Data_typeContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9897"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>204,<sp/>KerMLParser::RuleData_type);</highlight></codeline>
<codeline lineno="9898"><highlight class="normal"></highlight></codeline>
<codeline lineno="9899"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9901"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9903"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9904"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9905"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9907"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9908"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1303);</highlight></codeline>
<codeline lineno="9909"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="9910"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1304);</highlight></codeline>
<codeline lineno="9911"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DATATYPE);</highlight></codeline>
<codeline lineno="9912"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1305);</highlight></codeline>
<codeline lineno="9913"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="9914"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1306);</highlight></codeline>
<codeline lineno="9915"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="9916"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9919"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9920"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9921"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9923"><highlight class="normal"></highlight></codeline>
<codeline lineno="9924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9926"><highlight class="normal"></highlight></codeline>
<codeline lineno="9927"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ClassContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9928"><highlight class="normal"></highlight></codeline>
<codeline lineno="9929"><highlight class="normal">KerMLParser::ClassContext::ClassContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="9930"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="9931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9932"><highlight class="normal"></highlight></codeline>
<codeline lineno="9933"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::ClassContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="9934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="9935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9936"><highlight class="normal"></highlight></codeline>
<codeline lineno="9937"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ClassContext::KEYWORD_CLASS()<sp/>{</highlight></codeline>
<codeline lineno="9938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_CLASS,<sp/>0);</highlight></codeline>
<codeline lineno="9939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9940"><highlight class="normal"></highlight></codeline>
<codeline lineno="9941"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::ClassContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="9942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="9943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9944"><highlight class="normal"></highlight></codeline>
<codeline lineno="9945"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::ClassContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="9946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="9947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9948"><highlight class="normal"></highlight></codeline>
<codeline lineno="9949"><highlight class="normal"></highlight></codeline>
<codeline lineno="9950"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ClassContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleClass;</highlight></codeline>
<codeline lineno="9952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9953"><highlight class="normal"></highlight></codeline>
<codeline lineno="9954"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ClassContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9957"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterClass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9959"><highlight class="normal"></highlight></codeline>
<codeline lineno="9960"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ClassContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="9961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="9962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9963"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitClass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9965"><highlight class="normal"></highlight></codeline>
<codeline lineno="9966"><highlight class="normal">KerMLParser::ClassContext*<sp/>KerMLParser::class_()<sp/>{</highlight></codeline>
<codeline lineno="9967"><highlight class="normal"><sp/><sp/><ref refid="de/d78/class_ker_m_l_parser_1_1_class_context" kindref="compound">ClassContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d78/class_ker_m_l_parser_1_1_class_context" kindref="compound">ClassContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="9968"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>206,<sp/>KerMLParser::RuleClass);</highlight></codeline>
<codeline lineno="9969"><highlight class="normal"></highlight></codeline>
<codeline lineno="9970"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="9972"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="9974"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9975"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="9976"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="9977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9978"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="9979"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1308);</highlight></codeline>
<codeline lineno="9980"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="9981"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1309);</highlight></codeline>
<codeline lineno="9982"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_CLASS);</highlight></codeline>
<codeline lineno="9983"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1310);</highlight></codeline>
<codeline lineno="9984"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="9985"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1311);</highlight></codeline>
<codeline lineno="9986"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="9987"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9988"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="9990"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="9991"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="9992"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="9993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9994"><highlight class="normal"></highlight></codeline>
<codeline lineno="9995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="9996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9997"><highlight class="normal"></highlight></codeline>
<codeline lineno="9998"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>StructureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9999"><highlight class="normal"></highlight></codeline>
<codeline lineno="10000"><highlight class="normal">KerMLParser::StructureContext::StructureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10001"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10003"><highlight class="normal"></highlight></codeline>
<codeline lineno="10004"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::StructureContext::KEYWORD_STRUCT()<sp/>{</highlight></codeline>
<codeline lineno="10005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_STRUCT,<sp/>0);</highlight></codeline>
<codeline lineno="10006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10007"><highlight class="normal"></highlight></codeline>
<codeline lineno="10008"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::StructureContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10011"><highlight class="normal"></highlight></codeline>
<codeline lineno="10012"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::StructureContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="10013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="10014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10015"><highlight class="normal"></highlight></codeline>
<codeline lineno="10016"><highlight class="normal">KerMLParser::Type_prefixContext*<sp/>KerMLParser::StructureContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="10017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="10018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10019"><highlight class="normal"></highlight></codeline>
<codeline lineno="10020"><highlight class="normal"></highlight></codeline>
<codeline lineno="10021"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::StructureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleStructure;</highlight></codeline>
<codeline lineno="10023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10024"><highlight class="normal"></highlight></codeline>
<codeline lineno="10025"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StructureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10028"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterStructure(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10030"><highlight class="normal"></highlight></codeline>
<codeline lineno="10031"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StructureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10034"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitStructure(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10036"><highlight class="normal"></highlight></codeline>
<codeline lineno="10037"><highlight class="normal">KerMLParser::StructureContext*<sp/>KerMLParser::structure()<sp/>{</highlight></codeline>
<codeline lineno="10038"><highlight class="normal"><sp/><sp/><ref refid="d9/d2e/class_ker_m_l_parser_1_1_structure_context" kindref="compound">StructureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d2e/class_ker_m_l_parser_1_1_structure_context" kindref="compound">StructureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10039"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>208,<sp/>KerMLParser::RuleStructure);</highlight></codeline>
<codeline lineno="10040"><highlight class="normal"></highlight></codeline>
<codeline lineno="10041"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10043"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10045"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10046"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10047"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10049"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10050"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1314);</highlight></codeline>
<codeline lineno="10051"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10052"><highlight class="normal"></highlight></codeline>
<codeline lineno="10053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>130,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="10054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="10055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1313);</highlight></codeline>
<codeline lineno="10056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="10057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10059"><highlight class="normal"></highlight></codeline>
<codeline lineno="10060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10063"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1316);</highlight></codeline>
<codeline lineno="10064"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_STRUCT);</highlight></codeline>
<codeline lineno="10065"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1317);</highlight></codeline>
<codeline lineno="10066"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="10067"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1318);</highlight></codeline>
<codeline lineno="10068"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="10069"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10072"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10073"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10074"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10076"><highlight class="normal"></highlight></codeline>
<codeline lineno="10077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10079"><highlight class="normal"></highlight></codeline>
<codeline lineno="10080"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>AssociationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10081"><highlight class="normal"></highlight></codeline>
<codeline lineno="10082"><highlight class="normal">KerMLParser::AssociationContext::AssociationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10083"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10085"><highlight class="normal"></highlight></codeline>
<codeline lineno="10086"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::AssociationContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="10087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="10088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10089"><highlight class="normal"></highlight></codeline>
<codeline lineno="10090"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::AssociationContext::KEYWORD_ASSOC()<sp/>{</highlight></codeline>
<codeline lineno="10091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ASSOC,<sp/>0);</highlight></codeline>
<codeline lineno="10092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10093"><highlight class="normal"></highlight></codeline>
<codeline lineno="10094"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::AssociationContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10097"><highlight class="normal"></highlight></codeline>
<codeline lineno="10098"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::AssociationContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="10099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="10100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10101"><highlight class="normal"></highlight></codeline>
<codeline lineno="10102"><highlight class="normal"></highlight></codeline>
<codeline lineno="10103"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::AssociationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleAssociation;</highlight></codeline>
<codeline lineno="10105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10106"><highlight class="normal"></highlight></codeline>
<codeline lineno="10107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::AssociationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10110"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterAssociation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10112"><highlight class="normal"></highlight></codeline>
<codeline lineno="10113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::AssociationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10116"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitAssociation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10118"><highlight class="normal"></highlight></codeline>
<codeline lineno="10119"><highlight class="normal">KerMLParser::AssociationContext*<sp/>KerMLParser::association()<sp/>{</highlight></codeline>
<codeline lineno="10120"><highlight class="normal"><sp/><sp/><ref refid="da/d8f/class_ker_m_l_parser_1_1_association_context" kindref="compound">AssociationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d8f/class_ker_m_l_parser_1_1_association_context" kindref="compound">AssociationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10121"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>210,<sp/>KerMLParser::RuleAssociation);</highlight></codeline>
<codeline lineno="10122"><highlight class="normal"></highlight></codeline>
<codeline lineno="10123"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10128"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10129"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10131"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10132"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1320);</highlight></codeline>
<codeline lineno="10133"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="10134"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1321);</highlight></codeline>
<codeline lineno="10135"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ASSOC);</highlight></codeline>
<codeline lineno="10136"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1322);</highlight></codeline>
<codeline lineno="10137"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="10138"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1323);</highlight></codeline>
<codeline lineno="10139"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="10140"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10143"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10144"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10145"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10147"><highlight class="normal"></highlight></codeline>
<codeline lineno="10148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10150"><highlight class="normal"></highlight></codeline>
<codeline lineno="10151"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Association_structureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10152"><highlight class="normal"></highlight></codeline>
<codeline lineno="10153"><highlight class="normal">KerMLParser::Association_structureContext::Association_structureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10154"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10156"><highlight class="normal"></highlight></codeline>
<codeline lineno="10157"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::Association_structureContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="10158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="10159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10160"><highlight class="normal"></highlight></codeline>
<codeline lineno="10161"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Association_structureContext::KEYWORD_ASSOC()<sp/>{</highlight></codeline>
<codeline lineno="10162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ASSOC,<sp/>0);</highlight></codeline>
<codeline lineno="10163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10164"><highlight class="normal"></highlight></codeline>
<codeline lineno="10165"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Association_structureContext::KEYWORD_STRUCT()<sp/>{</highlight></codeline>
<codeline lineno="10166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_STRUCT,<sp/>0);</highlight></codeline>
<codeline lineno="10167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10168"><highlight class="normal"></highlight></codeline>
<codeline lineno="10169"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::Association_structureContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10172"><highlight class="normal"></highlight></codeline>
<codeline lineno="10173"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Association_structureContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="10174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="10175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10176"><highlight class="normal"></highlight></codeline>
<codeline lineno="10177"><highlight class="normal"></highlight></codeline>
<codeline lineno="10178"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Association_structureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleAssociation_structure;</highlight></codeline>
<codeline lineno="10180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10181"><highlight class="normal"></highlight></codeline>
<codeline lineno="10182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Association_structureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10185"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterAssociation_structure(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10187"><highlight class="normal"></highlight></codeline>
<codeline lineno="10188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Association_structureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10191"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitAssociation_structure(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10193"><highlight class="normal"></highlight></codeline>
<codeline lineno="10194"><highlight class="normal">KerMLParser::Association_structureContext*<sp/>KerMLParser::association_structure()<sp/>{</highlight></codeline>
<codeline lineno="10195"><highlight class="normal"><sp/><sp/><ref refid="de/db4/class_ker_m_l_parser_1_1_association__structure_context" kindref="compound">Association_structureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/db4/class_ker_m_l_parser_1_1_association__structure_context" kindref="compound">Association_structureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10196"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>212,<sp/>KerMLParser::RuleAssociation_structure);</highlight></codeline>
<codeline lineno="10197"><highlight class="normal"></highlight></codeline>
<codeline lineno="10198"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10200"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10203"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10204"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10206"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10207"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1325);</highlight></codeline>
<codeline lineno="10208"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="10209"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1326);</highlight></codeline>
<codeline lineno="10210"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ASSOC);</highlight></codeline>
<codeline lineno="10211"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1327);</highlight></codeline>
<codeline lineno="10212"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_STRUCT);</highlight></codeline>
<codeline lineno="10213"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1328);</highlight></codeline>
<codeline lineno="10214"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="10215"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1329);</highlight></codeline>
<codeline lineno="10216"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="10217"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10220"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10221"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10222"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10224"><highlight class="normal"></highlight></codeline>
<codeline lineno="10225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10227"><highlight class="normal"></highlight></codeline>
<codeline lineno="10228"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ConnectorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10229"><highlight class="normal"></highlight></codeline>
<codeline lineno="10230"><highlight class="normal">KerMLParser::ConnectorContext::ConnectorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10231"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10233"><highlight class="normal"></highlight></codeline>
<codeline lineno="10234"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ConnectorContext::KEYWORD_CONNECTOR()<sp/>{</highlight></codeline>
<codeline lineno="10235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_CONNECTOR,<sp/>0);</highlight></codeline>
<codeline lineno="10236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10237"><highlight class="normal"></highlight></codeline>
<codeline lineno="10238"><highlight class="normal">KerMLParser::Connector_declarationContext*<sp/>KerMLParser::ConnectorContext::connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Connector_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10241"><highlight class="normal"></highlight></codeline>
<codeline lineno="10242"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::ConnectorContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="10243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="10244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10245"><highlight class="normal"></highlight></codeline>
<codeline lineno="10246"><highlight class="normal">KerMLParser::Type_prefixContext*<sp/>KerMLParser::ConnectorContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="10247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="10248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10249"><highlight class="normal"></highlight></codeline>
<codeline lineno="10250"><highlight class="normal"></highlight></codeline>
<codeline lineno="10251"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ConnectorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConnector;</highlight></codeline>
<codeline lineno="10253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10254"><highlight class="normal"></highlight></codeline>
<codeline lineno="10255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ConnectorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10258"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConnector(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10260"><highlight class="normal"></highlight></codeline>
<codeline lineno="10261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ConnectorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10264"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConnector(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10266"><highlight class="normal"></highlight></codeline>
<codeline lineno="10267"><highlight class="normal">KerMLParser::ConnectorContext*<sp/>KerMLParser::connector()<sp/>{</highlight></codeline>
<codeline lineno="10268"><highlight class="normal"><sp/><sp/><ref refid="db/dc9/class_ker_m_l_parser_1_1_connector_context" kindref="compound">ConnectorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/dc9/class_ker_m_l_parser_1_1_connector_context" kindref="compound">ConnectorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10269"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>214,<sp/>KerMLParser::RuleConnector);</highlight></codeline>
<codeline lineno="10270"><highlight class="normal"></highlight></codeline>
<codeline lineno="10271"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10273"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10276"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10277"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10279"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10280"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1332);</highlight></codeline>
<codeline lineno="10281"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10282"><highlight class="normal"></highlight></codeline>
<codeline lineno="10283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>131,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="10284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="10285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1331);</highlight></codeline>
<codeline lineno="10286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="10287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10289"><highlight class="normal"></highlight></codeline>
<codeline lineno="10290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10293"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1334);</highlight></codeline>
<codeline lineno="10294"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_CONNECTOR);</highlight></codeline>
<codeline lineno="10295"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1335);</highlight></codeline>
<codeline lineno="10296"><highlight class="normal"><sp/><sp/><sp/><sp/>connector_declaration();</highlight></codeline>
<codeline lineno="10297"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1336);</highlight></codeline>
<codeline lineno="10298"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="10299"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10302"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10303"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10304"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10306"><highlight class="normal"></highlight></codeline>
<codeline lineno="10307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10309"><highlight class="normal"></highlight></codeline>
<codeline lineno="10310"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Connector_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10311"><highlight class="normal"></highlight></codeline>
<codeline lineno="10312"><highlight class="normal">KerMLParser::Connector_declarationContext::Connector_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10313"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10315"><highlight class="normal"></highlight></codeline>
<codeline lineno="10316"><highlight class="normal"><ref refid="d0/da8/class_ker_m_l_parser_1_1_feature__declaration_context" kindref="compound">KerMLParser::Feature_declarationContext</ref>*<sp/>KerMLParser::Connector_declarationContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10319"><highlight class="normal"></highlight></codeline>
<codeline lineno="10320"><highlight class="normal">KerMLParser::Binary_connector_declarationContext*<sp/>KerMLParser::Connector_declarationContext::binary_connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Binary_connector_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10323"><highlight class="normal"></highlight></codeline>
<codeline lineno="10324"><highlight class="normal">KerMLParser::Nary_connector_declarationContext*<sp/>KerMLParser::Connector_declarationContext::nary_connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Nary_connector_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10327"><highlight class="normal"></highlight></codeline>
<codeline lineno="10328"><highlight class="normal"></highlight></codeline>
<codeline lineno="10329"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Connector_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConnector_declaration;</highlight></codeline>
<codeline lineno="10331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10332"><highlight class="normal"></highlight></codeline>
<codeline lineno="10333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Connector_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10336"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConnector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10338"><highlight class="normal"></highlight></codeline>
<codeline lineno="10339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Connector_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10342"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConnector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10344"><highlight class="normal"></highlight></codeline>
<codeline lineno="10345"><highlight class="normal">KerMLParser::Connector_declarationContext*<sp/>KerMLParser::connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10346"><highlight class="normal"><sp/><sp/><ref refid="d3/d21/class_ker_m_l_parser_1_1_connector__declaration_context" kindref="compound">Connector_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d21/class_ker_m_l_parser_1_1_connector__declaration_context" kindref="compound">Connector_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10347"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>216,<sp/>KerMLParser::RuleConnector_declaration);</highlight></codeline>
<codeline lineno="10348"><highlight class="normal"></highlight></codeline>
<codeline lineno="10349"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10351"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10354"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10355"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10357"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10358"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1338);</highlight></codeline>
<codeline lineno="10359"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="10360"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1341);</highlight></codeline>
<codeline lineno="10361"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="10363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_ALL:</highlight></codeline>
<codeline lineno="10364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_FROM:<sp/>{</highlight></codeline>
<codeline lineno="10365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1339);</highlight></codeline>
<codeline lineno="10366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binary_connector_declaration();</highlight></codeline>
<codeline lineno="10367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10369"><highlight class="normal"></highlight></codeline>
<codeline lineno="10370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_ROUND_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="10371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1340);</highlight></codeline>
<codeline lineno="10372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nary_connector_declaration();</highlight></codeline>
<codeline lineno="10373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10375"><highlight class="normal"></highlight></codeline>
<codeline lineno="10376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10379"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10382"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10383"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10384"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10386"><highlight class="normal"></highlight></codeline>
<codeline lineno="10387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10389"><highlight class="normal"></highlight></codeline>
<codeline lineno="10390"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Binary_connector_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10391"><highlight class="normal"></highlight></codeline>
<codeline lineno="10392"><highlight class="normal">KerMLParser::Binary_connector_declarationContext::Binary_connector_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10393"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10395"><highlight class="normal"></highlight></codeline>
<codeline lineno="10396"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_connector_declarationContext::KEYWORD_FROM()<sp/>{</highlight></codeline>
<codeline lineno="10397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FROM,<sp/>0);</highlight></codeline>
<codeline lineno="10398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10399"><highlight class="normal"></highlight></codeline>
<codeline lineno="10400"><highlight class="normal">std::vector&lt;KerMLParser::Connector_end_memberContext<sp/>*&gt;<sp/>KerMLParser::Binary_connector_declarationContext::connector_end_member()<sp/>{</highlight></codeline>
<codeline lineno="10401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Connector_end_memberContext&gt;();</highlight></codeline>
<codeline lineno="10402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10403"><highlight class="normal"></highlight></codeline>
<codeline lineno="10404"><highlight class="normal">KerMLParser::Connector_end_memberContext*<sp/>KerMLParser::Binary_connector_declarationContext::connector_end_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="10405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Connector_end_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="10406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10407"><highlight class="normal"></highlight></codeline>
<codeline lineno="10408"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_connector_declarationContext::KEYWORD_TO()<sp/>{</highlight></codeline>
<codeline lineno="10409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TO,<sp/>0);</highlight></codeline>
<codeline lineno="10410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10411"><highlight class="normal"></highlight></codeline>
<codeline lineno="10412"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_connector_declarationContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="10413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="10414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10415"><highlight class="normal"></highlight></codeline>
<codeline lineno="10416"><highlight class="normal"></highlight></codeline>
<codeline lineno="10417"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Binary_connector_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBinary_connector_declaration;</highlight></codeline>
<codeline lineno="10419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10420"><highlight class="normal"></highlight></codeline>
<codeline lineno="10421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binary_connector_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10424"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBinary_connector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10426"><highlight class="normal"></highlight></codeline>
<codeline lineno="10427"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binary_connector_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10430"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBinary_connector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10432"><highlight class="normal"></highlight></codeline>
<codeline lineno="10433"><highlight class="normal">KerMLParser::Binary_connector_declarationContext*<sp/>KerMLParser::binary_connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10434"><highlight class="normal"><sp/><sp/><ref refid="dc/ddc/class_ker_m_l_parser_1_1_binary__connector__declaration_context" kindref="compound">Binary_connector_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/ddc/class_ker_m_l_parser_1_1_binary__connector__declaration_context" kindref="compound">Binary_connector_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10435"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>218,<sp/>KerMLParser::RuleBinary_connector_declaration);</highlight></codeline>
<codeline lineno="10436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10437"><highlight class="normal"></highlight></codeline>
<codeline lineno="10438"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10440"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10443"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10444"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10446"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10447"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1344);</highlight></codeline>
<codeline lineno="10448"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10449"><highlight class="normal"></highlight></codeline>
<codeline lineno="10450"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="10452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1343);</highlight></codeline>
<codeline lineno="10453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="10454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10455"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1346);</highlight></codeline>
<codeline lineno="10456"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FROM);</highlight></codeline>
<codeline lineno="10457"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1347);</highlight></codeline>
<codeline lineno="10458"><highlight class="normal"><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10459"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1348);</highlight></codeline>
<codeline lineno="10460"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_TO);</highlight></codeline>
<codeline lineno="10461"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1349);</highlight></codeline>
<codeline lineno="10462"><highlight class="normal"><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10463"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10466"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10467"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10468"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10470"><highlight class="normal"></highlight></codeline>
<codeline lineno="10471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10473"><highlight class="normal"></highlight></codeline>
<codeline lineno="10474"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Nary_connector_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10475"><highlight class="normal"></highlight></codeline>
<codeline lineno="10476"><highlight class="normal">KerMLParser::Nary_connector_declarationContext::Nary_connector_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10477"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10479"><highlight class="normal"></highlight></codeline>
<codeline lineno="10480"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Nary_connector_declarationContext::SYMBOL_ROUND_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="10481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="10482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10483"><highlight class="normal"></highlight></codeline>
<codeline lineno="10484"><highlight class="normal">std::vector&lt;KerMLParser::Connector_end_memberContext<sp/>*&gt;<sp/>KerMLParser::Nary_connector_declarationContext::connector_end_member()<sp/>{</highlight></codeline>
<codeline lineno="10485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Connector_end_memberContext&gt;();</highlight></codeline>
<codeline lineno="10486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10487"><highlight class="normal"></highlight></codeline>
<codeline lineno="10488"><highlight class="normal">KerMLParser::Connector_end_memberContext*<sp/>KerMLParser::Nary_connector_declarationContext::connector_end_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="10489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Connector_end_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="10490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10491"><highlight class="normal"></highlight></codeline>
<codeline lineno="10492"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Nary_connector_declarationContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="10493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="10494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10495"><highlight class="normal"></highlight></codeline>
<codeline lineno="10496"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Nary_connector_declarationContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="10497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="10498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10499"><highlight class="normal"></highlight></codeline>
<codeline lineno="10500"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Nary_connector_declarationContext::SYMBOL_ROUND_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="10501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="10502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10503"><highlight class="normal"></highlight></codeline>
<codeline lineno="10504"><highlight class="normal"></highlight></codeline>
<codeline lineno="10505"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Nary_connector_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNary_connector_declaration;</highlight></codeline>
<codeline lineno="10507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10508"><highlight class="normal"></highlight></codeline>
<codeline lineno="10509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Nary_connector_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10512"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNary_connector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10514"><highlight class="normal"></highlight></codeline>
<codeline lineno="10515"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Nary_connector_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10518"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNary_connector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10520"><highlight class="normal"></highlight></codeline>
<codeline lineno="10521"><highlight class="normal">KerMLParser::Nary_connector_declarationContext*<sp/>KerMLParser::nary_connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10522"><highlight class="normal"><sp/><sp/><ref refid="d0/dd7/class_ker_m_l_parser_1_1_nary__connector__declaration_context" kindref="compound">Nary_connector_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/dd7/class_ker_m_l_parser_1_1_nary__connector__declaration_context" kindref="compound">Nary_connector_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10523"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>220,<sp/>KerMLParser::RuleNary_connector_declaration);</highlight></codeline>
<codeline lineno="10524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10525"><highlight class="normal"></highlight></codeline>
<codeline lineno="10526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10528"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10531"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10532"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10534"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10535"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1351);</highlight></codeline>
<codeline lineno="10536"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="10537"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1352);</highlight></codeline>
<codeline lineno="10538"><highlight class="normal"><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10539"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1353);</highlight></codeline>
<codeline lineno="10540"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="10541"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1354);</highlight></codeline>
<codeline lineno="10542"><highlight class="normal"><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10543"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1359);</highlight></codeline>
<codeline lineno="10544"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10545"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="10547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1355);</highlight></codeline>
<codeline lineno="10548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="10549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1356);</highlight></codeline>
<codeline lineno="10550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1361);</highlight></codeline>
<codeline lineno="10552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10555"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1362);</highlight></codeline>
<codeline lineno="10556"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="10557"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10560"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10561"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10562"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10564"><highlight class="normal"></highlight></codeline>
<codeline lineno="10565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10567"><highlight class="normal"></highlight></codeline>
<codeline lineno="10568"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Connector_end_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10569"><highlight class="normal"></highlight></codeline>
<codeline lineno="10570"><highlight class="normal">KerMLParser::Connector_end_memberContext::Connector_end_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10571"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10573"><highlight class="normal"></highlight></codeline>
<codeline lineno="10574"><highlight class="normal"><ref refid="da/d9b/class_ker_m_l_parser_1_1_connector__end_context" kindref="compound">KerMLParser::Connector_endContext</ref>*<sp/>KerMLParser::Connector_end_memberContext::connector_end()<sp/>{</highlight></codeline>
<codeline lineno="10575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Connector_endContext&gt;(0);</highlight></codeline>
<codeline lineno="10576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10577"><highlight class="normal"></highlight></codeline>
<codeline lineno="10578"><highlight class="normal"></highlight></codeline>
<codeline lineno="10579"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Connector_end_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConnector_end_member;</highlight></codeline>
<codeline lineno="10581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10582"><highlight class="normal"></highlight></codeline>
<codeline lineno="10583"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Connector_end_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10586"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConnector_end_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10588"><highlight class="normal"></highlight></codeline>
<codeline lineno="10589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Connector_end_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10592"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConnector_end_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10594"><highlight class="normal"></highlight></codeline>
<codeline lineno="10595"><highlight class="normal">KerMLParser::Connector_end_memberContext*<sp/>KerMLParser::connector_end_member()<sp/>{</highlight></codeline>
<codeline lineno="10596"><highlight class="normal"><sp/><sp/><ref refid="d8/d07/class_ker_m_l_parser_1_1_connector__end__member_context" kindref="compound">Connector_end_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d07/class_ker_m_l_parser_1_1_connector__end__member_context" kindref="compound">Connector_end_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10597"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>222,<sp/>KerMLParser::RuleConnector_end_member);</highlight></codeline>
<codeline lineno="10598"><highlight class="normal"></highlight></codeline>
<codeline lineno="10599"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10601"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10604"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10605"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10607"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10608"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1364);</highlight></codeline>
<codeline lineno="10609"><highlight class="normal"><sp/><sp/><sp/><sp/>connector_end();</highlight></codeline>
<codeline lineno="10610"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10613"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10614"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10615"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10617"><highlight class="normal"></highlight></codeline>
<codeline lineno="10618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10620"><highlight class="normal"></highlight></codeline>
<codeline lineno="10621"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Connector_endContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10622"><highlight class="normal"></highlight></codeline>
<codeline lineno="10623"><highlight class="normal">KerMLParser::Connector_endContext::Connector_endContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10624"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10626"><highlight class="normal"></highlight></codeline>
<codeline lineno="10627"><highlight class="normal"><ref refid="db/dbf/class_ker_m_l_parser_1_1_owned__reference__subsetting_context" kindref="compound">KerMLParser::Owned_reference_subsettingContext</ref>*<sp/>KerMLParser::Connector_endContext::owned_reference_subsetting()<sp/>{</highlight></codeline>
<codeline lineno="10628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_reference_subsettingContext&gt;(0);</highlight></codeline>
<codeline lineno="10629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10630"><highlight class="normal"></highlight></codeline>
<codeline lineno="10631"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Connector_endContext::NAME()<sp/>{</highlight></codeline>
<codeline lineno="10632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::NAME,<sp/>0);</highlight></codeline>
<codeline lineno="10633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10634"><highlight class="normal"></highlight></codeline>
<codeline lineno="10635"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Connector_endContext::REFERENCES()<sp/>{</highlight></codeline>
<codeline lineno="10636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::REFERENCES,<sp/>0);</highlight></codeline>
<codeline lineno="10637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10638"><highlight class="normal"></highlight></codeline>
<codeline lineno="10639"><highlight class="normal">KerMLParser::Multiplicity_boundsContext*<sp/>KerMLParser::Connector_endContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="10640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="10641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10642"><highlight class="normal"></highlight></codeline>
<codeline lineno="10643"><highlight class="normal"></highlight></codeline>
<codeline lineno="10644"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Connector_endContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConnector_end;</highlight></codeline>
<codeline lineno="10646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10647"><highlight class="normal"></highlight></codeline>
<codeline lineno="10648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Connector_endContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10651"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConnector_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10653"><highlight class="normal"></highlight></codeline>
<codeline lineno="10654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Connector_endContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10657"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConnector_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10659"><highlight class="normal"></highlight></codeline>
<codeline lineno="10660"><highlight class="normal">KerMLParser::Connector_endContext*<sp/>KerMLParser::connector_end()<sp/>{</highlight></codeline>
<codeline lineno="10661"><highlight class="normal"><sp/><sp/><ref refid="da/d9b/class_ker_m_l_parser_1_1_connector__end_context" kindref="compound">Connector_endContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d9b/class_ker_m_l_parser_1_1_connector__end_context" kindref="compound">Connector_endContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10662"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>224,<sp/>KerMLParser::RuleConnector_end);</highlight></codeline>
<codeline lineno="10663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10664"><highlight class="normal"></highlight></codeline>
<codeline lineno="10665"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10667"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10670"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10671"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10673"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10674"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1368);</highlight></codeline>
<codeline lineno="10675"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10676"><highlight class="normal"></highlight></codeline>
<codeline lineno="10677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>135,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="10678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="10679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1366);</highlight></codeline>
<codeline lineno="10680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="10681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1367);</highlight></codeline>
<codeline lineno="10682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::REFERENCES);</highlight></codeline>
<codeline lineno="10683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10685"><highlight class="normal"></highlight></codeline>
<codeline lineno="10686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10689"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1371);</highlight></codeline>
<codeline lineno="10690"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10691"><highlight class="normal"></highlight></codeline>
<codeline lineno="10692"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="10694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1370);</highlight></codeline>
<codeline lineno="10695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="10696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10697"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1373);</highlight></codeline>
<codeline lineno="10698"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_reference_subsetting();</highlight></codeline>
<codeline lineno="10699"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10702"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10703"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10704"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10706"><highlight class="normal"></highlight></codeline>
<codeline lineno="10707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10709"><highlight class="normal"></highlight></codeline>
<codeline lineno="10710"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Binding_connectorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10711"><highlight class="normal"></highlight></codeline>
<codeline lineno="10712"><highlight class="normal">KerMLParser::Binding_connectorContext::Binding_connectorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10713"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10715"><highlight class="normal"></highlight></codeline>
<codeline lineno="10716"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::Binding_connectorContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="10717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="10718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10719"><highlight class="normal"></highlight></codeline>
<codeline lineno="10720"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binding_connectorContext::KEYWORD_BINDING()<sp/>{</highlight></codeline>
<codeline lineno="10721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_BINDING,<sp/>0);</highlight></codeline>
<codeline lineno="10722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10723"><highlight class="normal"></highlight></codeline>
<codeline lineno="10724"><highlight class="normal">KerMLParser::Binding_connector_declarationContext*<sp/>KerMLParser::Binding_connectorContext::binding_connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Binding_connector_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10727"><highlight class="normal"></highlight></codeline>
<codeline lineno="10728"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Binding_connectorContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="10729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="10730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10731"><highlight class="normal"></highlight></codeline>
<codeline lineno="10732"><highlight class="normal"></highlight></codeline>
<codeline lineno="10733"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Binding_connectorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBinding_connector;</highlight></codeline>
<codeline lineno="10735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10736"><highlight class="normal"></highlight></codeline>
<codeline lineno="10737"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binding_connectorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10740"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBinding_connector(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10742"><highlight class="normal"></highlight></codeline>
<codeline lineno="10743"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binding_connectorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10746"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBinding_connector(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10748"><highlight class="normal"></highlight></codeline>
<codeline lineno="10749"><highlight class="normal">KerMLParser::Binding_connectorContext*<sp/>KerMLParser::binding_connector()<sp/>{</highlight></codeline>
<codeline lineno="10750"><highlight class="normal"><sp/><sp/><ref refid="dd/df1/class_ker_m_l_parser_1_1_binding__connector_context" kindref="compound">Binding_connectorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dd/df1/class_ker_m_l_parser_1_1_binding__connector_context" kindref="compound">Binding_connectorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10751"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>226,<sp/>KerMLParser::RuleBinding_connector);</highlight></codeline>
<codeline lineno="10752"><highlight class="normal"></highlight></codeline>
<codeline lineno="10753"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10755"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10757"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10758"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10759"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10761"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10762"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1375);</highlight></codeline>
<codeline lineno="10763"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="10764"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1376);</highlight></codeline>
<codeline lineno="10765"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_BINDING);</highlight></codeline>
<codeline lineno="10766"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1377);</highlight></codeline>
<codeline lineno="10767"><highlight class="normal"><sp/><sp/><sp/><sp/>binding_connector_declaration();</highlight></codeline>
<codeline lineno="10768"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1378);</highlight></codeline>
<codeline lineno="10769"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="10770"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10773"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10774"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10775"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10777"><highlight class="normal"></highlight></codeline>
<codeline lineno="10778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10780"><highlight class="normal"></highlight></codeline>
<codeline lineno="10781"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Binding_connector_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10782"><highlight class="normal"></highlight></codeline>
<codeline lineno="10783"><highlight class="normal">KerMLParser::Binding_connector_declarationContext::Binding_connector_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10784"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10786"><highlight class="normal"></highlight></codeline>
<codeline lineno="10787"><highlight class="normal"><ref refid="d0/da8/class_ker_m_l_parser_1_1_feature__declaration_context" kindref="compound">KerMLParser::Feature_declarationContext</ref>*<sp/>KerMLParser::Binding_connector_declarationContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10790"><highlight class="normal"></highlight></codeline>
<codeline lineno="10791"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binding_connector_declarationContext::KEYWORD_OF()<sp/>{</highlight></codeline>
<codeline lineno="10792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_OF,<sp/>0);</highlight></codeline>
<codeline lineno="10793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10794"><highlight class="normal"></highlight></codeline>
<codeline lineno="10795"><highlight class="normal">std::vector&lt;KerMLParser::Connector_end_memberContext<sp/>*&gt;<sp/>KerMLParser::Binding_connector_declarationContext::connector_end_member()<sp/>{</highlight></codeline>
<codeline lineno="10796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Connector_end_memberContext&gt;();</highlight></codeline>
<codeline lineno="10797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10798"><highlight class="normal"></highlight></codeline>
<codeline lineno="10799"><highlight class="normal">KerMLParser::Connector_end_memberContext*<sp/>KerMLParser::Binding_connector_declarationContext::connector_end_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="10800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Connector_end_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="10801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10802"><highlight class="normal"></highlight></codeline>
<codeline lineno="10803"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binding_connector_declarationContext::SYMBOL_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="10804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="10805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10806"><highlight class="normal"></highlight></codeline>
<codeline lineno="10807"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binding_connector_declarationContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="10808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="10809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10810"><highlight class="normal"></highlight></codeline>
<codeline lineno="10811"><highlight class="normal"></highlight></codeline>
<codeline lineno="10812"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Binding_connector_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBinding_connector_declaration;</highlight></codeline>
<codeline lineno="10814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10815"><highlight class="normal"></highlight></codeline>
<codeline lineno="10816"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binding_connector_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10819"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBinding_connector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10821"><highlight class="normal"></highlight></codeline>
<codeline lineno="10822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binding_connector_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10825"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBinding_connector_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10827"><highlight class="normal"></highlight></codeline>
<codeline lineno="10828"><highlight class="normal">KerMLParser::Binding_connector_declarationContext*<sp/>KerMLParser::binding_connector_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10829"><highlight class="normal"><sp/><sp/><ref refid="dd/d8c/class_ker_m_l_parser_1_1_binding__connector__declaration_context" kindref="compound">Binding_connector_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dd/d8c/class_ker_m_l_parser_1_1_binding__connector__declaration_context" kindref="compound">Binding_connector_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10830"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>228,<sp/>KerMLParser::RuleBinding_connector_declaration);</highlight></codeline>
<codeline lineno="10831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10832"><highlight class="normal"></highlight></codeline>
<codeline lineno="10833"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10835"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10837"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10838"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10839"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10841"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1400);</highlight></codeline>
<codeline lineno="10842"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>141,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="10844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="10845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1380);</highlight></codeline>
<codeline lineno="10847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="10848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1386);</highlight></codeline>
<codeline lineno="10849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10850"><highlight class="normal"></highlight></codeline>
<codeline lineno="10851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_OF)<sp/>{</highlight></codeline>
<codeline lineno="10853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1381);</highlight></codeline>
<codeline lineno="10854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_OF);</highlight></codeline>
<codeline lineno="10855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1382);</highlight></codeline>
<codeline lineno="10856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1383);</highlight></codeline>
<codeline lineno="10858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_EQUALS);</highlight></codeline>
<codeline lineno="10859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1384);</highlight></codeline>
<codeline lineno="10860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10864"><highlight class="normal"></highlight></codeline>
<codeline lineno="10865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="10866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="10867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1389);</highlight></codeline>
<codeline lineno="10868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10869"><highlight class="normal"></highlight></codeline>
<codeline lineno="10870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="10872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1388);</highlight></codeline>
<codeline lineno="10873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="10874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1398);</highlight></codeline>
<codeline lineno="10876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10877"><highlight class="normal"></highlight></codeline>
<codeline lineno="10878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_OF</highlight></codeline>
<codeline lineno="10880"><highlight class="normal"></highlight></codeline>
<codeline lineno="10881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="10882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1392);</highlight></codeline>
<codeline lineno="10883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10884"><highlight class="normal"></highlight></codeline>
<codeline lineno="10885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="10886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_OF)<sp/>{</highlight></codeline>
<codeline lineno="10887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1391);</highlight></codeline>
<codeline lineno="10888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_OF);</highlight></codeline>
<codeline lineno="10889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1394);</highlight></codeline>
<codeline lineno="10891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1395);</highlight></codeline>
<codeline lineno="10893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_EQUALS);</highlight></codeline>
<codeline lineno="10894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1396);</highlight></codeline>
<codeline lineno="10895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="10896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10899"><highlight class="normal"></highlight></codeline>
<codeline lineno="10900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10903"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10906"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10907"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10908"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10910"><highlight class="normal"></highlight></codeline>
<codeline lineno="10911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10913"><highlight class="normal"></highlight></codeline>
<codeline lineno="10914"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>SuccessionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10915"><highlight class="normal"></highlight></codeline>
<codeline lineno="10916"><highlight class="normal">KerMLParser::SuccessionContext::SuccessionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10917"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10919"><highlight class="normal"></highlight></codeline>
<codeline lineno="10920"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::SuccessionContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="10921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="10922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10923"><highlight class="normal"></highlight></codeline>
<codeline lineno="10924"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::SuccessionContext::KEYWORD_SUCCSESSION()<sp/>{</highlight></codeline>
<codeline lineno="10925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SUCCSESSION,<sp/>0);</highlight></codeline>
<codeline lineno="10926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10927"><highlight class="normal"></highlight></codeline>
<codeline lineno="10928"><highlight class="normal">KerMLParser::Succession_declarationContext*<sp/>KerMLParser::SuccessionContext::succession_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Succession_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10931"><highlight class="normal"></highlight></codeline>
<codeline lineno="10932"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::SuccessionContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="10933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="10934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10935"><highlight class="normal"></highlight></codeline>
<codeline lineno="10936"><highlight class="normal"></highlight></codeline>
<codeline lineno="10937"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::SuccessionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSuccession;</highlight></codeline>
<codeline lineno="10939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10940"><highlight class="normal"></highlight></codeline>
<codeline lineno="10941"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SuccessionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10944"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSuccession(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10946"><highlight class="normal"></highlight></codeline>
<codeline lineno="10947"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::SuccessionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="10948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="10949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10950"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSuccession(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10952"><highlight class="normal"></highlight></codeline>
<codeline lineno="10953"><highlight class="normal">KerMLParser::SuccessionContext*<sp/>KerMLParser::succession()<sp/>{</highlight></codeline>
<codeline lineno="10954"><highlight class="normal"><sp/><sp/><ref refid="dc/d64/class_ker_m_l_parser_1_1_succession_context" kindref="compound">SuccessionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d64/class_ker_m_l_parser_1_1_succession_context" kindref="compound">SuccessionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="10955"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>230,<sp/>KerMLParser::RuleSuccession);</highlight></codeline>
<codeline lineno="10956"><highlight class="normal"></highlight></codeline>
<codeline lineno="10957"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="10959"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="10961"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10962"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="10963"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="10964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10965"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="10966"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1402);</highlight></codeline>
<codeline lineno="10967"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="10968"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1403);</highlight></codeline>
<codeline lineno="10969"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SUCCSESSION);</highlight></codeline>
<codeline lineno="10970"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1404);</highlight></codeline>
<codeline lineno="10971"><highlight class="normal"><sp/><sp/><sp/><sp/>succession_declaration();</highlight></codeline>
<codeline lineno="10972"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1405);</highlight></codeline>
<codeline lineno="10973"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="10974"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10975"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="10977"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="10978"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="10979"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="10980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10981"><highlight class="normal"></highlight></codeline>
<codeline lineno="10982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="10983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10984"><highlight class="normal"></highlight></codeline>
<codeline lineno="10985"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Succession_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10986"><highlight class="normal"></highlight></codeline>
<codeline lineno="10987"><highlight class="normal">KerMLParser::Succession_declarationContext::Succession_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="10988"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="10989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10990"><highlight class="normal"></highlight></codeline>
<codeline lineno="10991"><highlight class="normal"><ref refid="d0/da8/class_ker_m_l_parser_1_1_feature__declaration_context" kindref="compound">KerMLParser::Feature_declarationContext</ref>*<sp/>KerMLParser::Succession_declarationContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="10992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="10993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10994"><highlight class="normal"></highlight></codeline>
<codeline lineno="10995"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Succession_declarationContext::KEYWORD_FIRST()<sp/>{</highlight></codeline>
<codeline lineno="10996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FIRST,<sp/>0);</highlight></codeline>
<codeline lineno="10997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10998"><highlight class="normal"></highlight></codeline>
<codeline lineno="10999"><highlight class="normal">std::vector&lt;KerMLParser::Connector_end_memberContext<sp/>*&gt;<sp/>KerMLParser::Succession_declarationContext::connector_end_member()<sp/>{</highlight></codeline>
<codeline lineno="11000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Connector_end_memberContext&gt;();</highlight></codeline>
<codeline lineno="11001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11002"><highlight class="normal"></highlight></codeline>
<codeline lineno="11003"><highlight class="normal">KerMLParser::Connector_end_memberContext*<sp/>KerMLParser::Succession_declarationContext::connector_end_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="11004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Connector_end_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="11005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11006"><highlight class="normal"></highlight></codeline>
<codeline lineno="11007"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Succession_declarationContext::KEYWORD_THEN()<sp/>{</highlight></codeline>
<codeline lineno="11008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_THEN,<sp/>0);</highlight></codeline>
<codeline lineno="11009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11010"><highlight class="normal"></highlight></codeline>
<codeline lineno="11011"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Succession_declarationContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="11012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="11013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11014"><highlight class="normal"></highlight></codeline>
<codeline lineno="11015"><highlight class="normal"></highlight></codeline>
<codeline lineno="11016"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Succession_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSuccession_declaration;</highlight></codeline>
<codeline lineno="11018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11019"><highlight class="normal"></highlight></codeline>
<codeline lineno="11020"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Succession_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11023"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSuccession_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11025"><highlight class="normal"></highlight></codeline>
<codeline lineno="11026"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Succession_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11029"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSuccession_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11031"><highlight class="normal"></highlight></codeline>
<codeline lineno="11032"><highlight class="normal">KerMLParser::Succession_declarationContext*<sp/>KerMLParser::succession_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11033"><highlight class="normal"><sp/><sp/><ref refid="d9/dc8/class_ker_m_l_parser_1_1_succession__declaration_context" kindref="compound">Succession_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/dc8/class_ker_m_l_parser_1_1_succession__declaration_context" kindref="compound">Succession_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11034"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>232,<sp/>KerMLParser::RuleSuccession_declaration);</highlight></codeline>
<codeline lineno="11035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11036"><highlight class="normal"></highlight></codeline>
<codeline lineno="11037"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11039"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11041"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11042"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11043"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11045"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1427);</highlight></codeline>
<codeline lineno="11046"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>146,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="11048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="11049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1407);</highlight></codeline>
<codeline lineno="11051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="11052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1413);</highlight></codeline>
<codeline lineno="11053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11054"><highlight class="normal"></highlight></codeline>
<codeline lineno="11055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_FIRST)<sp/>{</highlight></codeline>
<codeline lineno="11057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1408);</highlight></codeline>
<codeline lineno="11058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FIRST);</highlight></codeline>
<codeline lineno="11059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1409);</highlight></codeline>
<codeline lineno="11060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="11061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1410);</highlight></codeline>
<codeline lineno="11062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_THEN);</highlight></codeline>
<codeline lineno="11063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1411);</highlight></codeline>
<codeline lineno="11064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="11065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11068"><highlight class="normal"></highlight></codeline>
<codeline lineno="11069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="11070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="11071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1416);</highlight></codeline>
<codeline lineno="11072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11073"><highlight class="normal"></highlight></codeline>
<codeline lineno="11074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="11076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1415);</highlight></codeline>
<codeline lineno="11077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="11078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1425);</highlight></codeline>
<codeline lineno="11080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11081"><highlight class="normal"></highlight></codeline>
<codeline lineno="11082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_FIRST<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN</highlight></codeline>
<codeline lineno="11084"><highlight class="normal"></highlight></codeline>
<codeline lineno="11085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="11086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1419);</highlight></codeline>
<codeline lineno="11087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11088"><highlight class="normal"></highlight></codeline>
<codeline lineno="11089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_FIRST)<sp/>{</highlight></codeline>
<codeline lineno="11091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1418);</highlight></codeline>
<codeline lineno="11092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FIRST);</highlight></codeline>
<codeline lineno="11093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1421);</highlight></codeline>
<codeline lineno="11095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="11096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1422);</highlight></codeline>
<codeline lineno="11097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_THEN);</highlight></codeline>
<codeline lineno="11098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1423);</highlight></codeline>
<codeline lineno="11099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connector_end_member();</highlight></codeline>
<codeline lineno="11100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11103"><highlight class="normal"></highlight></codeline>
<codeline lineno="11104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11107"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11110"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11111"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11112"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11114"><highlight class="normal"></highlight></codeline>
<codeline lineno="11115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11117"><highlight class="normal"></highlight></codeline>
<codeline lineno="11118"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>BehaviorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11119"><highlight class="normal"></highlight></codeline>
<codeline lineno="11120"><highlight class="normal">KerMLParser::BehaviorContext::BehaviorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11121"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11123"><highlight class="normal"></highlight></codeline>
<codeline lineno="11124"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::BehaviorContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11127"><highlight class="normal"></highlight></codeline>
<codeline lineno="11128"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::BehaviorContext::KEYWORD_BEHAVIOR()<sp/>{</highlight></codeline>
<codeline lineno="11129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_BEHAVIOR,<sp/>0);</highlight></codeline>
<codeline lineno="11130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11131"><highlight class="normal"></highlight></codeline>
<codeline lineno="11132"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::BehaviorContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="11134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11135"><highlight class="normal"></highlight></codeline>
<codeline lineno="11136"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::BehaviorContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="11137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="11138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11139"><highlight class="normal"></highlight></codeline>
<codeline lineno="11140"><highlight class="normal"></highlight></codeline>
<codeline lineno="11141"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::BehaviorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBehavior;</highlight></codeline>
<codeline lineno="11143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11144"><highlight class="normal"></highlight></codeline>
<codeline lineno="11145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::BehaviorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11148"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBehavior(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11150"><highlight class="normal"></highlight></codeline>
<codeline lineno="11151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::BehaviorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11154"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBehavior(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11156"><highlight class="normal"></highlight></codeline>
<codeline lineno="11157"><highlight class="normal">KerMLParser::BehaviorContext*<sp/>KerMLParser::behavior()<sp/>{</highlight></codeline>
<codeline lineno="11158"><highlight class="normal"><sp/><sp/><ref refid="dc/dc3/class_ker_m_l_parser_1_1_behavior_context" kindref="compound">BehaviorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/dc3/class_ker_m_l_parser_1_1_behavior_context" kindref="compound">BehaviorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11159"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>234,<sp/>KerMLParser::RuleBehavior);</highlight></codeline>
<codeline lineno="11160"><highlight class="normal"></highlight></codeline>
<codeline lineno="11161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11163"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11166"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11167"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11169"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11170"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1429);</highlight></codeline>
<codeline lineno="11171"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="11172"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1430);</highlight></codeline>
<codeline lineno="11173"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_BEHAVIOR);</highlight></codeline>
<codeline lineno="11174"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1431);</highlight></codeline>
<codeline lineno="11175"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="11176"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1432);</highlight></codeline>
<codeline lineno="11177"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="11178"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11181"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11182"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11183"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11185"><highlight class="normal"></highlight></codeline>
<codeline lineno="11186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11188"><highlight class="normal"></highlight></codeline>
<codeline lineno="11189"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>StepContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11190"><highlight class="normal"></highlight></codeline>
<codeline lineno="11191"><highlight class="normal">KerMLParser::StepContext::StepContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11192"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11194"><highlight class="normal"></highlight></codeline>
<codeline lineno="11195"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::StepContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11198"><highlight class="normal"></highlight></codeline>
<codeline lineno="11199"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::StepContext::KEYWORD_STEP()<sp/>{</highlight></codeline>
<codeline lineno="11200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_STEP,<sp/>0);</highlight></codeline>
<codeline lineno="11201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11202"><highlight class="normal"></highlight></codeline>
<codeline lineno="11203"><highlight class="normal">KerMLParser::Feature_declarationContext*<sp/>KerMLParser::StepContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="11205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11206"><highlight class="normal"></highlight></codeline>
<codeline lineno="11207"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::StepContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="11208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="11209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11210"><highlight class="normal"></highlight></codeline>
<codeline lineno="11211"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::StepContext::value_part()<sp/>{</highlight></codeline>
<codeline lineno="11212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Value_partContext&gt;(0);</highlight></codeline>
<codeline lineno="11213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11214"><highlight class="normal"></highlight></codeline>
<codeline lineno="11215"><highlight class="normal"></highlight></codeline>
<codeline lineno="11216"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::StepContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleStep;</highlight></codeline>
<codeline lineno="11218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11219"><highlight class="normal"></highlight></codeline>
<codeline lineno="11220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StepContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11223"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterStep(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11225"><highlight class="normal"></highlight></codeline>
<codeline lineno="11226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::StepContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11229"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitStep(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11231"><highlight class="normal"></highlight></codeline>
<codeline lineno="11232"><highlight class="normal">KerMLParser::StepContext*<sp/>KerMLParser::step()<sp/>{</highlight></codeline>
<codeline lineno="11233"><highlight class="normal"><sp/><sp/><ref refid="d8/d14/class_ker_m_l_parser_1_1_step_context" kindref="compound">StepContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d14/class_ker_m_l_parser_1_1_step_context" kindref="compound">StepContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11234"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>236,<sp/>KerMLParser::RuleStep);</highlight></codeline>
<codeline lineno="11235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11236"><highlight class="normal"></highlight></codeline>
<codeline lineno="11237"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11239"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11242"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11243"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11245"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11246"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1434);</highlight></codeline>
<codeline lineno="11247"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="11248"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1435);</highlight></codeline>
<codeline lineno="11249"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_STEP);</highlight></codeline>
<codeline lineno="11250"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1436);</highlight></codeline>
<codeline lineno="11251"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="11252"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1438);</highlight></codeline>
<codeline lineno="11253"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11254"><highlight class="normal"></highlight></codeline>
<codeline lineno="11255"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="11257"><highlight class="normal"></highlight></codeline>
<codeline lineno="11258"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="11259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1437);</highlight></codeline>
<codeline lineno="11260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_part();</highlight></codeline>
<codeline lineno="11261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11262"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1440);</highlight></codeline>
<codeline lineno="11263"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="11264"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11267"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11268"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11269"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11271"><highlight class="normal"></highlight></codeline>
<codeline lineno="11272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11274"><highlight class="normal"></highlight></codeline>
<codeline lineno="11275"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>FunctionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11276"><highlight class="normal"></highlight></codeline>
<codeline lineno="11277"><highlight class="normal">KerMLParser::FunctionContext::FunctionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11278"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11280"><highlight class="normal"></highlight></codeline>
<codeline lineno="11281"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::FunctionContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11284"><highlight class="normal"></highlight></codeline>
<codeline lineno="11285"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::FunctionContext::KEYWORD_FUNCTION()<sp/>{</highlight></codeline>
<codeline lineno="11286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FUNCTION,<sp/>0);</highlight></codeline>
<codeline lineno="11287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11288"><highlight class="normal"></highlight></codeline>
<codeline lineno="11289"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::FunctionContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="11291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11292"><highlight class="normal"></highlight></codeline>
<codeline lineno="11293"><highlight class="normal">KerMLParser::Function_bodyContext*<sp/>KerMLParser::FunctionContext::function_body()<sp/>{</highlight></codeline>
<codeline lineno="11294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="11295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11296"><highlight class="normal"></highlight></codeline>
<codeline lineno="11297"><highlight class="normal"></highlight></codeline>
<codeline lineno="11298"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::FunctionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction;</highlight></codeline>
<codeline lineno="11300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11301"><highlight class="normal"></highlight></codeline>
<codeline lineno="11302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::FunctionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11305"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11307"><highlight class="normal"></highlight></codeline>
<codeline lineno="11308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::FunctionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11311"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11313"><highlight class="normal"></highlight></codeline>
<codeline lineno="11314"><highlight class="normal">KerMLParser::FunctionContext*<sp/>KerMLParser::function()<sp/>{</highlight></codeline>
<codeline lineno="11315"><highlight class="normal"><sp/><sp/><ref refid="d9/dcb/class_ker_m_l_parser_1_1_function_context" kindref="compound">FunctionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/dcb/class_ker_m_l_parser_1_1_function_context" kindref="compound">FunctionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11316"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>238,<sp/>KerMLParser::RuleFunction);</highlight></codeline>
<codeline lineno="11317"><highlight class="normal"></highlight></codeline>
<codeline lineno="11318"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11323"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11324"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11326"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11327"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1442);</highlight></codeline>
<codeline lineno="11328"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="11329"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1443);</highlight></codeline>
<codeline lineno="11330"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FUNCTION);</highlight></codeline>
<codeline lineno="11331"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1444);</highlight></codeline>
<codeline lineno="11332"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="11333"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1445);</highlight></codeline>
<codeline lineno="11334"><highlight class="normal"><sp/><sp/><sp/><sp/>function_body();</highlight></codeline>
<codeline lineno="11335"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11338"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11339"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11340"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11342"><highlight class="normal"></highlight></codeline>
<codeline lineno="11343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11345"><highlight class="normal"></highlight></codeline>
<codeline lineno="11346"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_bodyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11347"><highlight class="normal"></highlight></codeline>
<codeline lineno="11348"><highlight class="normal">KerMLParser::Function_bodyContext::Function_bodyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11349"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11351"><highlight class="normal"></highlight></codeline>
<codeline lineno="11352"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Function_bodyContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="11353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="11354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11355"><highlight class="normal"></highlight></codeline>
<codeline lineno="11356"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Function_bodyContext::SYMBOL_CURLY_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="11357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="11358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11359"><highlight class="normal"></highlight></codeline>
<codeline lineno="11360"><highlight class="normal">KerMLParser::Function_body_partContext*<sp/>KerMLParser::Function_bodyContext::function_body_part()<sp/>{</highlight></codeline>
<codeline lineno="11361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_body_partContext&gt;(0);</highlight></codeline>
<codeline lineno="11362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11363"><highlight class="normal"></highlight></codeline>
<codeline lineno="11364"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Function_bodyContext::SYMBOL_CURLY_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="11365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="11366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11367"><highlight class="normal"></highlight></codeline>
<codeline lineno="11368"><highlight class="normal"></highlight></codeline>
<codeline lineno="11369"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_bodyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_body;</highlight></codeline>
<codeline lineno="11371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11372"><highlight class="normal"></highlight></codeline>
<codeline lineno="11373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_bodyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11376"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11378"><highlight class="normal"></highlight></codeline>
<codeline lineno="11379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_bodyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11382"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11384"><highlight class="normal"></highlight></codeline>
<codeline lineno="11385"><highlight class="normal">KerMLParser::Function_bodyContext*<sp/>KerMLParser::function_body()<sp/>{</highlight></codeline>
<codeline lineno="11386"><highlight class="normal"><sp/><sp/><ref refid="da/d27/class_ker_m_l_parser_1_1_function__body_context" kindref="compound">Function_bodyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d27/class_ker_m_l_parser_1_1_function__body_context" kindref="compound">Function_bodyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11387"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>240,<sp/>KerMLParser::RuleFunction_body);</highlight></codeline>
<codeline lineno="11388"><highlight class="normal"></highlight></codeline>
<codeline lineno="11389"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11391"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11393"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11394"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11395"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11397"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1452);</highlight></codeline>
<codeline lineno="11398"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="11400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STATEMENT_DELIMITER:<sp/>{</highlight></codeline>
<codeline lineno="11401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1447);</highlight></codeline>
<codeline lineno="11403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="11404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11406"><highlight class="normal"></highlight></codeline>
<codeline lineno="11407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_CURLY_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="11408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="11409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1448);</highlight></codeline>
<codeline lineno="11410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="11411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1449);</highlight></codeline>
<codeline lineno="11412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_body_part();</highlight></codeline>
<codeline lineno="11413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1450);</highlight></codeline>
<codeline lineno="11414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="11415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11417"><highlight class="normal"></highlight></codeline>
<codeline lineno="11418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11421"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11424"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11425"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11426"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11428"><highlight class="normal"></highlight></codeline>
<codeline lineno="11429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11431"><highlight class="normal"></highlight></codeline>
<codeline lineno="11432"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_body_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11433"><highlight class="normal"></highlight></codeline>
<codeline lineno="11434"><highlight class="normal">KerMLParser::Function_body_partContext::Function_body_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11435"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11437"><highlight class="normal"></highlight></codeline>
<codeline lineno="11438"><highlight class="normal">std::vector&lt;KerMLParser::Type_body_elementContext<sp/>*&gt;<sp/>KerMLParser::Function_body_partContext::type_body_element()<sp/>{</highlight></codeline>
<codeline lineno="11439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Type_body_elementContext&gt;();</highlight></codeline>
<codeline lineno="11440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11441"><highlight class="normal"></highlight></codeline>
<codeline lineno="11442"><highlight class="normal">KerMLParser::Type_body_elementContext*<sp/>KerMLParser::Function_body_partContext::type_body_element(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="11443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_body_elementContext&gt;(i);</highlight></codeline>
<codeline lineno="11444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11445"><highlight class="normal"></highlight></codeline>
<codeline lineno="11446"><highlight class="normal">std::vector&lt;KerMLParser::Return_feature_memberContext<sp/>*&gt;<sp/>KerMLParser::Function_body_partContext::return_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="11447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Return_feature_memberContext&gt;();</highlight></codeline>
<codeline lineno="11448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11449"><highlight class="normal"></highlight></codeline>
<codeline lineno="11450"><highlight class="normal">KerMLParser::Return_feature_memberContext*<sp/>KerMLParser::Function_body_partContext::return_feature_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="11451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Return_feature_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="11452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11453"><highlight class="normal"></highlight></codeline>
<codeline lineno="11454"><highlight class="normal">KerMLParser::Result_expression_memberContext*<sp/>KerMLParser::Function_body_partContext::result_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="11455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Result_expression_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="11456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11457"><highlight class="normal"></highlight></codeline>
<codeline lineno="11458"><highlight class="normal"></highlight></codeline>
<codeline lineno="11459"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_body_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_body_part;</highlight></codeline>
<codeline lineno="11461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11462"><highlight class="normal"></highlight></codeline>
<codeline lineno="11463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_body_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11466"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_body_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11468"><highlight class="normal"></highlight></codeline>
<codeline lineno="11469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_body_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11472"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_body_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11474"><highlight class="normal"></highlight></codeline>
<codeline lineno="11475"><highlight class="normal">KerMLParser::Function_body_partContext*<sp/>KerMLParser::function_body_part()<sp/>{</highlight></codeline>
<codeline lineno="11476"><highlight class="normal"><sp/><sp/><ref refid="df/da3/class_ker_m_l_parser_1_1_function__body__part_context" kindref="compound">Function_body_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/da3/class_ker_m_l_parser_1_1_function__body__part_context" kindref="compound">Function_body_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11477"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>242,<sp/>KerMLParser::RuleFunction_body_part);</highlight></codeline>
<codeline lineno="11478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11479"><highlight class="normal"></highlight></codeline>
<codeline lineno="11480"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11482"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11485"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11486"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alt;</highlight></codeline>
<codeline lineno="11489"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11490"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1456);<sp/></highlight></codeline>
<codeline lineno="11491"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11492"><highlight class="normal"><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="11493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(alt)<sp/>{</highlight></codeline>
<codeline lineno="11495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="11496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1456);</highlight></codeline>
<codeline lineno="11497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>149,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="11499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="11500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1454);</highlight></codeline>
<codeline lineno="11501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_body_element();</highlight></codeline>
<codeline lineno="11502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11504"><highlight class="normal"></highlight></codeline>
<codeline lineno="11505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="11506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1455);</highlight></codeline>
<codeline lineno="11507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_feature_member();</highlight></codeline>
<codeline lineno="11508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11510"><highlight class="normal"></highlight></codeline>
<codeline lineno="11511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11516"><highlight class="normal"></highlight></codeline>
<codeline lineno="11517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1458);<sp/></highlight></codeline>
<codeline lineno="11521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>150,<sp/>_ctx);</highlight></codeline>
<codeline lineno="11523"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER);</highlight></codeline>
<codeline lineno="11524"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1461);</highlight></codeline>
<codeline lineno="11525"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11526"><highlight class="normal"></highlight></codeline>
<codeline lineno="11527"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="11529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>1154610904222935042)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>68)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="11530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>68))<sp/>&amp;<sp/>7232921739582246403)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>136)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="11531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>136))<sp/>&amp;<sp/>30146587)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="11532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1460);</highlight></codeline>
<codeline lineno="11533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result_expression_member();</highlight></codeline>
<codeline lineno="11534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11535"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11538"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11539"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11540"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11542"><highlight class="normal"></highlight></codeline>
<codeline lineno="11543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11545"><highlight class="normal"></highlight></codeline>
<codeline lineno="11546"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Return_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11547"><highlight class="normal"></highlight></codeline>
<codeline lineno="11548"><highlight class="normal">KerMLParser::Return_feature_memberContext::Return_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11549"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11551"><highlight class="normal"></highlight></codeline>
<codeline lineno="11552"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Return_feature_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11555"><highlight class="normal"></highlight></codeline>
<codeline lineno="11556"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Return_feature_memberContext::KEYWORD_RETURN()<sp/>{</highlight></codeline>
<codeline lineno="11557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_RETURN,<sp/>0);</highlight></codeline>
<codeline lineno="11558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11559"><highlight class="normal"></highlight></codeline>
<codeline lineno="11560"><highlight class="normal">KerMLParser::Feature_elementContext*<sp/>KerMLParser::Return_feature_memberContext::feature_element()<sp/>{</highlight></codeline>
<codeline lineno="11561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_elementContext&gt;(0);</highlight></codeline>
<codeline lineno="11562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11563"><highlight class="normal"></highlight></codeline>
<codeline lineno="11564"><highlight class="normal"></highlight></codeline>
<codeline lineno="11565"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Return_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleReturn_feature_member;</highlight></codeline>
<codeline lineno="11567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11568"><highlight class="normal"></highlight></codeline>
<codeline lineno="11569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Return_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11572"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterReturn_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11574"><highlight class="normal"></highlight></codeline>
<codeline lineno="11575"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Return_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11578"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitReturn_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11580"><highlight class="normal"></highlight></codeline>
<codeline lineno="11581"><highlight class="normal">KerMLParser::Return_feature_memberContext*<sp/>KerMLParser::return_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="11582"><highlight class="normal"><sp/><sp/><ref refid="d3/d89/class_ker_m_l_parser_1_1_return__feature__member_context" kindref="compound">Return_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d89/class_ker_m_l_parser_1_1_return__feature__member_context" kindref="compound">Return_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11583"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>244,<sp/>KerMLParser::RuleReturn_feature_member);</highlight></codeline>
<codeline lineno="11584"><highlight class="normal"></highlight></codeline>
<codeline lineno="11585"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11587"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11590"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11591"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11593"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11594"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1463);</highlight></codeline>
<codeline lineno="11595"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="11596"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1464);</highlight></codeline>
<codeline lineno="11597"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_RETURN);</highlight></codeline>
<codeline lineno="11598"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1465);</highlight></codeline>
<codeline lineno="11599"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_element();</highlight></codeline>
<codeline lineno="11600"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11603"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11604"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11605"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11606"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11607"><highlight class="normal"></highlight></codeline>
<codeline lineno="11608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11610"><highlight class="normal"></highlight></codeline>
<codeline lineno="11611"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Result_expression_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11612"><highlight class="normal"></highlight></codeline>
<codeline lineno="11613"><highlight class="normal">KerMLParser::Result_expression_memberContext::Result_expression_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11614"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11616"><highlight class="normal"></highlight></codeline>
<codeline lineno="11617"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Result_expression_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11620"><highlight class="normal"></highlight></codeline>
<codeline lineno="11621"><highlight class="normal">KerMLParser::Owned_expressionContext*<sp/>KerMLParser::Result_expression_memberContext::owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="11622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="11623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11624"><highlight class="normal"></highlight></codeline>
<codeline lineno="11625"><highlight class="normal"></highlight></codeline>
<codeline lineno="11626"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Result_expression_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleResult_expression_member;</highlight></codeline>
<codeline lineno="11628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11629"><highlight class="normal"></highlight></codeline>
<codeline lineno="11630"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Result_expression_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11633"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterResult_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11635"><highlight class="normal"></highlight></codeline>
<codeline lineno="11636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Result_expression_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11639"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitResult_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11641"><highlight class="normal"></highlight></codeline>
<codeline lineno="11642"><highlight class="normal">KerMLParser::Result_expression_memberContext*<sp/>KerMLParser::result_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="11643"><highlight class="normal"><sp/><sp/><ref refid="dc/d5b/class_ker_m_l_parser_1_1_result__expression__member_context" kindref="compound">Result_expression_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d5b/class_ker_m_l_parser_1_1_result__expression__member_context" kindref="compound">Result_expression_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11644"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>246,<sp/>KerMLParser::RuleResult_expression_member);</highlight></codeline>
<codeline lineno="11645"><highlight class="normal"></highlight></codeline>
<codeline lineno="11646"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11648"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11650"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11651"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11652"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11654"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11655"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1467);</highlight></codeline>
<codeline lineno="11656"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="11657"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1468);</highlight></codeline>
<codeline lineno="11658"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression();</highlight></codeline>
<codeline lineno="11659"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11662"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11663"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11664"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11666"><highlight class="normal"></highlight></codeline>
<codeline lineno="11667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11669"><highlight class="normal"></highlight></codeline>
<codeline lineno="11670"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ExpressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11671"><highlight class="normal"></highlight></codeline>
<codeline lineno="11672"><highlight class="normal">KerMLParser::ExpressionContext::ExpressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11673"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11675"><highlight class="normal"></highlight></codeline>
<codeline lineno="11676"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::ExpressionContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11679"><highlight class="normal"></highlight></codeline>
<codeline lineno="11680"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::ExpressionContext::KEYWORD_EXPR()<sp/>{</highlight></codeline>
<codeline lineno="11681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_EXPR,<sp/>0);</highlight></codeline>
<codeline lineno="11682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11683"><highlight class="normal"></highlight></codeline>
<codeline lineno="11684"><highlight class="normal">KerMLParser::Feature_declarationContext*<sp/>KerMLParser::ExpressionContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="11686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11687"><highlight class="normal"></highlight></codeline>
<codeline lineno="11688"><highlight class="normal">KerMLParser::Function_bodyContext*<sp/>KerMLParser::ExpressionContext::function_body()<sp/>{</highlight></codeline>
<codeline lineno="11689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="11690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11691"><highlight class="normal"></highlight></codeline>
<codeline lineno="11692"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::ExpressionContext::value_part()<sp/>{</highlight></codeline>
<codeline lineno="11693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Value_partContext&gt;(0);</highlight></codeline>
<codeline lineno="11694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11695"><highlight class="normal"></highlight></codeline>
<codeline lineno="11696"><highlight class="normal"></highlight></codeline>
<codeline lineno="11697"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ExpressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleExpression;</highlight></codeline>
<codeline lineno="11699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11700"><highlight class="normal"></highlight></codeline>
<codeline lineno="11701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ExpressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11704"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterExpression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11706"><highlight class="normal"></highlight></codeline>
<codeline lineno="11707"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ExpressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11710"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitExpression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11712"><highlight class="normal"></highlight></codeline>
<codeline lineno="11713"><highlight class="normal">KerMLParser::ExpressionContext*<sp/>KerMLParser::expression()<sp/>{</highlight></codeline>
<codeline lineno="11714"><highlight class="normal"><sp/><sp/><ref refid="df/d28/class_ker_m_l_parser_1_1_expression_context" kindref="compound">ExpressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d28/class_ker_m_l_parser_1_1_expression_context" kindref="compound">ExpressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11715"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>248,<sp/>KerMLParser::RuleExpression);</highlight></codeline>
<codeline lineno="11716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11717"><highlight class="normal"></highlight></codeline>
<codeline lineno="11718"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11720"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11723"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11724"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11726"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11727"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1470);</highlight></codeline>
<codeline lineno="11728"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="11729"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1471);</highlight></codeline>
<codeline lineno="11730"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_EXPR);</highlight></codeline>
<codeline lineno="11731"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1472);</highlight></codeline>
<codeline lineno="11732"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="11733"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1474);</highlight></codeline>
<codeline lineno="11734"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11735"><highlight class="normal"></highlight></codeline>
<codeline lineno="11736"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="11738"><highlight class="normal"></highlight></codeline>
<codeline lineno="11739"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="11740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1473);</highlight></codeline>
<codeline lineno="11741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_part();</highlight></codeline>
<codeline lineno="11742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11743"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1476);</highlight></codeline>
<codeline lineno="11744"><highlight class="normal"><sp/><sp/><sp/><sp/>function_body();</highlight></codeline>
<codeline lineno="11745"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11748"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11749"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11750"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11752"><highlight class="normal"></highlight></codeline>
<codeline lineno="11753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11755"><highlight class="normal"></highlight></codeline>
<codeline lineno="11756"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>PredicateContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11757"><highlight class="normal"></highlight></codeline>
<codeline lineno="11758"><highlight class="normal">KerMLParser::PredicateContext::PredicateContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11759"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11761"><highlight class="normal"></highlight></codeline>
<codeline lineno="11762"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::PredicateContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11765"><highlight class="normal"></highlight></codeline>
<codeline lineno="11766"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::PredicateContext::KEYWORD_PREDICATE()<sp/>{</highlight></codeline>
<codeline lineno="11767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_PREDICATE,<sp/>0);</highlight></codeline>
<codeline lineno="11768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11769"><highlight class="normal"></highlight></codeline>
<codeline lineno="11770"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::PredicateContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="11772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11773"><highlight class="normal"></highlight></codeline>
<codeline lineno="11774"><highlight class="normal">KerMLParser::Function_bodyContext*<sp/>KerMLParser::PredicateContext::function_body()<sp/>{</highlight></codeline>
<codeline lineno="11775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="11776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11777"><highlight class="normal"></highlight></codeline>
<codeline lineno="11778"><highlight class="normal"></highlight></codeline>
<codeline lineno="11779"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::PredicateContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePredicate;</highlight></codeline>
<codeline lineno="11781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11782"><highlight class="normal"></highlight></codeline>
<codeline lineno="11783"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::PredicateContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11786"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPredicate(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11788"><highlight class="normal"></highlight></codeline>
<codeline lineno="11789"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::PredicateContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11792"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPredicate(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11794"><highlight class="normal"></highlight></codeline>
<codeline lineno="11795"><highlight class="normal">KerMLParser::PredicateContext*<sp/>KerMLParser::predicate()<sp/>{</highlight></codeline>
<codeline lineno="11796"><highlight class="normal"><sp/><sp/><ref refid="dd/d4c/class_ker_m_l_parser_1_1_predicate_context" kindref="compound">PredicateContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dd/d4c/class_ker_m_l_parser_1_1_predicate_context" kindref="compound">PredicateContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11797"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>250,<sp/>KerMLParser::RulePredicate);</highlight></codeline>
<codeline lineno="11798"><highlight class="normal"></highlight></codeline>
<codeline lineno="11799"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11801"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11804"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11805"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11807"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11808"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1478);</highlight></codeline>
<codeline lineno="11809"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="11810"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1479);</highlight></codeline>
<codeline lineno="11811"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_PREDICATE);</highlight></codeline>
<codeline lineno="11812"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1480);</highlight></codeline>
<codeline lineno="11813"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="11814"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1481);</highlight></codeline>
<codeline lineno="11815"><highlight class="normal"><sp/><sp/><sp/><sp/>function_body();</highlight></codeline>
<codeline lineno="11816"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11817"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11819"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11820"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11821"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11823"><highlight class="normal"></highlight></codeline>
<codeline lineno="11824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11826"><highlight class="normal"></highlight></codeline>
<codeline lineno="11827"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Boolean_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11828"><highlight class="normal"></highlight></codeline>
<codeline lineno="11829"><highlight class="normal">KerMLParser::Boolean_expressionContext::Boolean_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11830"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11832"><highlight class="normal"></highlight></codeline>
<codeline lineno="11833"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::Boolean_expressionContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11836"><highlight class="normal"></highlight></codeline>
<codeline lineno="11837"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Boolean_expressionContext::KEYWORD_BOOL()<sp/>{</highlight></codeline>
<codeline lineno="11838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_BOOL,<sp/>0);</highlight></codeline>
<codeline lineno="11839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11840"><highlight class="normal"></highlight></codeline>
<codeline lineno="11841"><highlight class="normal">KerMLParser::Feature_declarationContext*<sp/>KerMLParser::Boolean_expressionContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="11843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11844"><highlight class="normal"></highlight></codeline>
<codeline lineno="11845"><highlight class="normal">KerMLParser::Function_bodyContext*<sp/>KerMLParser::Boolean_expressionContext::function_body()<sp/>{</highlight></codeline>
<codeline lineno="11846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="11847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11848"><highlight class="normal"></highlight></codeline>
<codeline lineno="11849"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::Boolean_expressionContext::value_part()<sp/>{</highlight></codeline>
<codeline lineno="11850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Value_partContext&gt;(0);</highlight></codeline>
<codeline lineno="11851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11852"><highlight class="normal"></highlight></codeline>
<codeline lineno="11853"><highlight class="normal"></highlight></codeline>
<codeline lineno="11854"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Boolean_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBoolean_expression;</highlight></codeline>
<codeline lineno="11856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11857"><highlight class="normal"></highlight></codeline>
<codeline lineno="11858"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Boolean_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11861"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBoolean_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11863"><highlight class="normal"></highlight></codeline>
<codeline lineno="11864"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Boolean_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11867"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBoolean_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11869"><highlight class="normal"></highlight></codeline>
<codeline lineno="11870"><highlight class="normal">KerMLParser::Boolean_expressionContext*<sp/>KerMLParser::boolean_expression()<sp/>{</highlight></codeline>
<codeline lineno="11871"><highlight class="normal"><sp/><sp/><ref refid="db/d65/class_ker_m_l_parser_1_1_boolean__expression_context" kindref="compound">Boolean_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d65/class_ker_m_l_parser_1_1_boolean__expression_context" kindref="compound">Boolean_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11872"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>252,<sp/>KerMLParser::RuleBoolean_expression);</highlight></codeline>
<codeline lineno="11873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11874"><highlight class="normal"></highlight></codeline>
<codeline lineno="11875"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11877"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11879"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11880"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11881"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11883"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11884"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1483);</highlight></codeline>
<codeline lineno="11885"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="11886"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1484);</highlight></codeline>
<codeline lineno="11887"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_BOOL);</highlight></codeline>
<codeline lineno="11888"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1485);</highlight></codeline>
<codeline lineno="11889"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="11890"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1487);</highlight></codeline>
<codeline lineno="11891"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11892"><highlight class="normal"></highlight></codeline>
<codeline lineno="11893"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="11895"><highlight class="normal"></highlight></codeline>
<codeline lineno="11896"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="11897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1486);</highlight></codeline>
<codeline lineno="11898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_part();</highlight></codeline>
<codeline lineno="11899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11900"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1489);</highlight></codeline>
<codeline lineno="11901"><highlight class="normal"><sp/><sp/><sp/><sp/>function_body();</highlight></codeline>
<codeline lineno="11902"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="11905"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="11906"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="11907"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="11908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11909"><highlight class="normal"></highlight></codeline>
<codeline lineno="11910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="11911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11912"><highlight class="normal"></highlight></codeline>
<codeline lineno="11913"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>InvariantContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11914"><highlight class="normal"></highlight></codeline>
<codeline lineno="11915"><highlight class="normal">KerMLParser::InvariantContext::InvariantContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="11916"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="11917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11918"><highlight class="normal"></highlight></codeline>
<codeline lineno="11919"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::InvariantContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="11920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="11921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11922"><highlight class="normal"></highlight></codeline>
<codeline lineno="11923"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::InvariantContext::KEYWORD_INV()<sp/>{</highlight></codeline>
<codeline lineno="11924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_INV,<sp/>0);</highlight></codeline>
<codeline lineno="11925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11926"><highlight class="normal"></highlight></codeline>
<codeline lineno="11927"><highlight class="normal">KerMLParser::Feature_declarationContext*<sp/>KerMLParser::InvariantContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="11928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="11929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11930"><highlight class="normal"></highlight></codeline>
<codeline lineno="11931"><highlight class="normal">KerMLParser::Function_bodyContext*<sp/>KerMLParser::InvariantContext::function_body()<sp/>{</highlight></codeline>
<codeline lineno="11932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="11933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11934"><highlight class="normal"></highlight></codeline>
<codeline lineno="11935"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::InvariantContext::value_part()<sp/>{</highlight></codeline>
<codeline lineno="11936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Value_partContext&gt;(0);</highlight></codeline>
<codeline lineno="11937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11938"><highlight class="normal"></highlight></codeline>
<codeline lineno="11939"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::InvariantContext::KEYWORD_TRUE()<sp/>{</highlight></codeline>
<codeline lineno="11940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TRUE,<sp/>0);</highlight></codeline>
<codeline lineno="11941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11942"><highlight class="normal"></highlight></codeline>
<codeline lineno="11943"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::InvariantContext::KEYWORD_FALSE()<sp/>{</highlight></codeline>
<codeline lineno="11944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FALSE,<sp/>0);</highlight></codeline>
<codeline lineno="11945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11946"><highlight class="normal"></highlight></codeline>
<codeline lineno="11947"><highlight class="normal"></highlight></codeline>
<codeline lineno="11948"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::InvariantContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleInvariant;</highlight></codeline>
<codeline lineno="11950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11951"><highlight class="normal"></highlight></codeline>
<codeline lineno="11952"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::InvariantContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11955"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterInvariant(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11957"><highlight class="normal"></highlight></codeline>
<codeline lineno="11958"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::InvariantContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="11959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="11960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11961"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitInvariant(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11963"><highlight class="normal"></highlight></codeline>
<codeline lineno="11964"><highlight class="normal">KerMLParser::InvariantContext*<sp/>KerMLParser::invariant()<sp/>{</highlight></codeline>
<codeline lineno="11965"><highlight class="normal"><sp/><sp/><ref refid="d1/d25/class_ker_m_l_parser_1_1_invariant_context" kindref="compound">InvariantContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d25/class_ker_m_l_parser_1_1_invariant_context" kindref="compound">InvariantContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="11966"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>254,<sp/>KerMLParser::RuleInvariant);</highlight></codeline>
<codeline lineno="11967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11968"><highlight class="normal"></highlight></codeline>
<codeline lineno="11969"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="11971"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="11973"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11974"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="11975"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="11976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11977"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="11978"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1491);</highlight></codeline>
<codeline lineno="11979"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="11980"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1492);</highlight></codeline>
<codeline lineno="11981"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_INV);</highlight></codeline>
<codeline lineno="11982"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1494);</highlight></codeline>
<codeline lineno="11983"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11984"><highlight class="normal"></highlight></codeline>
<codeline lineno="11985"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_FALSE</highlight></codeline>
<codeline lineno="11987"><highlight class="normal"></highlight></codeline>
<codeline lineno="11988"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_TRUE)<sp/>{</highlight></codeline>
<codeline lineno="11989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1493);</highlight></codeline>
<codeline lineno="11990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="11991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_FALSE</highlight></codeline>
<codeline lineno="11992"><highlight class="normal"></highlight></codeline>
<codeline lineno="11993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_TRUE))<sp/>{</highlight></codeline>
<codeline lineno="11994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="11999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12001"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1496);</highlight></codeline>
<codeline lineno="12002"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="12003"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1498);</highlight></codeline>
<codeline lineno="12004"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12005"><highlight class="normal"></highlight></codeline>
<codeline lineno="12006"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="12007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="12008"><highlight class="normal"></highlight></codeline>
<codeline lineno="12009"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="12010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1497);</highlight></codeline>
<codeline lineno="12011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_part();</highlight></codeline>
<codeline lineno="12012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12013"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1500);</highlight></codeline>
<codeline lineno="12014"><highlight class="normal"><sp/><sp/><sp/><sp/>function_body();</highlight></codeline>
<codeline lineno="12015"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12016"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12018"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12019"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12020"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12022"><highlight class="normal"></highlight></codeline>
<codeline lineno="12023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12025"><highlight class="normal"></highlight></codeline>
<codeline lineno="12026"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_expression_reference_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12027"><highlight class="normal"></highlight></codeline>
<codeline lineno="12028"><highlight class="normal">KerMLParser::Owned_expression_reference_memberContext::Owned_expression_reference_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12029"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12031"><highlight class="normal"></highlight></codeline>
<codeline lineno="12032"><highlight class="normal"><ref refid="da/d6e/class_ker_m_l_parser_1_1_owned__expression__reference_context" kindref="compound">KerMLParser::Owned_expression_referenceContext</ref>*<sp/>KerMLParser::Owned_expression_reference_memberContext::owned_expression_reference()<sp/>{</highlight></codeline>
<codeline lineno="12033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expression_referenceContext&gt;(0);</highlight></codeline>
<codeline lineno="12034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12035"><highlight class="normal"></highlight></codeline>
<codeline lineno="12036"><highlight class="normal"></highlight></codeline>
<codeline lineno="12037"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_reference_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_expression_reference_member;</highlight></codeline>
<codeline lineno="12039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12040"><highlight class="normal"></highlight></codeline>
<codeline lineno="12041"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_reference_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12044"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_expression_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12046"><highlight class="normal"></highlight></codeline>
<codeline lineno="12047"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_reference_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12050"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_expression_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12052"><highlight class="normal"></highlight></codeline>
<codeline lineno="12053"><highlight class="normal">KerMLParser::Owned_expression_reference_memberContext*<sp/>KerMLParser::owned_expression_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="12054"><highlight class="normal"><sp/><sp/><ref refid="df/d1d/class_ker_m_l_parser_1_1_owned__expression__reference__member_context" kindref="compound">Owned_expression_reference_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d1d/class_ker_m_l_parser_1_1_owned__expression__reference__member_context" kindref="compound">Owned_expression_reference_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12055"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>256,<sp/>KerMLParser::RuleOwned_expression_reference_member);</highlight></codeline>
<codeline lineno="12056"><highlight class="normal"></highlight></codeline>
<codeline lineno="12057"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12059"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12061"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12062"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12063"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12065"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12066"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1502);</highlight></codeline>
<codeline lineno="12067"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression_reference();</highlight></codeline>
<codeline lineno="12068"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12071"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12072"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12073"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12074"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12075"><highlight class="normal"></highlight></codeline>
<codeline lineno="12076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12078"><highlight class="normal"></highlight></codeline>
<codeline lineno="12079"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_expression_referenceContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12080"><highlight class="normal"></highlight></codeline>
<codeline lineno="12081"><highlight class="normal">KerMLParser::Owned_expression_referenceContext::Owned_expression_referenceContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12082"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12084"><highlight class="normal"></highlight></codeline>
<codeline lineno="12085"><highlight class="normal"><ref refid="d9/da0/class_ker_m_l_parser_1_1_owned__expression__member_context" kindref="compound">KerMLParser::Owned_expression_memberContext</ref>*<sp/>KerMLParser::Owned_expression_referenceContext::owned_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="12086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expression_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="12087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12088"><highlight class="normal"></highlight></codeline>
<codeline lineno="12089"><highlight class="normal"></highlight></codeline>
<codeline lineno="12090"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_referenceContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_expression_reference;</highlight></codeline>
<codeline lineno="12092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12093"><highlight class="normal"></highlight></codeline>
<codeline lineno="12094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_referenceContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12097"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_expression_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12099"><highlight class="normal"></highlight></codeline>
<codeline lineno="12100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_referenceContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12103"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_expression_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12105"><highlight class="normal"></highlight></codeline>
<codeline lineno="12106"><highlight class="normal">KerMLParser::Owned_expression_referenceContext*<sp/>KerMLParser::owned_expression_reference()<sp/>{</highlight></codeline>
<codeline lineno="12107"><highlight class="normal"><sp/><sp/><ref refid="da/d6e/class_ker_m_l_parser_1_1_owned__expression__reference_context" kindref="compound">Owned_expression_referenceContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d6e/class_ker_m_l_parser_1_1_owned__expression__reference_context" kindref="compound">Owned_expression_referenceContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12108"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>258,<sp/>KerMLParser::RuleOwned_expression_reference);</highlight></codeline>
<codeline lineno="12109"><highlight class="normal"></highlight></codeline>
<codeline lineno="12110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12112"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12115"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12116"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12118"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12119"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1504);</highlight></codeline>
<codeline lineno="12120"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression_member();</highlight></codeline>
<codeline lineno="12121"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12124"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12125"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12126"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12128"><highlight class="normal"></highlight></codeline>
<codeline lineno="12129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12131"><highlight class="normal"></highlight></codeline>
<codeline lineno="12132"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_expression_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12133"><highlight class="normal"></highlight></codeline>
<codeline lineno="12134"><highlight class="normal">KerMLParser::Owned_expression_memberContext::Owned_expression_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12135"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12137"><highlight class="normal"></highlight></codeline>
<codeline lineno="12138"><highlight class="normal"><ref refid="d9/d44/class_ker_m_l_parser_1_1_owned__expressions_context" kindref="compound">KerMLParser::Owned_expressionsContext</ref>*<sp/>KerMLParser::Owned_expression_memberContext::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="12139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionsContext&gt;(0);</highlight></codeline>
<codeline lineno="12140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12141"><highlight class="normal"></highlight></codeline>
<codeline lineno="12142"><highlight class="normal"></highlight></codeline>
<codeline lineno="12143"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_expression_member;</highlight></codeline>
<codeline lineno="12145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12146"><highlight class="normal"></highlight></codeline>
<codeline lineno="12147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12150"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12152"><highlight class="normal"></highlight></codeline>
<codeline lineno="12153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expression_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12156"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12158"><highlight class="normal"></highlight></codeline>
<codeline lineno="12159"><highlight class="normal">KerMLParser::Owned_expression_memberContext*<sp/>KerMLParser::owned_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="12160"><highlight class="normal"><sp/><sp/><ref refid="d9/da0/class_ker_m_l_parser_1_1_owned__expression__member_context" kindref="compound">Owned_expression_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/da0/class_ker_m_l_parser_1_1_owned__expression__member_context" kindref="compound">Owned_expression_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12161"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>260,<sp/>KerMLParser::RuleOwned_expression_member);</highlight></codeline>
<codeline lineno="12162"><highlight class="normal"></highlight></codeline>
<codeline lineno="12163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12165"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12168"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12169"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12171"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12172"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1506);</highlight></codeline>
<codeline lineno="12173"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expressions();</highlight></codeline>
<codeline lineno="12174"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12177"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12178"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12179"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12181"><highlight class="normal"></highlight></codeline>
<codeline lineno="12182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12184"><highlight class="normal"></highlight></codeline>
<codeline lineno="12185"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_expressionsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12186"><highlight class="normal"></highlight></codeline>
<codeline lineno="12187"><highlight class="normal">KerMLParser::Owned_expressionsContext::Owned_expressionsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12188"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12190"><highlight class="normal"></highlight></codeline>
<codeline lineno="12191"><highlight class="normal">std::vector&lt;KerMLParser::Owned_expressionContext<sp/>*&gt;<sp/>KerMLParser::Owned_expressionsContext::owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="12192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_expressionContext&gt;();</highlight></codeline>
<codeline lineno="12193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12194"><highlight class="normal"></highlight></codeline>
<codeline lineno="12195"><highlight class="normal">KerMLParser::Owned_expressionContext*<sp/>KerMLParser::Owned_expressionsContext::owned_expression(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="12196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionContext&gt;(i);</highlight></codeline>
<codeline lineno="12197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12198"><highlight class="normal"></highlight></codeline>
<codeline lineno="12199"><highlight class="normal"></highlight></codeline>
<codeline lineno="12200"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expressionsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_expressions;</highlight></codeline>
<codeline lineno="12202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12203"><highlight class="normal"></highlight></codeline>
<codeline lineno="12204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expressionsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12207"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_expressions(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12209"><highlight class="normal"></highlight></codeline>
<codeline lineno="12210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expressionsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12213"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_expressions(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12215"><highlight class="normal"></highlight></codeline>
<codeline lineno="12216"><highlight class="normal">KerMLParser::Owned_expressionsContext*<sp/>KerMLParser::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="12217"><highlight class="normal"><sp/><sp/><ref refid="d9/d44/class_ker_m_l_parser_1_1_owned__expressions_context" kindref="compound">Owned_expressionsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d44/class_ker_m_l_parser_1_1_owned__expressions_context" kindref="compound">Owned_expressionsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12218"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>262,<sp/>KerMLParser::RuleOwned_expressions);</highlight></codeline>
<codeline lineno="12219"><highlight class="normal"></highlight></codeline>
<codeline lineno="12220"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12222"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12225"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12226"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alt;</highlight></codeline>
<codeline lineno="12229"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12230"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1509);<sp/></highlight></codeline>
<codeline lineno="12231"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12232"><highlight class="normal"><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="12233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(alt)<sp/>{</highlight></codeline>
<codeline lineno="12235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="12236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1508);</highlight></codeline>
<codeline lineno="12237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_expression();</highlight></codeline>
<codeline lineno="12238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12240"><highlight class="normal"></highlight></codeline>
<codeline lineno="12241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1511);<sp/></highlight></codeline>
<codeline lineno="12245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alt<sp/>=<sp/>getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>156,<sp/>_ctx);</highlight></codeline>
<codeline lineno="12247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(alt<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>alt<sp/>!=<sp/>atn::ATN::INVALID_ALT_NUMBER);</highlight></codeline>
<codeline lineno="12248"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12251"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12252"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12253"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12255"><highlight class="normal"></highlight></codeline>
<codeline lineno="12256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12258"><highlight class="normal"></highlight></codeline>
<codeline lineno="12259"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12260"><highlight class="normal"></highlight></codeline>
<codeline lineno="12261"><highlight class="normal">KerMLParser::Owned_expressionContext::Owned_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12262"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12264"><highlight class="normal"></highlight></codeline>
<codeline lineno="12265"><highlight class="normal"><ref refid="db/dda/class_ker_m_l_parser_1_1_conditional__expression_context" kindref="compound">KerMLParser::Conditional_expressionContext</ref>*<sp/>KerMLParser::Owned_expressionContext::conditional_expression()<sp/>{</highlight></codeline>
<codeline lineno="12266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Conditional_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12268"><highlight class="normal"></highlight></codeline>
<codeline lineno="12269"><highlight class="normal">KerMLParser::Conditional_binary_operator_expressionContext*<sp/>KerMLParser::Owned_expressionContext::conditional_binary_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="12270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Conditional_binary_operator_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12272"><highlight class="normal"></highlight></codeline>
<codeline lineno="12273"><highlight class="normal">KerMLParser::Binary_operator_expressionContext*<sp/>KerMLParser::Owned_expressionContext::binary_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="12274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Binary_operator_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12276"><highlight class="normal"></highlight></codeline>
<codeline lineno="12277"><highlight class="normal">KerMLParser::Unary_operator_expressionContext*<sp/>KerMLParser::Owned_expressionContext::unary_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="12278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Unary_operator_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12280"><highlight class="normal"></highlight></codeline>
<codeline lineno="12281"><highlight class="normal">KerMLParser::Classification_expressionContext*<sp/>KerMLParser::Owned_expressionContext::classification_expression()<sp/>{</highlight></codeline>
<codeline lineno="12282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classification_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12284"><highlight class="normal"></highlight></codeline>
<codeline lineno="12285"><highlight class="normal">KerMLParser::Metaclassification_expressionContext*<sp/>KerMLParser::Owned_expressionContext::metaclassification_expression()<sp/>{</highlight></codeline>
<codeline lineno="12286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metaclassification_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12288"><highlight class="normal"></highlight></codeline>
<codeline lineno="12289"><highlight class="normal">KerMLParser::Extend_expressionContext*<sp/>KerMLParser::Owned_expressionContext::extend_expression()<sp/>{</highlight></codeline>
<codeline lineno="12290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Extend_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12292"><highlight class="normal"></highlight></codeline>
<codeline lineno="12293"><highlight class="normal">KerMLParser::Primary_expressionContext*<sp/>KerMLParser::Owned_expressionContext::primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="12294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12296"><highlight class="normal"></highlight></codeline>
<codeline lineno="12297"><highlight class="normal"></highlight></codeline>
<codeline lineno="12298"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_expression;</highlight></codeline>
<codeline lineno="12300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12301"><highlight class="normal"></highlight></codeline>
<codeline lineno="12302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12305"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12307"><highlight class="normal"></highlight></codeline>
<codeline lineno="12308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12311"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12313"><highlight class="normal"></highlight></codeline>
<codeline lineno="12314"><highlight class="normal">KerMLParser::Owned_expressionContext*<sp/>KerMLParser::owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="12315"><highlight class="normal"><sp/><sp/><ref refid="d0/d40/class_ker_m_l_parser_1_1_owned__expression_context" kindref="compound">Owned_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/d40/class_ker_m_l_parser_1_1_owned__expression_context" kindref="compound">Owned_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12316"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>264,<sp/>KerMLParser::RuleOwned_expression);</highlight></codeline>
<codeline lineno="12317"><highlight class="normal"></highlight></codeline>
<codeline lineno="12318"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12323"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12324"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12326"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1521);</highlight></codeline>
<codeline lineno="12327"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>157,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="12329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="12330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1513);</highlight></codeline>
<codeline lineno="12332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conditional_expression();</highlight></codeline>
<codeline lineno="12333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12335"><highlight class="normal"></highlight></codeline>
<codeline lineno="12336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="12337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="12338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1514);</highlight></codeline>
<codeline lineno="12339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conditional_binary_operator_expression();</highlight></codeline>
<codeline lineno="12340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12342"><highlight class="normal"></highlight></codeline>
<codeline lineno="12343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="12344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="12345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1515);</highlight></codeline>
<codeline lineno="12346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binary_operator_expression();</highlight></codeline>
<codeline lineno="12347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12349"><highlight class="normal"></highlight></codeline>
<codeline lineno="12350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="12351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="12352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1516);</highlight></codeline>
<codeline lineno="12353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unary_operator_expression();</highlight></codeline>
<codeline lineno="12354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12356"><highlight class="normal"></highlight></codeline>
<codeline lineno="12357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{</highlight></codeline>
<codeline lineno="12358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>5);</highlight></codeline>
<codeline lineno="12359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1517);</highlight></codeline>
<codeline lineno="12360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classification_expression();</highlight></codeline>
<codeline lineno="12361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12363"><highlight class="normal"></highlight></codeline>
<codeline lineno="12364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{</highlight></codeline>
<codeline lineno="12365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>6);</highlight></codeline>
<codeline lineno="12366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1518);</highlight></codeline>
<codeline lineno="12367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metaclassification_expression();</highlight></codeline>
<codeline lineno="12368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12370"><highlight class="normal"></highlight></codeline>
<codeline lineno="12371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{</highlight></codeline>
<codeline lineno="12372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>7);</highlight></codeline>
<codeline lineno="12373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1519);</highlight></codeline>
<codeline lineno="12374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extend_expression();</highlight></codeline>
<codeline lineno="12375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12377"><highlight class="normal"></highlight></codeline>
<codeline lineno="12378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{</highlight></codeline>
<codeline lineno="12379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>8);</highlight></codeline>
<codeline lineno="12380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1520);</highlight></codeline>
<codeline lineno="12381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>primary_expression();</highlight></codeline>
<codeline lineno="12382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12384"><highlight class="normal"></highlight></codeline>
<codeline lineno="12385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12388"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12391"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12392"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12393"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12395"><highlight class="normal"></highlight></codeline>
<codeline lineno="12396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12398"><highlight class="normal"></highlight></codeline>
<codeline lineno="12399"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Eased_owned_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12400"><highlight class="normal"></highlight></codeline>
<codeline lineno="12401"><highlight class="normal">KerMLParser::Eased_owned_expressionContext::Eased_owned_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12402"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12404"><highlight class="normal"></highlight></codeline>
<codeline lineno="12405"><highlight class="normal"><ref refid="d6/df3/class_ker_m_l_parser_1_1_primary__expression_context" kindref="compound">KerMLParser::Primary_expressionContext</ref>*<sp/>KerMLParser::Eased_owned_expressionContext::primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="12406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12408"><highlight class="normal"></highlight></codeline>
<codeline lineno="12409"><highlight class="normal">KerMLParser::Extend_expressionContext*<sp/>KerMLParser::Eased_owned_expressionContext::extend_expression()<sp/>{</highlight></codeline>
<codeline lineno="12410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Extend_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12412"><highlight class="normal"></highlight></codeline>
<codeline lineno="12413"><highlight class="normal">KerMLParser::Metaclassification_expressionContext*<sp/>KerMLParser::Eased_owned_expressionContext::metaclassification_expression()<sp/>{</highlight></codeline>
<codeline lineno="12414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metaclassification_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12416"><highlight class="normal"></highlight></codeline>
<codeline lineno="12417"><highlight class="normal">KerMLParser::Unary_operator_expressionContext*<sp/>KerMLParser::Eased_owned_expressionContext::unary_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="12418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Unary_operator_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="12419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12420"><highlight class="normal"></highlight></codeline>
<codeline lineno="12421"><highlight class="normal"></highlight></codeline>
<codeline lineno="12422"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Eased_owned_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleEased_owned_expression;</highlight></codeline>
<codeline lineno="12424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12425"><highlight class="normal"></highlight></codeline>
<codeline lineno="12426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Eased_owned_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12429"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterEased_owned_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12431"><highlight class="normal"></highlight></codeline>
<codeline lineno="12432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Eased_owned_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12435"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitEased_owned_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12437"><highlight class="normal"></highlight></codeline>
<codeline lineno="12438"><highlight class="normal">KerMLParser::Eased_owned_expressionContext*<sp/>KerMLParser::eased_owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="12439"><highlight class="normal"><sp/><sp/><ref refid="de/d1b/class_ker_m_l_parser_1_1_eased__owned__expression_context" kindref="compound">Eased_owned_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d1b/class_ker_m_l_parser_1_1_eased__owned__expression_context" kindref="compound">Eased_owned_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12440"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>266,<sp/>KerMLParser::RuleEased_owned_expression);</highlight></codeline>
<codeline lineno="12441"><highlight class="normal"></highlight></codeline>
<codeline lineno="12442"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12444"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12446"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12447"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12448"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12450"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1527);</highlight></codeline>
<codeline lineno="12451"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>158,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="12453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="12454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1523);</highlight></codeline>
<codeline lineno="12456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>primary_expression();</highlight></codeline>
<codeline lineno="12457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12459"><highlight class="normal"></highlight></codeline>
<codeline lineno="12460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="12461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="12462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1524);</highlight></codeline>
<codeline lineno="12463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extend_expression();</highlight></codeline>
<codeline lineno="12464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12466"><highlight class="normal"></highlight></codeline>
<codeline lineno="12467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="12468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="12469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1525);</highlight></codeline>
<codeline lineno="12470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metaclassification_expression();</highlight></codeline>
<codeline lineno="12471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12473"><highlight class="normal"></highlight></codeline>
<codeline lineno="12474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="12475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="12476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1526);</highlight></codeline>
<codeline lineno="12477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unary_operator_expression();</highlight></codeline>
<codeline lineno="12478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12480"><highlight class="normal"></highlight></codeline>
<codeline lineno="12481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12484"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12487"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12488"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12489"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12491"><highlight class="normal"></highlight></codeline>
<codeline lineno="12492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12494"><highlight class="normal"></highlight></codeline>
<codeline lineno="12495"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Conditional_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12496"><highlight class="normal"></highlight></codeline>
<codeline lineno="12497"><highlight class="normal">KerMLParser::Conditional_expressionContext::Conditional_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12498"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12500"><highlight class="normal"></highlight></codeline>
<codeline lineno="12501"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conditional_expressionContext::KEYWORD_IF()<sp/>{</highlight></codeline>
<codeline lineno="12502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_IF,<sp/>0);</highlight></codeline>
<codeline lineno="12503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12504"><highlight class="normal"></highlight></codeline>
<codeline lineno="12505"><highlight class="normal">KerMLParser::Argument_memberContext*<sp/>KerMLParser::Conditional_expressionContext::argument_member()<sp/>{</highlight></codeline>
<codeline lineno="12506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="12507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12508"><highlight class="normal"></highlight></codeline>
<codeline lineno="12509"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conditional_expressionContext::SYMBOL_QUESTION()<sp/>{</highlight></codeline>
<codeline lineno="12510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_QUESTION,<sp/>0);</highlight></codeline>
<codeline lineno="12511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12512"><highlight class="normal"></highlight></codeline>
<codeline lineno="12513"><highlight class="normal">std::vector&lt;KerMLParser::Argument_expression_memberContext<sp/>*&gt;<sp/>KerMLParser::Conditional_expressionContext::argument_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="12514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Argument_expression_memberContext&gt;();</highlight></codeline>
<codeline lineno="12515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12516"><highlight class="normal"></highlight></codeline>
<codeline lineno="12517"><highlight class="normal">KerMLParser::Argument_expression_memberContext*<sp/>KerMLParser::Conditional_expressionContext::argument_expression_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="12518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_expression_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="12519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12520"><highlight class="normal"></highlight></codeline>
<codeline lineno="12521"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conditional_expressionContext::KEYWORD_ELSE()<sp/>{</highlight></codeline>
<codeline lineno="12522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ELSE,<sp/>0);</highlight></codeline>
<codeline lineno="12523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12524"><highlight class="normal"></highlight></codeline>
<codeline lineno="12525"><highlight class="normal"></highlight></codeline>
<codeline lineno="12526"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConditional_expression;</highlight></codeline>
<codeline lineno="12528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12529"><highlight class="normal"></highlight></codeline>
<codeline lineno="12530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12533"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConditional_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12535"><highlight class="normal"></highlight></codeline>
<codeline lineno="12536"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12539"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConditional_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12541"><highlight class="normal"></highlight></codeline>
<codeline lineno="12542"><highlight class="normal">KerMLParser::Conditional_expressionContext*<sp/>KerMLParser::conditional_expression()<sp/>{</highlight></codeline>
<codeline lineno="12543"><highlight class="normal"><sp/><sp/><ref refid="db/dda/class_ker_m_l_parser_1_1_conditional__expression_context" kindref="compound">Conditional_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/dda/class_ker_m_l_parser_1_1_conditional__expression_context" kindref="compound">Conditional_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12544"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>268,<sp/>KerMLParser::RuleConditional_expression);</highlight></codeline>
<codeline lineno="12545"><highlight class="normal"></highlight></codeline>
<codeline lineno="12546"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12548"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12551"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12552"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12554"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12555"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1529);</highlight></codeline>
<codeline lineno="12556"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_IF);</highlight></codeline>
<codeline lineno="12557"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1530);</highlight></codeline>
<codeline lineno="12558"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_member();</highlight></codeline>
<codeline lineno="12559"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1531);</highlight></codeline>
<codeline lineno="12560"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_QUESTION);</highlight></codeline>
<codeline lineno="12561"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1532);</highlight></codeline>
<codeline lineno="12562"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_expression_member();</highlight></codeline>
<codeline lineno="12563"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1533);</highlight></codeline>
<codeline lineno="12564"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ELSE);</highlight></codeline>
<codeline lineno="12565"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1534);</highlight></codeline>
<codeline lineno="12566"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_expression_member();</highlight></codeline>
<codeline lineno="12567"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12570"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12571"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12572"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12574"><highlight class="normal"></highlight></codeline>
<codeline lineno="12575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12577"><highlight class="normal"></highlight></codeline>
<codeline lineno="12578"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Conditional_binary_operator_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12579"><highlight class="normal"></highlight></codeline>
<codeline lineno="12580"><highlight class="normal">KerMLParser::Conditional_binary_operator_expressionContext::Conditional_binary_operator_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12581"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12583"><highlight class="normal"></highlight></codeline>
<codeline lineno="12584"><highlight class="normal"><ref refid="da/d16/class_ker_m_l_parser_1_1_argument__member_context" kindref="compound">KerMLParser::Argument_memberContext</ref>*<sp/>KerMLParser::Conditional_binary_operator_expressionContext::argument_member()<sp/>{</highlight></codeline>
<codeline lineno="12585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="12586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12587"><highlight class="normal"></highlight></codeline>
<codeline lineno="12588"><highlight class="normal">KerMLParser::Conditional_binary_operatorContext*<sp/>KerMLParser::Conditional_binary_operator_expressionContext::conditional_binary_operator()<sp/>{</highlight></codeline>
<codeline lineno="12589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Conditional_binary_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="12590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12591"><highlight class="normal"></highlight></codeline>
<codeline lineno="12592"><highlight class="normal">KerMLParser::Argument_expression_memberContext*<sp/>KerMLParser::Conditional_binary_operator_expressionContext::argument_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="12593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_expression_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="12594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12595"><highlight class="normal"></highlight></codeline>
<codeline lineno="12596"><highlight class="normal"></highlight></codeline>
<codeline lineno="12597"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_binary_operator_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConditional_binary_operator_expression;</highlight></codeline>
<codeline lineno="12599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12600"><highlight class="normal"></highlight></codeline>
<codeline lineno="12601"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_binary_operator_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12604"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConditional_binary_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12606"><highlight class="normal"></highlight></codeline>
<codeline lineno="12607"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_binary_operator_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12610"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConditional_binary_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12612"><highlight class="normal"></highlight></codeline>
<codeline lineno="12613"><highlight class="normal">KerMLParser::Conditional_binary_operator_expressionContext*<sp/>KerMLParser::conditional_binary_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="12614"><highlight class="normal"><sp/><sp/><ref refid="de/de8/class_ker_m_l_parser_1_1_conditional__binary__operator__expression_context" kindref="compound">Conditional_binary_operator_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/de8/class_ker_m_l_parser_1_1_conditional__binary__operator__expression_context" kindref="compound">Conditional_binary_operator_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12615"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>270,<sp/>KerMLParser::RuleConditional_binary_operator_expression);</highlight></codeline>
<codeline lineno="12616"><highlight class="normal"></highlight></codeline>
<codeline lineno="12617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12619"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12622"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12623"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12625"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12626"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1536);</highlight></codeline>
<codeline lineno="12627"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_member();</highlight></codeline>
<codeline lineno="12628"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1537);</highlight></codeline>
<codeline lineno="12629"><highlight class="normal"><sp/><sp/><sp/><sp/>conditional_binary_operator();</highlight></codeline>
<codeline lineno="12630"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1538);</highlight></codeline>
<codeline lineno="12631"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_expression_member();</highlight></codeline>
<codeline lineno="12632"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12635"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12636"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12637"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12639"><highlight class="normal"></highlight></codeline>
<codeline lineno="12640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12642"><highlight class="normal"></highlight></codeline>
<codeline lineno="12643"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Conditional_binary_operatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12644"><highlight class="normal"></highlight></codeline>
<codeline lineno="12645"><highlight class="normal">KerMLParser::Conditional_binary_operatorContext::Conditional_binary_operatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12646"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12648"><highlight class="normal"></highlight></codeline>
<codeline lineno="12649"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conditional_binary_operatorContext::SYMBOL_DQUESTION()<sp/>{</highlight></codeline>
<codeline lineno="12650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DQUESTION,<sp/>0);</highlight></codeline>
<codeline lineno="12651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12652"><highlight class="normal"></highlight></codeline>
<codeline lineno="12653"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conditional_binary_operatorContext::KEYWORD_OR()<sp/>{</highlight></codeline>
<codeline lineno="12654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_OR,<sp/>0);</highlight></codeline>
<codeline lineno="12655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12656"><highlight class="normal"></highlight></codeline>
<codeline lineno="12657"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conditional_binary_operatorContext::KEYWORD_AND()<sp/>{</highlight></codeline>
<codeline lineno="12658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_AND,<sp/>0);</highlight></codeline>
<codeline lineno="12659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12660"><highlight class="normal"></highlight></codeline>
<codeline lineno="12661"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Conditional_binary_operatorContext::KEYWORD_IMPLIES()<sp/>{</highlight></codeline>
<codeline lineno="12662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_IMPLIES,<sp/>0);</highlight></codeline>
<codeline lineno="12663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12664"><highlight class="normal"></highlight></codeline>
<codeline lineno="12665"><highlight class="normal"></highlight></codeline>
<codeline lineno="12666"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_binary_operatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleConditional_binary_operator;</highlight></codeline>
<codeline lineno="12668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12669"><highlight class="normal"></highlight></codeline>
<codeline lineno="12670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_binary_operatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12673"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterConditional_binary_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12675"><highlight class="normal"></highlight></codeline>
<codeline lineno="12676"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Conditional_binary_operatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12679"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitConditional_binary_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12681"><highlight class="normal"></highlight></codeline>
<codeline lineno="12682"><highlight class="normal">KerMLParser::Conditional_binary_operatorContext*<sp/>KerMLParser::conditional_binary_operator()<sp/>{</highlight></codeline>
<codeline lineno="12683"><highlight class="normal"><sp/><sp/><ref refid="d1/da8/class_ker_m_l_parser_1_1_conditional__binary__operator_context" kindref="compound">Conditional_binary_operatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/da8/class_ker_m_l_parser_1_1_conditional__binary__operator_context" kindref="compound">Conditional_binary_operatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12684"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>272,<sp/>KerMLParser::RuleConditional_binary_operator);</highlight></codeline>
<codeline lineno="12685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12686"><highlight class="normal"></highlight></codeline>
<codeline lineno="12687"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12689"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12692"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12693"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12695"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12696"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1540);</highlight></codeline>
<codeline lineno="12697"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="12698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((((_la<sp/>-<sp/>12)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="12699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>12))<sp/>&amp;<sp/>576461851815051265)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DQUESTION))<sp/>{</highlight></codeline>
<codeline lineno="12700"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="12705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12706"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12707"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12709"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12710"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12711"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12713"><highlight class="normal"></highlight></codeline>
<codeline lineno="12714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12716"><highlight class="normal"></highlight></codeline>
<codeline lineno="12717"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Binary_operator_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12718"><highlight class="normal"></highlight></codeline>
<codeline lineno="12719"><highlight class="normal">KerMLParser::Binary_operator_expressionContext::Binary_operator_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12720"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12722"><highlight class="normal"></highlight></codeline>
<codeline lineno="12723"><highlight class="normal"><ref refid="da/d16/class_ker_m_l_parser_1_1_argument__member_context" kindref="compound">KerMLParser::Argument_memberContext</ref>*<sp/>KerMLParser::Binary_operator_expressionContext::argument_member()<sp/>{</highlight></codeline>
<codeline lineno="12724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="12725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12726"><highlight class="normal"></highlight></codeline>
<codeline lineno="12727"><highlight class="normal">KerMLParser::Binary_operatorContext*<sp/>KerMLParser::Binary_operator_expressionContext::binary_operator()<sp/>{</highlight></codeline>
<codeline lineno="12728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Binary_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="12729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12730"><highlight class="normal"></highlight></codeline>
<codeline lineno="12731"><highlight class="normal">KerMLParser::Owned_expressionsContext*<sp/>KerMLParser::Binary_operator_expressionContext::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="12732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionsContext&gt;(0);</highlight></codeline>
<codeline lineno="12733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12734"><highlight class="normal"></highlight></codeline>
<codeline lineno="12735"><highlight class="normal"></highlight></codeline>
<codeline lineno="12736"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Binary_operator_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBinary_operator_expression;</highlight></codeline>
<codeline lineno="12738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12739"><highlight class="normal"></highlight></codeline>
<codeline lineno="12740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binary_operator_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12743"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBinary_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12745"><highlight class="normal"></highlight></codeline>
<codeline lineno="12746"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binary_operator_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12749"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBinary_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12751"><highlight class="normal"></highlight></codeline>
<codeline lineno="12752"><highlight class="normal">KerMLParser::Binary_operator_expressionContext*<sp/>KerMLParser::binary_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="12753"><highlight class="normal"><sp/><sp/><ref refid="df/d9c/class_ker_m_l_parser_1_1_binary__operator__expression_context" kindref="compound">Binary_operator_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d9c/class_ker_m_l_parser_1_1_binary__operator__expression_context" kindref="compound">Binary_operator_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12754"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>274,<sp/>KerMLParser::RuleBinary_operator_expression);</highlight></codeline>
<codeline lineno="12755"><highlight class="normal"></highlight></codeline>
<codeline lineno="12756"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12758"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12761"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12762"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12764"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12765"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1542);</highlight></codeline>
<codeline lineno="12766"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_member();</highlight></codeline>
<codeline lineno="12767"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1543);</highlight></codeline>
<codeline lineno="12768"><highlight class="normal"><sp/><sp/><sp/><sp/>binary_operator();</highlight></codeline>
<codeline lineno="12769"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1544);</highlight></codeline>
<codeline lineno="12770"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expressions();</highlight></codeline>
<codeline lineno="12771"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12774"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12775"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12776"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12777"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12778"><highlight class="normal"></highlight></codeline>
<codeline lineno="12779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12781"><highlight class="normal"></highlight></codeline>
<codeline lineno="12782"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Binary_operatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12783"><highlight class="normal"></highlight></codeline>
<codeline lineno="12784"><highlight class="normal">KerMLParser::Binary_operatorContext::Binary_operatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12785"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12787"><highlight class="normal"></highlight></codeline>
<codeline lineno="12788"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_VERTICAL_LINE()<sp/>{</highlight></codeline>
<codeline lineno="12789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_VERTICAL_LINE,<sp/>0);</highlight></codeline>
<codeline lineno="12790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12791"><highlight class="normal"></highlight></codeline>
<codeline lineno="12792"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_AND()<sp/>{</highlight></codeline>
<codeline lineno="12793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_AND,<sp/>0);</highlight></codeline>
<codeline lineno="12794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12795"><highlight class="normal"></highlight></codeline>
<codeline lineno="12796"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::KEYWORD_XOR()<sp/>{</highlight></codeline>
<codeline lineno="12797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_XOR,<sp/>0);</highlight></codeline>
<codeline lineno="12798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12799"><highlight class="normal"></highlight></codeline>
<codeline lineno="12800"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_DDOT()<sp/>{</highlight></codeline>
<codeline lineno="12801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DDOT,<sp/>0);</highlight></codeline>
<codeline lineno="12802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12803"><highlight class="normal"></highlight></codeline>
<codeline lineno="12804"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="12805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="12806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12807"><highlight class="normal"></highlight></codeline>
<codeline lineno="12808"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_NOT_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="12809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_NOT_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="12810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12811"><highlight class="normal"></highlight></codeline>
<codeline lineno="12812"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_IFF_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="12813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_IFF_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="12814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12815"><highlight class="normal"></highlight></codeline>
<codeline lineno="12816"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_IFF_NOT_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="12817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_IFF_NOT_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="12818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12819"><highlight class="normal"></highlight></codeline>
<codeline lineno="12820"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_GREATER()<sp/>{</highlight></codeline>
<codeline lineno="12821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_GREATER,<sp/>0);</highlight></codeline>
<codeline lineno="12822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12823"><highlight class="normal"></highlight></codeline>
<codeline lineno="12824"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_SMALLER()<sp/>{</highlight></codeline>
<codeline lineno="12825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SMALLER,<sp/>0);</highlight></codeline>
<codeline lineno="12826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12827"><highlight class="normal"></highlight></codeline>
<codeline lineno="12828"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_GREATER_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="12829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_GREATER_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="12830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12831"><highlight class="normal"></highlight></codeline>
<codeline lineno="12832"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_SMALLER_EQUAL()<sp/>{</highlight></codeline>
<codeline lineno="12833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SMALLER_EQUAL,<sp/>0);</highlight></codeline>
<codeline lineno="12834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12835"><highlight class="normal"></highlight></codeline>
<codeline lineno="12836"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_PLUS()<sp/>{</highlight></codeline>
<codeline lineno="12837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_PLUS,<sp/>0);</highlight></codeline>
<codeline lineno="12838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12839"><highlight class="normal"></highlight></codeline>
<codeline lineno="12840"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_MINUS()<sp/>{</highlight></codeline>
<codeline lineno="12841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_MINUS,<sp/>0);</highlight></codeline>
<codeline lineno="12842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12843"><highlight class="normal"></highlight></codeline>
<codeline lineno="12844"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_STAR()<sp/>{</highlight></codeline>
<codeline lineno="12845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STAR,<sp/>0);</highlight></codeline>
<codeline lineno="12846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12847"><highlight class="normal"></highlight></codeline>
<codeline lineno="12848"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_SLASH()<sp/>{</highlight></codeline>
<codeline lineno="12849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SLASH,<sp/>0);</highlight></codeline>
<codeline lineno="12850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12851"><highlight class="normal"></highlight></codeline>
<codeline lineno="12852"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_MOD()<sp/>{</highlight></codeline>
<codeline lineno="12853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_MOD,<sp/>0);</highlight></codeline>
<codeline lineno="12854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12855"><highlight class="normal"></highlight></codeline>
<codeline lineno="12856"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_UPPER()<sp/>{</highlight></codeline>
<codeline lineno="12857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_UPPER,<sp/>0);</highlight></codeline>
<codeline lineno="12858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12859"><highlight class="normal"></highlight></codeline>
<codeline lineno="12860"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Binary_operatorContext::SYMBOL_DOUBLE_STAR()<sp/>{</highlight></codeline>
<codeline lineno="12861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOUBLE_STAR,<sp/>0);</highlight></codeline>
<codeline lineno="12862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12863"><highlight class="normal"></highlight></codeline>
<codeline lineno="12864"><highlight class="normal"></highlight></codeline>
<codeline lineno="12865"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Binary_operatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBinary_operator;</highlight></codeline>
<codeline lineno="12867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12868"><highlight class="normal"></highlight></codeline>
<codeline lineno="12869"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binary_operatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12872"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBinary_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12874"><highlight class="normal"></highlight></codeline>
<codeline lineno="12875"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Binary_operatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12878"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBinary_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12880"><highlight class="normal"></highlight></codeline>
<codeline lineno="12881"><highlight class="normal">KerMLParser::Binary_operatorContext*<sp/>KerMLParser::binary_operator()<sp/>{</highlight></codeline>
<codeline lineno="12882"><highlight class="normal"><sp/><sp/><ref refid="d7/d97/class_ker_m_l_parser_1_1_binary__operator_context" kindref="compound">Binary_operatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/d97/class_ker_m_l_parser_1_1_binary__operator_context" kindref="compound">Binary_operatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12883"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>276,<sp/>KerMLParser::RuleBinary_operator);</highlight></codeline>
<codeline lineno="12884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12885"><highlight class="normal"></highlight></codeline>
<codeline lineno="12886"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12888"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12890"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12891"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12892"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12894"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12895"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1546);</highlight></codeline>
<codeline lineno="12896"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="12897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((((_la<sp/>-<sp/>102)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="12898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>102))<sp/>&amp;<sp/>1112292913586177)<sp/>!=<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="12899"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="12904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12905"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12908"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12909"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12910"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12912"><highlight class="normal"></highlight></codeline>
<codeline lineno="12913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12915"><highlight class="normal"></highlight></codeline>
<codeline lineno="12916"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Unary_operator_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12917"><highlight class="normal"></highlight></codeline>
<codeline lineno="12918"><highlight class="normal">KerMLParser::Unary_operator_expressionContext::Unary_operator_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12919"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12921"><highlight class="normal"></highlight></codeline>
<codeline lineno="12922"><highlight class="normal"><ref refid="dc/d89/class_ker_m_l_parser_1_1_unary__operator_context" kindref="compound">KerMLParser::Unary_operatorContext</ref>*<sp/>KerMLParser::Unary_operator_expressionContext::unary_operator()<sp/>{</highlight></codeline>
<codeline lineno="12923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Unary_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="12924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12925"><highlight class="normal"></highlight></codeline>
<codeline lineno="12926"><highlight class="normal">KerMLParser::Owned_expressionsContext*<sp/>KerMLParser::Unary_operator_expressionContext::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="12927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionsContext&gt;(0);</highlight></codeline>
<codeline lineno="12928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12929"><highlight class="normal"></highlight></codeline>
<codeline lineno="12930"><highlight class="normal"></highlight></codeline>
<codeline lineno="12931"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Unary_operator_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleUnary_operator_expression;</highlight></codeline>
<codeline lineno="12933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12934"><highlight class="normal"></highlight></codeline>
<codeline lineno="12935"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Unary_operator_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12938"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterUnary_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12940"><highlight class="normal"></highlight></codeline>
<codeline lineno="12941"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Unary_operator_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="12942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="12943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12944"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitUnary_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12946"><highlight class="normal"></highlight></codeline>
<codeline lineno="12947"><highlight class="normal">KerMLParser::Unary_operator_expressionContext*<sp/>KerMLParser::unary_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="12948"><highlight class="normal"><sp/><sp/><ref refid="d5/df4/class_ker_m_l_parser_1_1_unary__operator__expression_context" kindref="compound">Unary_operator_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/df4/class_ker_m_l_parser_1_1_unary__operator__expression_context" kindref="compound">Unary_operator_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="12949"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>278,<sp/>KerMLParser::RuleUnary_operator_expression);</highlight></codeline>
<codeline lineno="12950"><highlight class="normal"></highlight></codeline>
<codeline lineno="12951"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="12953"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="12955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12956"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="12957"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="12958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12959"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="12960"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1548);</highlight></codeline>
<codeline lineno="12961"><highlight class="normal"><sp/><sp/><sp/><sp/>unary_operator();</highlight></codeline>
<codeline lineno="12962"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1549);</highlight></codeline>
<codeline lineno="12963"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expressions();</highlight></codeline>
<codeline lineno="12964"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12965"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="12967"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="12968"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="12969"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="12970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12971"><highlight class="normal"></highlight></codeline>
<codeline lineno="12972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="12973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12974"><highlight class="normal"></highlight></codeline>
<codeline lineno="12975"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Unary_operatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12976"><highlight class="normal"></highlight></codeline>
<codeline lineno="12977"><highlight class="normal">KerMLParser::Unary_operatorContext::Unary_operatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="12978"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="12979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12980"><highlight class="normal"></highlight></codeline>
<codeline lineno="12981"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Unary_operatorContext::SYMBOL_PLUS()<sp/>{</highlight></codeline>
<codeline lineno="12982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_PLUS,<sp/>0);</highlight></codeline>
<codeline lineno="12983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12984"><highlight class="normal"></highlight></codeline>
<codeline lineno="12985"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Unary_operatorContext::SYMBOL_MINUS()<sp/>{</highlight></codeline>
<codeline lineno="12986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_MINUS,<sp/>0);</highlight></codeline>
<codeline lineno="12987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12988"><highlight class="normal"></highlight></codeline>
<codeline lineno="12989"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Unary_operatorContext::SYMBOL_CONJUNGATES()<sp/>{</highlight></codeline>
<codeline lineno="12990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CONJUNGATES,<sp/>0);</highlight></codeline>
<codeline lineno="12991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12992"><highlight class="normal"></highlight></codeline>
<codeline lineno="12993"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Unary_operatorContext::KEYWORD_NOT()<sp/>{</highlight></codeline>
<codeline lineno="12994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_NOT,<sp/>0);</highlight></codeline>
<codeline lineno="12995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12996"><highlight class="normal"></highlight></codeline>
<codeline lineno="12997"><highlight class="normal"></highlight></codeline>
<codeline lineno="12998"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Unary_operatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleUnary_operator;</highlight></codeline>
<codeline lineno="13000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13001"><highlight class="normal"></highlight></codeline>
<codeline lineno="13002"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Unary_operatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13005"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterUnary_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13007"><highlight class="normal"></highlight></codeline>
<codeline lineno="13008"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Unary_operatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13011"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitUnary_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13013"><highlight class="normal"></highlight></codeline>
<codeline lineno="13014"><highlight class="normal">KerMLParser::Unary_operatorContext*<sp/>KerMLParser::unary_operator()<sp/>{</highlight></codeline>
<codeline lineno="13015"><highlight class="normal"><sp/><sp/><ref refid="dc/d89/class_ker_m_l_parser_1_1_unary__operator_context" kindref="compound">Unary_operatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d89/class_ker_m_l_parser_1_1_unary__operator_context" kindref="compound">Unary_operatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13016"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>280,<sp/>KerMLParser::RuleUnary_operator);</highlight></codeline>
<codeline lineno="13017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13018"><highlight class="normal"></highlight></codeline>
<codeline lineno="13019"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13021"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13023"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13024"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13025"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13027"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13028"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1551);</highlight></codeline>
<codeline lineno="13029"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="13030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_NOT</highlight></codeline>
<codeline lineno="13031"><highlight class="normal"></highlight></codeline>
<codeline lineno="13032"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_CONJUNGATES<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_PLUS</highlight></codeline>
<codeline lineno="13033"><highlight class="normal"></highlight></codeline>
<codeline lineno="13034"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_MINUS))<sp/>{</highlight></codeline>
<codeline lineno="13035"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="13040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13041"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13042"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13044"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13045"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13046"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13047"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13048"><highlight class="normal"></highlight></codeline>
<codeline lineno="13049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13051"><highlight class="normal"></highlight></codeline>
<codeline lineno="13052"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Classification_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13053"><highlight class="normal"></highlight></codeline>
<codeline lineno="13054"><highlight class="normal">KerMLParser::Classification_expressionContext::Classification_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13055"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13057"><highlight class="normal"></highlight></codeline>
<codeline lineno="13058"><highlight class="normal"><ref refid="da/d16/class_ker_m_l_parser_1_1_argument__member_context" kindref="compound">KerMLParser::Argument_memberContext</ref>*<sp/>KerMLParser::Classification_expressionContext::argument_member()<sp/>{</highlight></codeline>
<codeline lineno="13059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13061"><highlight class="normal"></highlight></codeline>
<codeline lineno="13062"><highlight class="normal">KerMLParser::Classification_test_operatorContext*<sp/>KerMLParser::Classification_expressionContext::classification_test_operator()<sp/>{</highlight></codeline>
<codeline lineno="13063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classification_test_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="13064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13065"><highlight class="normal"></highlight></codeline>
<codeline lineno="13066"><highlight class="normal">KerMLParser::Type_reference_memberContext*<sp/>KerMLParser::Classification_expressionContext::type_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="13067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_reference_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13069"><highlight class="normal"></highlight></codeline>
<codeline lineno="13070"><highlight class="normal">KerMLParser::Cast_operatorContext*<sp/>KerMLParser::Classification_expressionContext::cast_operator()<sp/>{</highlight></codeline>
<codeline lineno="13071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Cast_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="13072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13073"><highlight class="normal"></highlight></codeline>
<codeline lineno="13074"><highlight class="normal">KerMLParser::Type_result_memberContext*<sp/>KerMLParser::Classification_expressionContext::type_result_member()<sp/>{</highlight></codeline>
<codeline lineno="13075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_result_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13077"><highlight class="normal"></highlight></codeline>
<codeline lineno="13078"><highlight class="normal"></highlight></codeline>
<codeline lineno="13079"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Classification_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleClassification_expression;</highlight></codeline>
<codeline lineno="13081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13082"><highlight class="normal"></highlight></codeline>
<codeline lineno="13083"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Classification_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13086"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterClassification_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13088"><highlight class="normal"></highlight></codeline>
<codeline lineno="13089"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Classification_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13092"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitClassification_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13094"><highlight class="normal"></highlight></codeline>
<codeline lineno="13095"><highlight class="normal">KerMLParser::Classification_expressionContext*<sp/>KerMLParser::classification_expression()<sp/>{</highlight></codeline>
<codeline lineno="13096"><highlight class="normal"><sp/><sp/><ref refid="d6/d62/class_ker_m_l_parser_1_1_classification__expression_context" kindref="compound">Classification_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d62/class_ker_m_l_parser_1_1_classification__expression_context" kindref="compound">Classification_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13097"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>282,<sp/>KerMLParser::RuleClassification_expression);</highlight></codeline>
<codeline lineno="13098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13099"><highlight class="normal"></highlight></codeline>
<codeline lineno="13100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13102"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13105"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13106"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13108"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13109"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1554);</highlight></codeline>
<codeline lineno="13110"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13111"><highlight class="normal"></highlight></codeline>
<codeline lineno="13112"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="13113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>549755815938)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>68)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>68))<sp/>&amp;<sp/>4927078730368548867)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>136)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>136))<sp/>&amp;<sp/>30146587)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="13117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1553);</highlight></codeline>
<codeline lineno="13118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argument_member();</highlight></codeline>
<codeline lineno="13119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13120"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1562);</highlight></codeline>
<codeline lineno="13121"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="13123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_HASTYPE:</highlight></codeline>
<codeline lineno="13124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_ISTYPE:</highlight></codeline>
<codeline lineno="13125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_AT:<sp/>{</highlight></codeline>
<codeline lineno="13126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1556);</highlight></codeline>
<codeline lineno="13127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classification_test_operator();</highlight></codeline>
<codeline lineno="13128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1557);</highlight></codeline>
<codeline lineno="13129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_reference_member();</highlight></codeline>
<codeline lineno="13130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13132"><highlight class="normal"></highlight></codeline>
<codeline lineno="13133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_AS:<sp/>{</highlight></codeline>
<codeline lineno="13134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1559);</highlight></codeline>
<codeline lineno="13135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cast_operator();</highlight></codeline>
<codeline lineno="13136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1560);</highlight></codeline>
<codeline lineno="13137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_result_member();</highlight></codeline>
<codeline lineno="13138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13140"><highlight class="normal"></highlight></codeline>
<codeline lineno="13141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13144"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13147"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13148"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13149"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13151"><highlight class="normal"></highlight></codeline>
<codeline lineno="13152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13154"><highlight class="normal"></highlight></codeline>
<codeline lineno="13155"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ClassificationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13156"><highlight class="normal"></highlight></codeline>
<codeline lineno="13157"><highlight class="normal">KerMLParser::ClassificationContext::ClassificationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13158"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13160"><highlight class="normal"></highlight></codeline>
<codeline lineno="13161"><highlight class="normal"><ref refid="dc/dea/class_ker_m_l_parser_1_1_classification__test__operator_context" kindref="compound">KerMLParser::Classification_test_operatorContext</ref>*<sp/>KerMLParser::ClassificationContext::classification_test_operator()<sp/>{</highlight></codeline>
<codeline lineno="13162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classification_test_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="13163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13164"><highlight class="normal"></highlight></codeline>
<codeline lineno="13165"><highlight class="normal">KerMLParser::Type_reference_memberContext*<sp/>KerMLParser::ClassificationContext::type_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="13166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_reference_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13168"><highlight class="normal"></highlight></codeline>
<codeline lineno="13169"><highlight class="normal">KerMLParser::Argument_memberContext*<sp/>KerMLParser::ClassificationContext::argument_member()<sp/>{</highlight></codeline>
<codeline lineno="13170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13172"><highlight class="normal"></highlight></codeline>
<codeline lineno="13173"><highlight class="normal">KerMLParser::Cast_operatorContext*<sp/>KerMLParser::ClassificationContext::cast_operator()<sp/>{</highlight></codeline>
<codeline lineno="13174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Cast_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="13175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13176"><highlight class="normal"></highlight></codeline>
<codeline lineno="13177"><highlight class="normal">KerMLParser::Type_result_memberContext*<sp/>KerMLParser::ClassificationContext::type_result_member()<sp/>{</highlight></codeline>
<codeline lineno="13178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_result_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13180"><highlight class="normal"></highlight></codeline>
<codeline lineno="13181"><highlight class="normal"></highlight></codeline>
<codeline lineno="13182"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ClassificationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleClassification;</highlight></codeline>
<codeline lineno="13184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13185"><highlight class="normal"></highlight></codeline>
<codeline lineno="13186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ClassificationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13189"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterClassification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13191"><highlight class="normal"></highlight></codeline>
<codeline lineno="13192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ClassificationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13195"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitClassification(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13197"><highlight class="normal"></highlight></codeline>
<codeline lineno="13198"><highlight class="normal">KerMLParser::ClassificationContext*<sp/>KerMLParser::classification()<sp/>{</highlight></codeline>
<codeline lineno="13199"><highlight class="normal"><sp/><sp/><ref refid="d2/d34/class_ker_m_l_parser_1_1_classification_context" kindref="compound">ClassificationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d34/class_ker_m_l_parser_1_1_classification_context" kindref="compound">ClassificationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13200"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>284,<sp/>KerMLParser::RuleClassification);</highlight></codeline>
<codeline lineno="13201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13202"><highlight class="normal"></highlight></codeline>
<codeline lineno="13203"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13205"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13208"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13209"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13211"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1573);</highlight></codeline>
<codeline lineno="13212"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="13214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::T__0:</highlight></codeline>
<codeline lineno="13215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_ALL:</highlight></codeline>
<codeline lineno="13216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_FALSE:</highlight></codeline>
<codeline lineno="13217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_HASTYPE:</highlight></codeline>
<codeline lineno="13218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_ISTYPE:</highlight></codeline>
<codeline lineno="13219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_NOT:</highlight></codeline>
<codeline lineno="13220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_NULL:</highlight></codeline>
<codeline lineno="13221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_TRUE:</highlight></codeline>
<codeline lineno="13222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STAR:</highlight></codeline>
<codeline lineno="13223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_CONJUNGATES:</highlight></codeline>
<codeline lineno="13224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_ROUND_BRACKET_OPEN:</highlight></codeline>
<codeline lineno="13225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN:</highlight></codeline>
<codeline lineno="13226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_AT:</highlight></codeline>
<codeline lineno="13227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_HASHTAG:</highlight></codeline>
<codeline lineno="13228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_PLUS:</highlight></codeline>
<codeline lineno="13229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_MINUS:</highlight></codeline>
<codeline lineno="13230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_ARROOW:</highlight></codeline>
<codeline lineno="13231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_DOT:</highlight></codeline>
<codeline lineno="13232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_DOT_QUESTION:</highlight></codeline>
<codeline lineno="13233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::NAME:</highlight></codeline>
<codeline lineno="13234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::DECIMAL_VALUE:</highlight></codeline>
<codeline lineno="13235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::EXPONENTIAL_VALUE:</highlight></codeline>
<codeline lineno="13236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::STRING_VALUE:<sp/>{</highlight></codeline>
<codeline lineno="13237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1565);</highlight></codeline>
<codeline lineno="13239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13240"><highlight class="normal"></highlight></codeline>
<codeline lineno="13241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="13242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>549755815938)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>68)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>68))<sp/>&amp;<sp/>4927078730368548867)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>136)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>136))<sp/>&amp;<sp/>30146587)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="13246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1564);</highlight></codeline>
<codeline lineno="13247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument_member();</highlight></codeline>
<codeline lineno="13248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13249"><highlight class="normal"></highlight></codeline>
<codeline lineno="13250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1567);</highlight></codeline>
<codeline lineno="13251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classification_test_operator();</highlight></codeline>
<codeline lineno="13252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1568);</highlight></codeline>
<codeline lineno="13253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_reference_member();</highlight></codeline>
<codeline lineno="13254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13256"><highlight class="normal"></highlight></codeline>
<codeline lineno="13257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_AS:<sp/>{</highlight></codeline>
<codeline lineno="13258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="13259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1570);</highlight></codeline>
<codeline lineno="13260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cast_operator();</highlight></codeline>
<codeline lineno="13261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1571);</highlight></codeline>
<codeline lineno="13262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_result_member();</highlight></codeline>
<codeline lineno="13263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13265"><highlight class="normal"></highlight></codeline>
<codeline lineno="13266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13269"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13272"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13273"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13274"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13276"><highlight class="normal"></highlight></codeline>
<codeline lineno="13277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13279"><highlight class="normal"></highlight></codeline>
<codeline lineno="13280"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Classification_test_operatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13281"><highlight class="normal"></highlight></codeline>
<codeline lineno="13282"><highlight class="normal">KerMLParser::Classification_test_operatorContext::Classification_test_operatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13283"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13285"><highlight class="normal"></highlight></codeline>
<codeline lineno="13286"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Classification_test_operatorContext::KEYWORD_ISTYPE()<sp/>{</highlight></codeline>
<codeline lineno="13287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ISTYPE,<sp/>0);</highlight></codeline>
<codeline lineno="13288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13289"><highlight class="normal"></highlight></codeline>
<codeline lineno="13290"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Classification_test_operatorContext::KEYWORD_HASTYPE()<sp/>{</highlight></codeline>
<codeline lineno="13291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_HASTYPE,<sp/>0);</highlight></codeline>
<codeline lineno="13292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13293"><highlight class="normal"></highlight></codeline>
<codeline lineno="13294"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Classification_test_operatorContext::SYMBOL_AT()<sp/>{</highlight></codeline>
<codeline lineno="13295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_AT,<sp/>0);</highlight></codeline>
<codeline lineno="13296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13297"><highlight class="normal"></highlight></codeline>
<codeline lineno="13298"><highlight class="normal"></highlight></codeline>
<codeline lineno="13299"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Classification_test_operatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleClassification_test_operator;</highlight></codeline>
<codeline lineno="13301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13302"><highlight class="normal"></highlight></codeline>
<codeline lineno="13303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Classification_test_operatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13306"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterClassification_test_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13308"><highlight class="normal"></highlight></codeline>
<codeline lineno="13309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Classification_test_operatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13312"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitClassification_test_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13314"><highlight class="normal"></highlight></codeline>
<codeline lineno="13315"><highlight class="normal">KerMLParser::Classification_test_operatorContext*<sp/>KerMLParser::classification_test_operator()<sp/>{</highlight></codeline>
<codeline lineno="13316"><highlight class="normal"><sp/><sp/><ref refid="dc/dea/class_ker_m_l_parser_1_1_classification__test__operator_context" kindref="compound">Classification_test_operatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/dea/class_ker_m_l_parser_1_1_classification__test__operator_context" kindref="compound">Classification_test_operatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13317"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>286,<sp/>KerMLParser::RuleClassification_test_operator);</highlight></codeline>
<codeline lineno="13318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13319"><highlight class="normal"></highlight></codeline>
<codeline lineno="13320"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13322"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13325"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13326"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13328"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13329"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1575);</highlight></codeline>
<codeline lineno="13330"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="13331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_HASTYPE</highlight></codeline>
<codeline lineno="13332"><highlight class="normal"></highlight></codeline>
<codeline lineno="13333"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_ISTYPE<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_AT))<sp/>{</highlight></codeline>
<codeline lineno="13334"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="13339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13340"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13343"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13344"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13345"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13347"><highlight class="normal"></highlight></codeline>
<codeline lineno="13348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13350"><highlight class="normal"></highlight></codeline>
<codeline lineno="13351"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Cast_operatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13352"><highlight class="normal"></highlight></codeline>
<codeline lineno="13353"><highlight class="normal">KerMLParser::Cast_operatorContext::Cast_operatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13354"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13356"><highlight class="normal"></highlight></codeline>
<codeline lineno="13357"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Cast_operatorContext::KEYWORD_AS()<sp/>{</highlight></codeline>
<codeline lineno="13358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_AS,<sp/>0);</highlight></codeline>
<codeline lineno="13359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13360"><highlight class="normal"></highlight></codeline>
<codeline lineno="13361"><highlight class="normal"></highlight></codeline>
<codeline lineno="13362"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Cast_operatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleCast_operator;</highlight></codeline>
<codeline lineno="13364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13365"><highlight class="normal"></highlight></codeline>
<codeline lineno="13366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Cast_operatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13369"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterCast_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13371"><highlight class="normal"></highlight></codeline>
<codeline lineno="13372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Cast_operatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13375"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitCast_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13377"><highlight class="normal"></highlight></codeline>
<codeline lineno="13378"><highlight class="normal">KerMLParser::Cast_operatorContext*<sp/>KerMLParser::cast_operator()<sp/>{</highlight></codeline>
<codeline lineno="13379"><highlight class="normal"><sp/><sp/><ref refid="d2/db7/class_ker_m_l_parser_1_1_cast__operator_context" kindref="compound">Cast_operatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/db7/class_ker_m_l_parser_1_1_cast__operator_context" kindref="compound">Cast_operatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13380"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>288,<sp/>KerMLParser::RuleCast_operator);</highlight></codeline>
<codeline lineno="13381"><highlight class="normal"></highlight></codeline>
<codeline lineno="13382"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13384"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13387"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13388"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13390"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13391"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1577);</highlight></codeline>
<codeline lineno="13392"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_AS);</highlight></codeline>
<codeline lineno="13393"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13396"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13397"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13398"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13400"><highlight class="normal"></highlight></codeline>
<codeline lineno="13401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13403"><highlight class="normal"></highlight></codeline>
<codeline lineno="13404"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metaclassification_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13405"><highlight class="normal"></highlight></codeline>
<codeline lineno="13406"><highlight class="normal">KerMLParser::Metaclassification_expressionContext::Metaclassification_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13407"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13409"><highlight class="normal"></highlight></codeline>
<codeline lineno="13410"><highlight class="normal"><ref refid="dc/d46/class_ker_m_l_parser_1_1_metadata__argument__member_context" kindref="compound">KerMLParser::Metadata_argument_memberContext</ref>*<sp/>KerMLParser::Metaclassification_expressionContext::metadata_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="13411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13413"><highlight class="normal"></highlight></codeline>
<codeline lineno="13414"><highlight class="normal">KerMLParser::Metadataclassification_test_operatorContext*<sp/>KerMLParser::Metaclassification_expressionContext::metadataclassification_test_operator()<sp/>{</highlight></codeline>
<codeline lineno="13415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadataclassification_test_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="13416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13417"><highlight class="normal"></highlight></codeline>
<codeline lineno="13418"><highlight class="normal">KerMLParser::Type_reference_memberContext*<sp/>KerMLParser::Metaclassification_expressionContext::type_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="13419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_reference_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13421"><highlight class="normal"></highlight></codeline>
<codeline lineno="13422"><highlight class="normal">KerMLParser::Meta_cast_operatorContext*<sp/>KerMLParser::Metaclassification_expressionContext::meta_cast_operator()<sp/>{</highlight></codeline>
<codeline lineno="13423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Meta_cast_operatorContext&gt;(0);</highlight></codeline>
<codeline lineno="13424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13425"><highlight class="normal"></highlight></codeline>
<codeline lineno="13426"><highlight class="normal">KerMLParser::Type_result_memberContext*<sp/>KerMLParser::Metaclassification_expressionContext::type_result_member()<sp/>{</highlight></codeline>
<codeline lineno="13427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_result_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="13428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13429"><highlight class="normal"></highlight></codeline>
<codeline lineno="13430"><highlight class="normal"></highlight></codeline>
<codeline lineno="13431"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metaclassification_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetaclassification_expression;</highlight></codeline>
<codeline lineno="13433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13434"><highlight class="normal"></highlight></codeline>
<codeline lineno="13435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metaclassification_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13438"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetaclassification_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13440"><highlight class="normal"></highlight></codeline>
<codeline lineno="13441"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metaclassification_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13444"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetaclassification_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13446"><highlight class="normal"></highlight></codeline>
<codeline lineno="13447"><highlight class="normal">KerMLParser::Metaclassification_expressionContext*<sp/>KerMLParser::metaclassification_expression()<sp/>{</highlight></codeline>
<codeline lineno="13448"><highlight class="normal"><sp/><sp/><ref refid="dc/d19/class_ker_m_l_parser_1_1_metaclassification__expression_context" kindref="compound">Metaclassification_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d19/class_ker_m_l_parser_1_1_metaclassification__expression_context" kindref="compound">Metaclassification_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13449"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>290,<sp/>KerMLParser::RuleMetaclassification_expression);</highlight></codeline>
<codeline lineno="13450"><highlight class="normal"></highlight></codeline>
<codeline lineno="13451"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13453"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13456"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13457"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13459"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1586);</highlight></codeline>
<codeline lineno="13460"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="13462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::NAME:<sp/>{</highlight></codeline>
<codeline lineno="13463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1579);</highlight></codeline>
<codeline lineno="13465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata_argument_member();</highlight></codeline>
<codeline lineno="13466"><highlight class="normal"></highlight></codeline>
<codeline lineno="13467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1580);</highlight></codeline>
<codeline lineno="13468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadataclassification_test_operator();</highlight></codeline>
<codeline lineno="13469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1581);</highlight></codeline>
<codeline lineno="13470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_reference_member();</highlight></codeline>
<codeline lineno="13471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13473"><highlight class="normal"></highlight></codeline>
<codeline lineno="13474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::T__0:<sp/>{</highlight></codeline>
<codeline lineno="13475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="13476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1583);</highlight></codeline>
<codeline lineno="13477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meta_cast_operator();</highlight></codeline>
<codeline lineno="13478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1584);</highlight></codeline>
<codeline lineno="13479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_result_member();</highlight></codeline>
<codeline lineno="13480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13482"><highlight class="normal"></highlight></codeline>
<codeline lineno="13483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13486"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13489"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13490"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13491"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13493"><highlight class="normal"></highlight></codeline>
<codeline lineno="13494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13496"><highlight class="normal"></highlight></codeline>
<codeline lineno="13497"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Argument_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13498"><highlight class="normal"></highlight></codeline>
<codeline lineno="13499"><highlight class="normal">KerMLParser::Argument_memberContext::Argument_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13500"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13502"><highlight class="normal"></highlight></codeline>
<codeline lineno="13503"><highlight class="normal"><ref refid="d6/d64/class_ker_m_l_parser_1_1_argument_context" kindref="compound">KerMLParser::ArgumentContext</ref>*<sp/>KerMLParser::Argument_memberContext::argument()<sp/>{</highlight></codeline>
<codeline lineno="13504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ArgumentContext&gt;(0);</highlight></codeline>
<codeline lineno="13505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13506"><highlight class="normal"></highlight></codeline>
<codeline lineno="13507"><highlight class="normal"></highlight></codeline>
<codeline lineno="13508"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Argument_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleArgument_member;</highlight></codeline>
<codeline lineno="13510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13511"><highlight class="normal"></highlight></codeline>
<codeline lineno="13512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13515"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterArgument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13517"><highlight class="normal"></highlight></codeline>
<codeline lineno="13518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13521"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitArgument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13523"><highlight class="normal"></highlight></codeline>
<codeline lineno="13524"><highlight class="normal">KerMLParser::Argument_memberContext*<sp/>KerMLParser::argument_member()<sp/>{</highlight></codeline>
<codeline lineno="13525"><highlight class="normal"><sp/><sp/><ref refid="da/d16/class_ker_m_l_parser_1_1_argument__member_context" kindref="compound">Argument_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d16/class_ker_m_l_parser_1_1_argument__member_context" kindref="compound">Argument_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13526"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>292,<sp/>KerMLParser::RuleArgument_member);</highlight></codeline>
<codeline lineno="13527"><highlight class="normal"></highlight></codeline>
<codeline lineno="13528"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13530"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13532"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13533"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13534"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13536"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13537"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1588);</highlight></codeline>
<codeline lineno="13538"><highlight class="normal"><sp/><sp/><sp/><sp/>argument();</highlight></codeline>
<codeline lineno="13539"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13542"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13543"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13544"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13546"><highlight class="normal"></highlight></codeline>
<codeline lineno="13547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13549"><highlight class="normal"></highlight></codeline>
<codeline lineno="13550"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>ArgumentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13551"><highlight class="normal"></highlight></codeline>
<codeline lineno="13552"><highlight class="normal">KerMLParser::ArgumentContext::ArgumentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13553"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13555"><highlight class="normal"></highlight></codeline>
<codeline lineno="13556"><highlight class="normal"><ref refid="dc/dc9/class_ker_m_l_parser_1_1_argument__value_context" kindref="compound">KerMLParser::Argument_valueContext</ref>*<sp/>KerMLParser::ArgumentContext::argument_value()<sp/>{</highlight></codeline>
<codeline lineno="13557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="13558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13559"><highlight class="normal"></highlight></codeline>
<codeline lineno="13560"><highlight class="normal"></highlight></codeline>
<codeline lineno="13561"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::ArgumentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleArgument;</highlight></codeline>
<codeline lineno="13563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13564"><highlight class="normal"></highlight></codeline>
<codeline lineno="13565"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ArgumentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13568"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterArgument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13570"><highlight class="normal"></highlight></codeline>
<codeline lineno="13571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::ArgumentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13574"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitArgument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13576"><highlight class="normal"></highlight></codeline>
<codeline lineno="13577"><highlight class="normal">KerMLParser::ArgumentContext*<sp/>KerMLParser::argument()<sp/>{</highlight></codeline>
<codeline lineno="13578"><highlight class="normal"><sp/><sp/><ref refid="d6/d64/class_ker_m_l_parser_1_1_argument_context" kindref="compound">ArgumentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d64/class_ker_m_l_parser_1_1_argument_context" kindref="compound">ArgumentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13579"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>294,<sp/>KerMLParser::RuleArgument);</highlight></codeline>
<codeline lineno="13580"><highlight class="normal"></highlight></codeline>
<codeline lineno="13581"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13583"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13585"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13586"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13587"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13589"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13590"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1590);</highlight></codeline>
<codeline lineno="13591"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_value();</highlight></codeline>
<codeline lineno="13592"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13595"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13596"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13597"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13599"><highlight class="normal"></highlight></codeline>
<codeline lineno="13600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13602"><highlight class="normal"></highlight></codeline>
<codeline lineno="13603"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Argument_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13604"><highlight class="normal"></highlight></codeline>
<codeline lineno="13605"><highlight class="normal">KerMLParser::Argument_valueContext::Argument_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13606"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13608"><highlight class="normal"></highlight></codeline>
<codeline lineno="13609"><highlight class="normal"><ref refid="de/d1b/class_ker_m_l_parser_1_1_eased__owned__expression_context" kindref="compound">KerMLParser::Eased_owned_expressionContext</ref>*<sp/>KerMLParser::Argument_valueContext::eased_owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="13610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Eased_owned_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="13611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13612"><highlight class="normal"></highlight></codeline>
<codeline lineno="13613"><highlight class="normal"></highlight></codeline>
<codeline lineno="13614"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Argument_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleArgument_value;</highlight></codeline>
<codeline lineno="13616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13617"><highlight class="normal"></highlight></codeline>
<codeline lineno="13618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13621"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterArgument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13623"><highlight class="normal"></highlight></codeline>
<codeline lineno="13624"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13627"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitArgument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13629"><highlight class="normal"></highlight></codeline>
<codeline lineno="13630"><highlight class="normal">KerMLParser::Argument_valueContext*<sp/>KerMLParser::argument_value()<sp/>{</highlight></codeline>
<codeline lineno="13631"><highlight class="normal"><sp/><sp/><ref refid="dc/dc9/class_ker_m_l_parser_1_1_argument__value_context" kindref="compound">Argument_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/dc9/class_ker_m_l_parser_1_1_argument__value_context" kindref="compound">Argument_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13632"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>296,<sp/>KerMLParser::RuleArgument_value);</highlight></codeline>
<codeline lineno="13633"><highlight class="normal"></highlight></codeline>
<codeline lineno="13634"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13636"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13638"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13639"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13640"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13642"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13643"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1592);</highlight></codeline>
<codeline lineno="13644"><highlight class="normal"><sp/><sp/><sp/><sp/>eased_owned_expression();</highlight></codeline>
<codeline lineno="13645"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13648"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13649"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13650"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13652"><highlight class="normal"></highlight></codeline>
<codeline lineno="13653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13655"><highlight class="normal"></highlight></codeline>
<codeline lineno="13656"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Argument_expression_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13657"><highlight class="normal"></highlight></codeline>
<codeline lineno="13658"><highlight class="normal">KerMLParser::Argument_expression_memberContext::Argument_expression_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13659"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13661"><highlight class="normal"></highlight></codeline>
<codeline lineno="13662"><highlight class="normal"><ref refid="df/d29/class_ker_m_l_parser_1_1_argument__expression_context" kindref="compound">KerMLParser::Argument_expressionContext</ref>*<sp/>KerMLParser::Argument_expression_memberContext::argument_expression()<sp/>{</highlight></codeline>
<codeline lineno="13663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="13664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13665"><highlight class="normal"></highlight></codeline>
<codeline lineno="13666"><highlight class="normal"></highlight></codeline>
<codeline lineno="13667"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expression_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleArgument_expression_member;</highlight></codeline>
<codeline lineno="13669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13670"><highlight class="normal"></highlight></codeline>
<codeline lineno="13671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expression_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13674"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterArgument_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13676"><highlight class="normal"></highlight></codeline>
<codeline lineno="13677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expression_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13680"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitArgument_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13682"><highlight class="normal"></highlight></codeline>
<codeline lineno="13683"><highlight class="normal">KerMLParser::Argument_expression_memberContext*<sp/>KerMLParser::argument_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="13684"><highlight class="normal"><sp/><sp/><ref refid="de/de9/class_ker_m_l_parser_1_1_argument__expression__member_context" kindref="compound">Argument_expression_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/de9/class_ker_m_l_parser_1_1_argument__expression__member_context" kindref="compound">Argument_expression_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13685"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>298,<sp/>KerMLParser::RuleArgument_expression_member);</highlight></codeline>
<codeline lineno="13686"><highlight class="normal"></highlight></codeline>
<codeline lineno="13687"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13689"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13692"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13693"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13695"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13696"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1594);</highlight></codeline>
<codeline lineno="13697"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_expression();</highlight></codeline>
<codeline lineno="13698"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13701"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13702"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13703"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13705"><highlight class="normal"></highlight></codeline>
<codeline lineno="13706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13708"><highlight class="normal"></highlight></codeline>
<codeline lineno="13709"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Argument_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13710"><highlight class="normal"></highlight></codeline>
<codeline lineno="13711"><highlight class="normal">KerMLParser::Argument_expressionContext::Argument_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13712"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13714"><highlight class="normal"></highlight></codeline>
<codeline lineno="13715"><highlight class="normal"><ref refid="d0/d0a/class_ker_m_l_parser_1_1_argument__expression__value_context" kindref="compound">KerMLParser::Argument_expression_valueContext</ref>*<sp/>KerMLParser::Argument_expressionContext::argument_expression_value()<sp/>{</highlight></codeline>
<codeline lineno="13716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_expression_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="13717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13718"><highlight class="normal"></highlight></codeline>
<codeline lineno="13719"><highlight class="normal"></highlight></codeline>
<codeline lineno="13720"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleArgument_expression;</highlight></codeline>
<codeline lineno="13722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13723"><highlight class="normal"></highlight></codeline>
<codeline lineno="13724"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13727"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterArgument_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13729"><highlight class="normal"></highlight></codeline>
<codeline lineno="13730"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13733"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitArgument_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13735"><highlight class="normal"></highlight></codeline>
<codeline lineno="13736"><highlight class="normal">KerMLParser::Argument_expressionContext*<sp/>KerMLParser::argument_expression()<sp/>{</highlight></codeline>
<codeline lineno="13737"><highlight class="normal"><sp/><sp/><ref refid="df/d29/class_ker_m_l_parser_1_1_argument__expression_context" kindref="compound">Argument_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d29/class_ker_m_l_parser_1_1_argument__expression_context" kindref="compound">Argument_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13738"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>300,<sp/>KerMLParser::RuleArgument_expression);</highlight></codeline>
<codeline lineno="13739"><highlight class="normal"></highlight></codeline>
<codeline lineno="13740"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13742"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13745"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13746"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13748"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13749"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1596);</highlight></codeline>
<codeline lineno="13750"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_expression_value();</highlight></codeline>
<codeline lineno="13751"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13754"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13755"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13756"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13758"><highlight class="normal"></highlight></codeline>
<codeline lineno="13759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13761"><highlight class="normal"></highlight></codeline>
<codeline lineno="13762"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Argument_expression_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13763"><highlight class="normal"></highlight></codeline>
<codeline lineno="13764"><highlight class="normal">KerMLParser::Argument_expression_valueContext::Argument_expression_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13765"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13767"><highlight class="normal"></highlight></codeline>
<codeline lineno="13768"><highlight class="normal"><ref refid="da/d6e/class_ker_m_l_parser_1_1_owned__expression__reference_context" kindref="compound">KerMLParser::Owned_expression_referenceContext</ref>*<sp/>KerMLParser::Argument_expression_valueContext::owned_expression_reference()<sp/>{</highlight></codeline>
<codeline lineno="13769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expression_referenceContext&gt;(0);</highlight></codeline>
<codeline lineno="13770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13771"><highlight class="normal"></highlight></codeline>
<codeline lineno="13772"><highlight class="normal"></highlight></codeline>
<codeline lineno="13773"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expression_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleArgument_expression_value;</highlight></codeline>
<codeline lineno="13775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13776"><highlight class="normal"></highlight></codeline>
<codeline lineno="13777"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expression_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13780"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterArgument_expression_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13782"><highlight class="normal"></highlight></codeline>
<codeline lineno="13783"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_expression_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13786"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitArgument_expression_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13788"><highlight class="normal"></highlight></codeline>
<codeline lineno="13789"><highlight class="normal">KerMLParser::Argument_expression_valueContext*<sp/>KerMLParser::argument_expression_value()<sp/>{</highlight></codeline>
<codeline lineno="13790"><highlight class="normal"><sp/><sp/><ref refid="d0/d0a/class_ker_m_l_parser_1_1_argument__expression__value_context" kindref="compound">Argument_expression_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/d0a/class_ker_m_l_parser_1_1_argument__expression__value_context" kindref="compound">Argument_expression_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13791"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>302,<sp/>KerMLParser::RuleArgument_expression_value);</highlight></codeline>
<codeline lineno="13792"><highlight class="normal"></highlight></codeline>
<codeline lineno="13793"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13795"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13797"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13798"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13799"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13801"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13802"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1598);</highlight></codeline>
<codeline lineno="13803"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression_reference();</highlight></codeline>
<codeline lineno="13804"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13807"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13808"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13809"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13811"><highlight class="normal"></highlight></codeline>
<codeline lineno="13812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13814"><highlight class="normal"></highlight></codeline>
<codeline lineno="13815"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_argument_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13816"><highlight class="normal"></highlight></codeline>
<codeline lineno="13817"><highlight class="normal">KerMLParser::Metadata_argument_memberContext::Metadata_argument_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13818"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13820"><highlight class="normal"></highlight></codeline>
<codeline lineno="13821"><highlight class="normal"><ref refid="dc/d26/class_ker_m_l_parser_1_1_metadata__argument_context" kindref="compound">KerMLParser::Metadata_argumentContext</ref>*<sp/>KerMLParser::Metadata_argument_memberContext::metadata_argument()<sp/>{</highlight></codeline>
<codeline lineno="13822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_argumentContext&gt;(0);</highlight></codeline>
<codeline lineno="13823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13824"><highlight class="normal"></highlight></codeline>
<codeline lineno="13825"><highlight class="normal"></highlight></codeline>
<codeline lineno="13826"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_argument_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_argument_member;</highlight></codeline>
<codeline lineno="13828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13829"><highlight class="normal"></highlight></codeline>
<codeline lineno="13830"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_argument_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13833"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13835"><highlight class="normal"></highlight></codeline>
<codeline lineno="13836"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_argument_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13839"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13841"><highlight class="normal"></highlight></codeline>
<codeline lineno="13842"><highlight class="normal">KerMLParser::Metadata_argument_memberContext*<sp/>KerMLParser::metadata_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="13843"><highlight class="normal"><sp/><sp/><ref refid="dc/d46/class_ker_m_l_parser_1_1_metadata__argument__member_context" kindref="compound">Metadata_argument_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d46/class_ker_m_l_parser_1_1_metadata__argument__member_context" kindref="compound">Metadata_argument_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13844"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>304,<sp/>KerMLParser::RuleMetadata_argument_member);</highlight></codeline>
<codeline lineno="13845"><highlight class="normal"></highlight></codeline>
<codeline lineno="13846"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13848"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13850"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13851"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13852"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13854"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13855"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1600);</highlight></codeline>
<codeline lineno="13856"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata_argument();</highlight></codeline>
<codeline lineno="13857"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13860"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13861"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13862"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13864"><highlight class="normal"></highlight></codeline>
<codeline lineno="13865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13867"><highlight class="normal"></highlight></codeline>
<codeline lineno="13868"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_argumentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13869"><highlight class="normal"></highlight></codeline>
<codeline lineno="13870"><highlight class="normal">KerMLParser::Metadata_argumentContext::Metadata_argumentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13871"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13873"><highlight class="normal"></highlight></codeline>
<codeline lineno="13874"><highlight class="normal"><ref refid="d4/d56/class_ker_m_l_parser_1_1_metadata__value_context" kindref="compound">KerMLParser::Metadata_valueContext</ref>*<sp/>KerMLParser::Metadata_argumentContext::metadata_value()<sp/>{</highlight></codeline>
<codeline lineno="13875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="13876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13877"><highlight class="normal"></highlight></codeline>
<codeline lineno="13878"><highlight class="normal"></highlight></codeline>
<codeline lineno="13879"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_argumentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_argument;</highlight></codeline>
<codeline lineno="13881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13882"><highlight class="normal"></highlight></codeline>
<codeline lineno="13883"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_argumentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13886"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13888"><highlight class="normal"></highlight></codeline>
<codeline lineno="13889"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_argumentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13892"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13894"><highlight class="normal"></highlight></codeline>
<codeline lineno="13895"><highlight class="normal">KerMLParser::Metadata_argumentContext*<sp/>KerMLParser::metadata_argument()<sp/>{</highlight></codeline>
<codeline lineno="13896"><highlight class="normal"><sp/><sp/><ref refid="dc/d26/class_ker_m_l_parser_1_1_metadata__argument_context" kindref="compound">Metadata_argumentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d26/class_ker_m_l_parser_1_1_metadata__argument_context" kindref="compound">Metadata_argumentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13897"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>306,<sp/>KerMLParser::RuleMetadata_argument);</highlight></codeline>
<codeline lineno="13898"><highlight class="normal"></highlight></codeline>
<codeline lineno="13899"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13901"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13903"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13904"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13905"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13907"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13908"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1602);</highlight></codeline>
<codeline lineno="13909"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata_value();</highlight></codeline>
<codeline lineno="13910"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13913"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13914"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13915"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13917"><highlight class="normal"></highlight></codeline>
<codeline lineno="13918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13920"><highlight class="normal"></highlight></codeline>
<codeline lineno="13921"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13922"><highlight class="normal"></highlight></codeline>
<codeline lineno="13923"><highlight class="normal">KerMLParser::Metadata_valueContext::Metadata_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13924"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13926"><highlight class="normal"></highlight></codeline>
<codeline lineno="13927"><highlight class="normal"><ref refid="d4/d4f/class_ker_m_l_parser_1_1_metadata__reference_context" kindref="compound">KerMLParser::Metadata_referenceContext</ref>*<sp/>KerMLParser::Metadata_valueContext::metadata_reference()<sp/>{</highlight></codeline>
<codeline lineno="13928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_referenceContext&gt;(0);</highlight></codeline>
<codeline lineno="13929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13930"><highlight class="normal"></highlight></codeline>
<codeline lineno="13931"><highlight class="normal"></highlight></codeline>
<codeline lineno="13932"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_value;</highlight></codeline>
<codeline lineno="13934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13935"><highlight class="normal"></highlight></codeline>
<codeline lineno="13936"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13939"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13941"><highlight class="normal"></highlight></codeline>
<codeline lineno="13942"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13945"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13947"><highlight class="normal"></highlight></codeline>
<codeline lineno="13948"><highlight class="normal">KerMLParser::Metadata_valueContext*<sp/>KerMLParser::metadata_value()<sp/>{</highlight></codeline>
<codeline lineno="13949"><highlight class="normal"><sp/><sp/><ref refid="d4/d56/class_ker_m_l_parser_1_1_metadata__value_context" kindref="compound">Metadata_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/d56/class_ker_m_l_parser_1_1_metadata__value_context" kindref="compound">Metadata_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="13950"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>308,<sp/>KerMLParser::RuleMetadata_value);</highlight></codeline>
<codeline lineno="13951"><highlight class="normal"></highlight></codeline>
<codeline lineno="13952"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="13954"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="13956"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13957"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="13958"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="13959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13960"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="13961"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1604);</highlight></codeline>
<codeline lineno="13962"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata_reference();</highlight></codeline>
<codeline lineno="13963"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13964"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="13966"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="13967"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="13968"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="13969"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13970"><highlight class="normal"></highlight></codeline>
<codeline lineno="13971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="13972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13973"><highlight class="normal"></highlight></codeline>
<codeline lineno="13974"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_referenceContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13975"><highlight class="normal"></highlight></codeline>
<codeline lineno="13976"><highlight class="normal">KerMLParser::Metadata_referenceContext::Metadata_referenceContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="13977"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="13978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13979"><highlight class="normal"></highlight></codeline>
<codeline lineno="13980"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Metadata_referenceContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="13981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="13982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13983"><highlight class="normal"></highlight></codeline>
<codeline lineno="13984"><highlight class="normal"></highlight></codeline>
<codeline lineno="13985"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_referenceContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_reference;</highlight></codeline>
<codeline lineno="13987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13988"><highlight class="normal"></highlight></codeline>
<codeline lineno="13989"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_referenceContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13992"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13994"><highlight class="normal"></highlight></codeline>
<codeline lineno="13995"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_referenceContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="13996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="13997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13998"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14000"><highlight class="normal"></highlight></codeline>
<codeline lineno="14001"><highlight class="normal">KerMLParser::Metadata_referenceContext*<sp/>KerMLParser::metadata_reference()<sp/>{</highlight></codeline>
<codeline lineno="14002"><highlight class="normal"><sp/><sp/><ref refid="d4/d4f/class_ker_m_l_parser_1_1_metadata__reference_context" kindref="compound">Metadata_referenceContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/d4f/class_ker_m_l_parser_1_1_metadata__reference_context" kindref="compound">Metadata_referenceContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14003"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>310,<sp/>KerMLParser::RuleMetadata_reference);</highlight></codeline>
<codeline lineno="14004"><highlight class="normal"></highlight></codeline>
<codeline lineno="14005"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14007"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14009"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14010"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14011"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14013"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14014"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1606);</highlight></codeline>
<codeline lineno="14015"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="14016"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14019"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14020"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14021"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14022"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14023"><highlight class="normal"></highlight></codeline>
<codeline lineno="14024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14026"><highlight class="normal"></highlight></codeline>
<codeline lineno="14027"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadataclassification_test_operatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14028"><highlight class="normal"></highlight></codeline>
<codeline lineno="14029"><highlight class="normal">KerMLParser::Metadataclassification_test_operatorContext::Metadataclassification_test_operatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14030"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14032"><highlight class="normal"></highlight></codeline>
<codeline lineno="14033"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadataclassification_test_operatorContext::SYMBOL_DOT()<sp/>{</highlight></codeline>
<codeline lineno="14034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT,<sp/>0);</highlight></codeline>
<codeline lineno="14035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14036"><highlight class="normal"></highlight></codeline>
<codeline lineno="14037"><highlight class="normal"></highlight></codeline>
<codeline lineno="14038"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadataclassification_test_operatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadataclassification_test_operator;</highlight></codeline>
<codeline lineno="14040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14041"><highlight class="normal"></highlight></codeline>
<codeline lineno="14042"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadataclassification_test_operatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14045"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadataclassification_test_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14047"><highlight class="normal"></highlight></codeline>
<codeline lineno="14048"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadataclassification_test_operatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14051"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadataclassification_test_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14053"><highlight class="normal"></highlight></codeline>
<codeline lineno="14054"><highlight class="normal">KerMLParser::Metadataclassification_test_operatorContext*<sp/>KerMLParser::metadataclassification_test_operator()<sp/>{</highlight></codeline>
<codeline lineno="14055"><highlight class="normal"><sp/><sp/><ref refid="dd/d9b/class_ker_m_l_parser_1_1_metadataclassification__test__operator_context" kindref="compound">Metadataclassification_test_operatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dd/d9b/class_ker_m_l_parser_1_1_metadataclassification__test__operator_context" kindref="compound">Metadataclassification_test_operatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14056"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>312,<sp/>KerMLParser::RuleMetadataclassification_test_operator);</highlight></codeline>
<codeline lineno="14057"><highlight class="normal"></highlight></codeline>
<codeline lineno="14058"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14060"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14062"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14063"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14064"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14066"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14067"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1608);</highlight></codeline>
<codeline lineno="14068"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="14069"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14072"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14073"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14074"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14076"><highlight class="normal"></highlight></codeline>
<codeline lineno="14077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14079"><highlight class="normal"></highlight></codeline>
<codeline lineno="14080"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Meta_cast_operatorContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14081"><highlight class="normal"></highlight></codeline>
<codeline lineno="14082"><highlight class="normal">KerMLParser::Meta_cast_operatorContext::Meta_cast_operatorContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14083"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14085"><highlight class="normal"></highlight></codeline>
<codeline lineno="14086"><highlight class="normal"></highlight></codeline>
<codeline lineno="14087"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Meta_cast_operatorContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMeta_cast_operator;</highlight></codeline>
<codeline lineno="14089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14090"><highlight class="normal"></highlight></codeline>
<codeline lineno="14091"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Meta_cast_operatorContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14094"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMeta_cast_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14096"><highlight class="normal"></highlight></codeline>
<codeline lineno="14097"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Meta_cast_operatorContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14100"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMeta_cast_operator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14102"><highlight class="normal"></highlight></codeline>
<codeline lineno="14103"><highlight class="normal">KerMLParser::Meta_cast_operatorContext*<sp/>KerMLParser::meta_cast_operator()<sp/>{</highlight></codeline>
<codeline lineno="14104"><highlight class="normal"><sp/><sp/><ref refid="da/d9b/class_ker_m_l_parser_1_1_meta__cast__operator_context" kindref="compound">Meta_cast_operatorContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d9b/class_ker_m_l_parser_1_1_meta__cast__operator_context" kindref="compound">Meta_cast_operatorContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14105"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>314,<sp/>KerMLParser::RuleMeta_cast_operator);</highlight></codeline>
<codeline lineno="14106"><highlight class="normal"></highlight></codeline>
<codeline lineno="14107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14109"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14112"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14113"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14115"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14116"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1610);</highlight></codeline>
<codeline lineno="14117"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::T__0);</highlight></codeline>
<codeline lineno="14118"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14121"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14122"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14123"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14125"><highlight class="normal"></highlight></codeline>
<codeline lineno="14126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14128"><highlight class="normal"></highlight></codeline>
<codeline lineno="14129"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Extend_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14130"><highlight class="normal"></highlight></codeline>
<codeline lineno="14131"><highlight class="normal">KerMLParser::Extend_expressionContext::Extend_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14132"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14134"><highlight class="normal"></highlight></codeline>
<codeline lineno="14135"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Extend_expressionContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="14136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="14137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14138"><highlight class="normal"></highlight></codeline>
<codeline lineno="14139"><highlight class="normal">KerMLParser::Type_reference_memberContext*<sp/>KerMLParser::Extend_expressionContext::type_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="14140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_reference_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="14141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14142"><highlight class="normal"></highlight></codeline>
<codeline lineno="14143"><highlight class="normal"></highlight></codeline>
<codeline lineno="14144"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Extend_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleExtend_expression;</highlight></codeline>
<codeline lineno="14146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14147"><highlight class="normal"></highlight></codeline>
<codeline lineno="14148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Extend_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14151"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterExtend_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14153"><highlight class="normal"></highlight></codeline>
<codeline lineno="14154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Extend_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14157"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitExtend_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14159"><highlight class="normal"></highlight></codeline>
<codeline lineno="14160"><highlight class="normal">KerMLParser::Extend_expressionContext*<sp/>KerMLParser::extend_expression()<sp/>{</highlight></codeline>
<codeline lineno="14161"><highlight class="normal"><sp/><sp/><ref refid="df/d61/class_ker_m_l_parser_1_1_extend__expression_context" kindref="compound">Extend_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d61/class_ker_m_l_parser_1_1_extend__expression_context" kindref="compound">Extend_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14162"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>316,<sp/>KerMLParser::RuleExtend_expression);</highlight></codeline>
<codeline lineno="14163"><highlight class="normal"></highlight></codeline>
<codeline lineno="14164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14166"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14169"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14170"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14172"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14173"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1612);</highlight></codeline>
<codeline lineno="14174"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="14175"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1613);</highlight></codeline>
<codeline lineno="14176"><highlight class="normal"><sp/><sp/><sp/><sp/>type_reference_member();</highlight></codeline>
<codeline lineno="14177"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14180"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14181"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14182"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14184"><highlight class="normal"></highlight></codeline>
<codeline lineno="14185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14187"><highlight class="normal"></highlight></codeline>
<codeline lineno="14188"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_reference_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14189"><highlight class="normal"></highlight></codeline>
<codeline lineno="14190"><highlight class="normal">KerMLParser::Type_reference_memberContext::Type_reference_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14191"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14193"><highlight class="normal"></highlight></codeline>
<codeline lineno="14194"><highlight class="normal"><ref refid="df/da6/class_ker_m_l_parser_1_1_type__reference_context" kindref="compound">KerMLParser::Type_referenceContext</ref>*<sp/>KerMLParser::Type_reference_memberContext::type_reference()<sp/>{</highlight></codeline>
<codeline lineno="14195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_referenceContext&gt;(0);</highlight></codeline>
<codeline lineno="14196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14197"><highlight class="normal"></highlight></codeline>
<codeline lineno="14198"><highlight class="normal"></highlight></codeline>
<codeline lineno="14199"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_reference_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_reference_member;</highlight></codeline>
<codeline lineno="14201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14202"><highlight class="normal"></highlight></codeline>
<codeline lineno="14203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_reference_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14206"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14208"><highlight class="normal"></highlight></codeline>
<codeline lineno="14209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_reference_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14212"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14214"><highlight class="normal"></highlight></codeline>
<codeline lineno="14215"><highlight class="normal">KerMLParser::Type_reference_memberContext*<sp/>KerMLParser::type_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="14216"><highlight class="normal"><sp/><sp/><ref refid="d3/d35/class_ker_m_l_parser_1_1_type__reference__member_context" kindref="compound">Type_reference_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d35/class_ker_m_l_parser_1_1_type__reference__member_context" kindref="compound">Type_reference_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14217"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>318,<sp/>KerMLParser::RuleType_reference_member);</highlight></codeline>
<codeline lineno="14218"><highlight class="normal"></highlight></codeline>
<codeline lineno="14219"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14221"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14224"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14225"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14227"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14228"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1615);</highlight></codeline>
<codeline lineno="14229"><highlight class="normal"><sp/><sp/><sp/><sp/>type_reference();</highlight></codeline>
<codeline lineno="14230"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14233"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14234"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14235"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14237"><highlight class="normal"></highlight></codeline>
<codeline lineno="14238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14240"><highlight class="normal"></highlight></codeline>
<codeline lineno="14241"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_result_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14242"><highlight class="normal"></highlight></codeline>
<codeline lineno="14243"><highlight class="normal">KerMLParser::Type_result_memberContext::Type_result_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14244"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14246"><highlight class="normal"></highlight></codeline>
<codeline lineno="14247"><highlight class="normal"><ref refid="df/da6/class_ker_m_l_parser_1_1_type__reference_context" kindref="compound">KerMLParser::Type_referenceContext</ref>*<sp/>KerMLParser::Type_result_memberContext::type_reference()<sp/>{</highlight></codeline>
<codeline lineno="14248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_referenceContext&gt;(0);</highlight></codeline>
<codeline lineno="14249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14250"><highlight class="normal"></highlight></codeline>
<codeline lineno="14251"><highlight class="normal"></highlight></codeline>
<codeline lineno="14252"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_result_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_result_member;</highlight></codeline>
<codeline lineno="14254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14255"><highlight class="normal"></highlight></codeline>
<codeline lineno="14256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_result_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14259"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_result_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14261"><highlight class="normal"></highlight></codeline>
<codeline lineno="14262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_result_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14265"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_result_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14267"><highlight class="normal"></highlight></codeline>
<codeline lineno="14268"><highlight class="normal">KerMLParser::Type_result_memberContext*<sp/>KerMLParser::type_result_member()<sp/>{</highlight></codeline>
<codeline lineno="14269"><highlight class="normal"><sp/><sp/><ref refid="d1/ddc/class_ker_m_l_parser_1_1_type__result__member_context" kindref="compound">Type_result_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/ddc/class_ker_m_l_parser_1_1_type__result__member_context" kindref="compound">Type_result_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14270"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>320,<sp/>KerMLParser::RuleType_result_member);</highlight></codeline>
<codeline lineno="14271"><highlight class="normal"></highlight></codeline>
<codeline lineno="14272"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14274"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14277"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14278"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14280"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14281"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1617);</highlight></codeline>
<codeline lineno="14282"><highlight class="normal"><sp/><sp/><sp/><sp/>type_reference();</highlight></codeline>
<codeline lineno="14283"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14286"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14287"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14288"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14290"><highlight class="normal"></highlight></codeline>
<codeline lineno="14291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14293"><highlight class="normal"></highlight></codeline>
<codeline lineno="14294"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Type_referenceContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14295"><highlight class="normal"></highlight></codeline>
<codeline lineno="14296"><highlight class="normal">KerMLParser::Type_referenceContext::Type_referenceContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14297"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14299"><highlight class="normal"></highlight></codeline>
<codeline lineno="14300"><highlight class="normal"><ref refid="d9/d0d/class_ker_m_l_parser_1_1_reference__typing_context" kindref="compound">KerMLParser::Reference_typingContext</ref>*<sp/>KerMLParser::Type_referenceContext::reference_typing()<sp/>{</highlight></codeline>
<codeline lineno="14301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Reference_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="14302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14303"><highlight class="normal"></highlight></codeline>
<codeline lineno="14304"><highlight class="normal"></highlight></codeline>
<codeline lineno="14305"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Type_referenceContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleType_reference;</highlight></codeline>
<codeline lineno="14307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14308"><highlight class="normal"></highlight></codeline>
<codeline lineno="14309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_referenceContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14312"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterType_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14314"><highlight class="normal"></highlight></codeline>
<codeline lineno="14315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Type_referenceContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14318"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitType_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14320"><highlight class="normal"></highlight></codeline>
<codeline lineno="14321"><highlight class="normal">KerMLParser::Type_referenceContext*<sp/>KerMLParser::type_reference()<sp/>{</highlight></codeline>
<codeline lineno="14322"><highlight class="normal"><sp/><sp/><ref refid="df/da6/class_ker_m_l_parser_1_1_type__reference_context" kindref="compound">Type_referenceContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/da6/class_ker_m_l_parser_1_1_type__reference_context" kindref="compound">Type_referenceContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14323"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>322,<sp/>KerMLParser::RuleType_reference);</highlight></codeline>
<codeline lineno="14324"><highlight class="normal"></highlight></codeline>
<codeline lineno="14325"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14327"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14330"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14331"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14333"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14334"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1619);</highlight></codeline>
<codeline lineno="14335"><highlight class="normal"><sp/><sp/><sp/><sp/>reference_typing();</highlight></codeline>
<codeline lineno="14336"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14339"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14340"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14341"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14343"><highlight class="normal"></highlight></codeline>
<codeline lineno="14344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14346"><highlight class="normal"></highlight></codeline>
<codeline lineno="14347"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Reference_typingContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14348"><highlight class="normal"></highlight></codeline>
<codeline lineno="14349"><highlight class="normal">KerMLParser::Reference_typingContext::Reference_typingContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14350"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14352"><highlight class="normal"></highlight></codeline>
<codeline lineno="14353"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Reference_typingContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="14354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="14355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14356"><highlight class="normal"></highlight></codeline>
<codeline lineno="14357"><highlight class="normal"></highlight></codeline>
<codeline lineno="14358"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Reference_typingContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleReference_typing;</highlight></codeline>
<codeline lineno="14360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14361"><highlight class="normal"></highlight></codeline>
<codeline lineno="14362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Reference_typingContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14365"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterReference_typing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14367"><highlight class="normal"></highlight></codeline>
<codeline lineno="14368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Reference_typingContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14371"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitReference_typing(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14373"><highlight class="normal"></highlight></codeline>
<codeline lineno="14374"><highlight class="normal">KerMLParser::Reference_typingContext*<sp/>KerMLParser::reference_typing()<sp/>{</highlight></codeline>
<codeline lineno="14375"><highlight class="normal"><sp/><sp/><ref refid="d9/d0d/class_ker_m_l_parser_1_1_reference__typing_context" kindref="compound">Reference_typingContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d0d/class_ker_m_l_parser_1_1_reference__typing_context" kindref="compound">Reference_typingContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14376"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>324,<sp/>KerMLParser::RuleReference_typing);</highlight></codeline>
<codeline lineno="14377"><highlight class="normal"></highlight></codeline>
<codeline lineno="14378"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14380"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14383"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14384"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14386"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14387"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1621);</highlight></codeline>
<codeline lineno="14388"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="14389"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14392"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14393"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14394"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14396"><highlight class="normal"></highlight></codeline>
<codeline lineno="14397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14399"><highlight class="normal"></highlight></codeline>
<codeline lineno="14400"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Primary_expressionsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14401"><highlight class="normal"></highlight></codeline>
<codeline lineno="14402"><highlight class="normal">KerMLParser::Primary_expressionsContext::Primary_expressionsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14403"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14405"><highlight class="normal"></highlight></codeline>
<codeline lineno="14406"><highlight class="normal">std::vector&lt;KerMLParser::Primary_expressionContext<sp/>*&gt;<sp/>KerMLParser::Primary_expressionsContext::primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="14407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Primary_expressionContext&gt;();</highlight></codeline>
<codeline lineno="14408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14409"><highlight class="normal"></highlight></codeline>
<codeline lineno="14410"><highlight class="normal">KerMLParser::Primary_expressionContext*<sp/>KerMLParser::Primary_expressionsContext::primary_expression(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="14411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_expressionContext&gt;(i);</highlight></codeline>
<codeline lineno="14412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14413"><highlight class="normal"></highlight></codeline>
<codeline lineno="14414"><highlight class="normal"></highlight></codeline>
<codeline lineno="14415"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Primary_expressionsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrimary_expressions;</highlight></codeline>
<codeline lineno="14417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14418"><highlight class="normal"></highlight></codeline>
<codeline lineno="14419"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_expressionsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14422"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrimary_expressions(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14424"><highlight class="normal"></highlight></codeline>
<codeline lineno="14425"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_expressionsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14428"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrimary_expressions(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14430"><highlight class="normal"></highlight></codeline>
<codeline lineno="14431"><highlight class="normal">KerMLParser::Primary_expressionsContext*<sp/>KerMLParser::primary_expressions()<sp/>{</highlight></codeline>
<codeline lineno="14432"><highlight class="normal"><sp/><sp/><ref refid="d2/d88/class_ker_m_l_parser_1_1_primary__expressions_context" kindref="compound">Primary_expressionsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d88/class_ker_m_l_parser_1_1_primary__expressions_context" kindref="compound">Primary_expressionsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14433"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>326,<sp/>KerMLParser::RulePrimary_expressions);</highlight></codeline>
<codeline lineno="14434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14435"><highlight class="normal"></highlight></codeline>
<codeline lineno="14436"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14438"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14441"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14442"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14444"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14445"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1624);<sp/></highlight></codeline>
<codeline lineno="14446"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14447"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="14448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1623);</highlight></codeline>
<codeline lineno="14450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>primary_expression();</highlight></codeline>
<codeline lineno="14451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1626);<sp/></highlight></codeline>
<codeline lineno="14452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="14454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(((((_la<sp/>-<sp/>39)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="14455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>39))<sp/>&amp;<sp/>288230377225453569)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>115)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="14456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>115))<sp/>&amp;<sp/>63221968963713)<sp/>!=<sp/>0));</highlight></codeline>
<codeline lineno="14457"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14460"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14461"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14462"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14464"><highlight class="normal"></highlight></codeline>
<codeline lineno="14465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14467"><highlight class="normal"></highlight></codeline>
<codeline lineno="14468"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Primary_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14469"><highlight class="normal"></highlight></codeline>
<codeline lineno="14470"><highlight class="normal">KerMLParser::Primary_expressionContext::Primary_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14471"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14473"><highlight class="normal"></highlight></codeline>
<codeline lineno="14474"><highlight class="normal"><ref refid="d7/d8d/class_ker_m_l_parser_1_1_feature__chain__expression_context" kindref="compound">KerMLParser::Feature_chain_expressionContext</ref>*<sp/>KerMLParser::Primary_expressionContext::feature_chain_expression()<sp/>{</highlight></codeline>
<codeline lineno="14475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chain_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14477"><highlight class="normal"></highlight></codeline>
<codeline lineno="14478"><highlight class="normal">KerMLParser::Non_feature_chain_primary_expressionContext*<sp/>KerMLParser::Primary_expressionContext::non_feature_chain_primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="14479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Non_feature_chain_primary_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14481"><highlight class="normal"></highlight></codeline>
<codeline lineno="14482"><highlight class="normal"></highlight></codeline>
<codeline lineno="14483"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Primary_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrimary_expression;</highlight></codeline>
<codeline lineno="14485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14486"><highlight class="normal"></highlight></codeline>
<codeline lineno="14487"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14490"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrimary_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14492"><highlight class="normal"></highlight></codeline>
<codeline lineno="14493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14496"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrimary_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14498"><highlight class="normal"></highlight></codeline>
<codeline lineno="14499"><highlight class="normal">KerMLParser::Primary_expressionContext*<sp/>KerMLParser::primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="14500"><highlight class="normal"><sp/><sp/><ref refid="d6/df3/class_ker_m_l_parser_1_1_primary__expression_context" kindref="compound">Primary_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/df3/class_ker_m_l_parser_1_1_primary__expression_context" kindref="compound">Primary_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14501"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>328,<sp/>KerMLParser::RulePrimary_expression);</highlight></codeline>
<codeline lineno="14502"><highlight class="normal"></highlight></codeline>
<codeline lineno="14503"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14505"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14508"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14509"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14511"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1630);</highlight></codeline>
<codeline lineno="14512"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>165,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="14514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="14515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1628);</highlight></codeline>
<codeline lineno="14517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_chain_expression();</highlight></codeline>
<codeline lineno="14518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14520"><highlight class="normal"></highlight></codeline>
<codeline lineno="14521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="14522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="14523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1629);</highlight></codeline>
<codeline lineno="14524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>non_feature_chain_primary_expression();</highlight></codeline>
<codeline lineno="14525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14527"><highlight class="normal"></highlight></codeline>
<codeline lineno="14528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14531"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14534"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14535"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14536"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14538"><highlight class="normal"></highlight></codeline>
<codeline lineno="14539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14541"><highlight class="normal"></highlight></codeline>
<codeline lineno="14542"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Primary_argument_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14543"><highlight class="normal"></highlight></codeline>
<codeline lineno="14544"><highlight class="normal">KerMLParser::Primary_argument_valueContext::Primary_argument_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14545"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14547"><highlight class="normal"></highlight></codeline>
<codeline lineno="14548"><highlight class="normal"><ref refid="d6/df3/class_ker_m_l_parser_1_1_primary__expression_context" kindref="compound">KerMLParser::Primary_expressionContext</ref>*<sp/>KerMLParser::Primary_argument_valueContext::primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="14549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14551"><highlight class="normal"></highlight></codeline>
<codeline lineno="14552"><highlight class="normal"></highlight></codeline>
<codeline lineno="14553"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argument_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrimary_argument_value;</highlight></codeline>
<codeline lineno="14555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14556"><highlight class="normal"></highlight></codeline>
<codeline lineno="14557"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argument_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14560"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrimary_argument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14562"><highlight class="normal"></highlight></codeline>
<codeline lineno="14563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argument_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14566"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrimary_argument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14568"><highlight class="normal"></highlight></codeline>
<codeline lineno="14569"><highlight class="normal">KerMLParser::Primary_argument_valueContext*<sp/>KerMLParser::primary_argument_value()<sp/>{</highlight></codeline>
<codeline lineno="14570"><highlight class="normal"><sp/><sp/><ref refid="db/db2/class_ker_m_l_parser_1_1_primary__argument__value_context" kindref="compound">Primary_argument_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/db2/class_ker_m_l_parser_1_1_primary__argument__value_context" kindref="compound">Primary_argument_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14571"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>330,<sp/>KerMLParser::RulePrimary_argument_value);</highlight></codeline>
<codeline lineno="14572"><highlight class="normal"></highlight></codeline>
<codeline lineno="14573"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14575"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14578"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14579"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14581"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14582"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1632);</highlight></codeline>
<codeline lineno="14583"><highlight class="normal"><sp/><sp/><sp/><sp/>primary_expression();</highlight></codeline>
<codeline lineno="14584"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14587"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14588"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14589"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14591"><highlight class="normal"></highlight></codeline>
<codeline lineno="14592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14594"><highlight class="normal"></highlight></codeline>
<codeline lineno="14595"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Primary_argumentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14596"><highlight class="normal"></highlight></codeline>
<codeline lineno="14597"><highlight class="normal">KerMLParser::Primary_argumentContext::Primary_argumentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14598"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14600"><highlight class="normal"></highlight></codeline>
<codeline lineno="14601"><highlight class="normal"><ref refid="db/db2/class_ker_m_l_parser_1_1_primary__argument__value_context" kindref="compound">KerMLParser::Primary_argument_valueContext</ref>*<sp/>KerMLParser::Primary_argumentContext::primary_argument_value()<sp/>{</highlight></codeline>
<codeline lineno="14602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_argument_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="14603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14604"><highlight class="normal"></highlight></codeline>
<codeline lineno="14605"><highlight class="normal"></highlight></codeline>
<codeline lineno="14606"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argumentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrimary_argument;</highlight></codeline>
<codeline lineno="14608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14609"><highlight class="normal"></highlight></codeline>
<codeline lineno="14610"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argumentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14613"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrimary_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14615"><highlight class="normal"></highlight></codeline>
<codeline lineno="14616"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argumentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14619"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrimary_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14621"><highlight class="normal"></highlight></codeline>
<codeline lineno="14622"><highlight class="normal">KerMLParser::Primary_argumentContext*<sp/>KerMLParser::primary_argument()<sp/>{</highlight></codeline>
<codeline lineno="14623"><highlight class="normal"><sp/><sp/><ref refid="db/d5d/class_ker_m_l_parser_1_1_primary__argument_context" kindref="compound">Primary_argumentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d5d/class_ker_m_l_parser_1_1_primary__argument_context" kindref="compound">Primary_argumentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14624"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>332,<sp/>KerMLParser::RulePrimary_argument);</highlight></codeline>
<codeline lineno="14625"><highlight class="normal"></highlight></codeline>
<codeline lineno="14626"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14628"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14630"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14631"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14632"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14634"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14635"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1634);</highlight></codeline>
<codeline lineno="14636"><highlight class="normal"><sp/><sp/><sp/><sp/>primary_argument_value();</highlight></codeline>
<codeline lineno="14637"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14640"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14641"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14642"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14644"><highlight class="normal"></highlight></codeline>
<codeline lineno="14645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14647"><highlight class="normal"></highlight></codeline>
<codeline lineno="14648"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Primary_argument_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14649"><highlight class="normal"></highlight></codeline>
<codeline lineno="14650"><highlight class="normal">KerMLParser::Primary_argument_memberContext::Primary_argument_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14651"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14653"><highlight class="normal"></highlight></codeline>
<codeline lineno="14654"><highlight class="normal"><ref refid="db/d5d/class_ker_m_l_parser_1_1_primary__argument_context" kindref="compound">KerMLParser::Primary_argumentContext</ref>*<sp/>KerMLParser::Primary_argument_memberContext::primary_argument()<sp/>{</highlight></codeline>
<codeline lineno="14655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_argumentContext&gt;(0);</highlight></codeline>
<codeline lineno="14656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14657"><highlight class="normal"></highlight></codeline>
<codeline lineno="14658"><highlight class="normal"></highlight></codeline>
<codeline lineno="14659"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argument_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrimary_argument_member;</highlight></codeline>
<codeline lineno="14661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14662"><highlight class="normal"></highlight></codeline>
<codeline lineno="14663"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argument_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14666"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrimary_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14668"><highlight class="normal"></highlight></codeline>
<codeline lineno="14669"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Primary_argument_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14672"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrimary_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14674"><highlight class="normal"></highlight></codeline>
<codeline lineno="14675"><highlight class="normal">KerMLParser::Primary_argument_memberContext*<sp/>KerMLParser::primary_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="14676"><highlight class="normal"><sp/><sp/><ref refid="dc/dfa/class_ker_m_l_parser_1_1_primary__argument__member_context" kindref="compound">Primary_argument_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/dfa/class_ker_m_l_parser_1_1_primary__argument__member_context" kindref="compound">Primary_argument_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14677"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>334,<sp/>KerMLParser::RulePrimary_argument_member);</highlight></codeline>
<codeline lineno="14678"><highlight class="normal"></highlight></codeline>
<codeline lineno="14679"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14681"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14684"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14685"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14687"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14688"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1636);</highlight></codeline>
<codeline lineno="14689"><highlight class="normal"><sp/><sp/><sp/><sp/>primary_argument();</highlight></codeline>
<codeline lineno="14690"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14693"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14694"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14695"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14697"><highlight class="normal"></highlight></codeline>
<codeline lineno="14698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14700"><highlight class="normal"></highlight></codeline>
<codeline lineno="14701"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Non_feature_chain_primary_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14702"><highlight class="normal"></highlight></codeline>
<codeline lineno="14703"><highlight class="normal">KerMLParser::Non_feature_chain_primary_expressionContext::Non_feature_chain_primary_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14704"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14706"><highlight class="normal"></highlight></codeline>
<codeline lineno="14707"><highlight class="normal"><ref refid="d8/d0b/class_ker_m_l_parser_1_1_bracket__expression_context" kindref="compound">KerMLParser::Bracket_expressionContext</ref>*<sp/>KerMLParser::Non_feature_chain_primary_expressionContext::bracket_expression()<sp/>{</highlight></codeline>
<codeline lineno="14708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Bracket_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14710"><highlight class="normal"></highlight></codeline>
<codeline lineno="14711"><highlight class="normal">KerMLParser::Index_expressionContext*<sp/>KerMLParser::Non_feature_chain_primary_expressionContext::index_expression()<sp/>{</highlight></codeline>
<codeline lineno="14712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Index_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14714"><highlight class="normal"></highlight></codeline>
<codeline lineno="14715"><highlight class="normal">KerMLParser::Sequence_expressionContext*<sp/>KerMLParser::Non_feature_chain_primary_expressionContext::sequence_expression()<sp/>{</highlight></codeline>
<codeline lineno="14716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Sequence_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14718"><highlight class="normal"></highlight></codeline>
<codeline lineno="14719"><highlight class="normal">KerMLParser::Select_expressionContext*<sp/>KerMLParser::Non_feature_chain_primary_expressionContext::select_expression()<sp/>{</highlight></codeline>
<codeline lineno="14720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Select_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14722"><highlight class="normal"></highlight></codeline>
<codeline lineno="14723"><highlight class="normal">KerMLParser::Collect_expressionContext*<sp/>KerMLParser::Non_feature_chain_primary_expressionContext::collect_expression()<sp/>{</highlight></codeline>
<codeline lineno="14724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Collect_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14726"><highlight class="normal"></highlight></codeline>
<codeline lineno="14727"><highlight class="normal">KerMLParser::Function_operation_expressionContext*<sp/>KerMLParser::Non_feature_chain_primary_expressionContext::function_operation_expression()<sp/>{</highlight></codeline>
<codeline lineno="14728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_operation_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14730"><highlight class="normal"></highlight></codeline>
<codeline lineno="14731"><highlight class="normal">KerMLParser::Base_expressionContext*<sp/>KerMLParser::Non_feature_chain_primary_expressionContext::base_expression()<sp/>{</highlight></codeline>
<codeline lineno="14732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Base_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14734"><highlight class="normal"></highlight></codeline>
<codeline lineno="14735"><highlight class="normal"></highlight></codeline>
<codeline lineno="14736"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNon_feature_chain_primary_expression;</highlight></codeline>
<codeline lineno="14738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14739"><highlight class="normal"></highlight></codeline>
<codeline lineno="14740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14743"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNon_feature_chain_primary_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14745"><highlight class="normal"></highlight></codeline>
<codeline lineno="14746"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14749"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNon_feature_chain_primary_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14751"><highlight class="normal"></highlight></codeline>
<codeline lineno="14752"><highlight class="normal">KerMLParser::Non_feature_chain_primary_expressionContext*<sp/>KerMLParser::non_feature_chain_primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="14753"><highlight class="normal"><sp/><sp/><ref refid="db/d75/class_ker_m_l_parser_1_1_non__feature__chain__primary__expression_context" kindref="compound">Non_feature_chain_primary_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d75/class_ker_m_l_parser_1_1_non__feature__chain__primary__expression_context" kindref="compound">Non_feature_chain_primary_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14754"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>336,<sp/>KerMLParser::RuleNon_feature_chain_primary_expression);</highlight></codeline>
<codeline lineno="14755"><highlight class="normal"></highlight></codeline>
<codeline lineno="14756"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14758"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14761"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14762"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14764"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1645);</highlight></codeline>
<codeline lineno="14765"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>166,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="14767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="14768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1638);</highlight></codeline>
<codeline lineno="14770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bracket_expression();</highlight></codeline>
<codeline lineno="14771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14773"><highlight class="normal"></highlight></codeline>
<codeline lineno="14774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="14775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="14776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1639);</highlight></codeline>
<codeline lineno="14777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index_expression();</highlight></codeline>
<codeline lineno="14778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14780"><highlight class="normal"></highlight></codeline>
<codeline lineno="14781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="14782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="14783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1640);</highlight></codeline>
<codeline lineno="14784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sequence_expression();</highlight></codeline>
<codeline lineno="14785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14787"><highlight class="normal"></highlight></codeline>
<codeline lineno="14788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="14789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="14790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1641);</highlight></codeline>
<codeline lineno="14791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>select_expression();</highlight></codeline>
<codeline lineno="14792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14794"><highlight class="normal"></highlight></codeline>
<codeline lineno="14795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{</highlight></codeline>
<codeline lineno="14796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>5);</highlight></codeline>
<codeline lineno="14797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1642);</highlight></codeline>
<codeline lineno="14798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>collect_expression();</highlight></codeline>
<codeline lineno="14799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14801"><highlight class="normal"></highlight></codeline>
<codeline lineno="14802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{</highlight></codeline>
<codeline lineno="14803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>6);</highlight></codeline>
<codeline lineno="14804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1643);</highlight></codeline>
<codeline lineno="14805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>function_operation_expression();</highlight></codeline>
<codeline lineno="14806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14808"><highlight class="normal"></highlight></codeline>
<codeline lineno="14809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{</highlight></codeline>
<codeline lineno="14810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>7);</highlight></codeline>
<codeline lineno="14811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1644);</highlight></codeline>
<codeline lineno="14812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base_expression();</highlight></codeline>
<codeline lineno="14813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14815"><highlight class="normal"></highlight></codeline>
<codeline lineno="14816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14819"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14822"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14823"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14824"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14825"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14826"><highlight class="normal"></highlight></codeline>
<codeline lineno="14827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14829"><highlight class="normal"></highlight></codeline>
<codeline lineno="14830"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Non_feature_chain_primary_argument_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14831"><highlight class="normal"></highlight></codeline>
<codeline lineno="14832"><highlight class="normal">KerMLParser::Non_feature_chain_primary_argument_valueContext::Non_feature_chain_primary_argument_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14833"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14835"><highlight class="normal"></highlight></codeline>
<codeline lineno="14836"><highlight class="normal"><ref refid="db/d75/class_ker_m_l_parser_1_1_non__feature__chain__primary__expression_context" kindref="compound">KerMLParser::Non_feature_chain_primary_expressionContext</ref>*<sp/>KerMLParser::Non_feature_chain_primary_argument_valueContext::non_feature_chain_primary_expression()<sp/>{</highlight></codeline>
<codeline lineno="14837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Non_feature_chain_primary_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="14838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14839"><highlight class="normal"></highlight></codeline>
<codeline lineno="14840"><highlight class="normal"></highlight></codeline>
<codeline lineno="14841"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argument_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNon_feature_chain_primary_argument_value;</highlight></codeline>
<codeline lineno="14843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14844"><highlight class="normal"></highlight></codeline>
<codeline lineno="14845"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argument_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14848"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNon_feature_chain_primary_argument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14850"><highlight class="normal"></highlight></codeline>
<codeline lineno="14851"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argument_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14854"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNon_feature_chain_primary_argument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14856"><highlight class="normal"></highlight></codeline>
<codeline lineno="14857"><highlight class="normal">KerMLParser::Non_feature_chain_primary_argument_valueContext*<sp/>KerMLParser::non_feature_chain_primary_argument_value()<sp/>{</highlight></codeline>
<codeline lineno="14858"><highlight class="normal"><sp/><sp/><ref refid="dc/d26/class_ker_m_l_parser_1_1_non__feature__chain__primary__argument__value_context" kindref="compound">Non_feature_chain_primary_argument_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d26/class_ker_m_l_parser_1_1_non__feature__chain__primary__argument__value_context" kindref="compound">Non_feature_chain_primary_argument_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14859"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>338,<sp/>KerMLParser::RuleNon_feature_chain_primary_argument_value);</highlight></codeline>
<codeline lineno="14860"><highlight class="normal"></highlight></codeline>
<codeline lineno="14861"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14863"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14865"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14866"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14867"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14869"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14870"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1647);</highlight></codeline>
<codeline lineno="14871"><highlight class="normal"><sp/><sp/><sp/><sp/>non_feature_chain_primary_expression();</highlight></codeline>
<codeline lineno="14872"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14873"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14875"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14876"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14877"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14879"><highlight class="normal"></highlight></codeline>
<codeline lineno="14880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14882"><highlight class="normal"></highlight></codeline>
<codeline lineno="14883"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Non_feature_chain_primary_argumentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14884"><highlight class="normal"></highlight></codeline>
<codeline lineno="14885"><highlight class="normal">KerMLParser::Non_feature_chain_primary_argumentContext::Non_feature_chain_primary_argumentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14886"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14888"><highlight class="normal"></highlight></codeline>
<codeline lineno="14889"><highlight class="normal"><ref refid="db/d5d/class_ker_m_l_parser_1_1_primary__argument_context" kindref="compound">KerMLParser::Primary_argumentContext</ref>*<sp/>KerMLParser::Non_feature_chain_primary_argumentContext::primary_argument()<sp/>{</highlight></codeline>
<codeline lineno="14890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_argumentContext&gt;(0);</highlight></codeline>
<codeline lineno="14891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14892"><highlight class="normal"></highlight></codeline>
<codeline lineno="14893"><highlight class="normal"></highlight></codeline>
<codeline lineno="14894"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argumentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNon_feature_chain_primary_argument;</highlight></codeline>
<codeline lineno="14896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14897"><highlight class="normal"></highlight></codeline>
<codeline lineno="14898"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argumentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14901"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNon_feature_chain_primary_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14903"><highlight class="normal"></highlight></codeline>
<codeline lineno="14904"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argumentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14907"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNon_feature_chain_primary_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14909"><highlight class="normal"></highlight></codeline>
<codeline lineno="14910"><highlight class="normal">KerMLParser::Non_feature_chain_primary_argumentContext*<sp/>KerMLParser::non_feature_chain_primary_argument()<sp/>{</highlight></codeline>
<codeline lineno="14911"><highlight class="normal"><sp/><sp/><ref refid="d5/dae/class_ker_m_l_parser_1_1_non__feature__chain__primary__argument_context" kindref="compound">Non_feature_chain_primary_argumentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/dae/class_ker_m_l_parser_1_1_non__feature__chain__primary__argument_context" kindref="compound">Non_feature_chain_primary_argumentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14912"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>340,<sp/>KerMLParser::RuleNon_feature_chain_primary_argument);</highlight></codeline>
<codeline lineno="14913"><highlight class="normal"></highlight></codeline>
<codeline lineno="14914"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14916"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14918"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14919"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14920"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14922"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14923"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1649);</highlight></codeline>
<codeline lineno="14924"><highlight class="normal"><sp/><sp/><sp/><sp/>primary_argument();</highlight></codeline>
<codeline lineno="14925"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14926"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14928"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14929"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14930"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14932"><highlight class="normal"></highlight></codeline>
<codeline lineno="14933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14935"><highlight class="normal"></highlight></codeline>
<codeline lineno="14936"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Non_feature_chain_primary_argument_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14937"><highlight class="normal"></highlight></codeline>
<codeline lineno="14938"><highlight class="normal">KerMLParser::Non_feature_chain_primary_argument_memberContext::Non_feature_chain_primary_argument_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14939"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14941"><highlight class="normal"></highlight></codeline>
<codeline lineno="14942"><highlight class="normal"><ref refid="db/d5d/class_ker_m_l_parser_1_1_primary__argument_context" kindref="compound">KerMLParser::Primary_argumentContext</ref>*<sp/>KerMLParser::Non_feature_chain_primary_argument_memberContext::primary_argument()<sp/>{</highlight></codeline>
<codeline lineno="14943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Primary_argumentContext&gt;(0);</highlight></codeline>
<codeline lineno="14944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14945"><highlight class="normal"></highlight></codeline>
<codeline lineno="14946"><highlight class="normal"></highlight></codeline>
<codeline lineno="14947"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argument_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNon_feature_chain_primary_argument_member;</highlight></codeline>
<codeline lineno="14949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14950"><highlight class="normal"></highlight></codeline>
<codeline lineno="14951"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argument_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14954"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNon_feature_chain_primary_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14956"><highlight class="normal"></highlight></codeline>
<codeline lineno="14957"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Non_feature_chain_primary_argument_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="14958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="14959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14960"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNon_feature_chain_primary_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14962"><highlight class="normal"></highlight></codeline>
<codeline lineno="14963"><highlight class="normal">KerMLParser::Non_feature_chain_primary_argument_memberContext*<sp/>KerMLParser::non_feature_chain_primary_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="14964"><highlight class="normal"><sp/><sp/><ref refid="da/d5f/class_ker_m_l_parser_1_1_non__feature__chain__primary__argument__member_context" kindref="compound">Non_feature_chain_primary_argument_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d5f/class_ker_m_l_parser_1_1_non__feature__chain__primary__argument__member_context" kindref="compound">Non_feature_chain_primary_argument_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="14965"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>342,<sp/>KerMLParser::RuleNon_feature_chain_primary_argument_member);</highlight></codeline>
<codeline lineno="14966"><highlight class="normal"></highlight></codeline>
<codeline lineno="14967"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="14969"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="14971"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14972"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="14973"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="14974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14975"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="14976"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1651);</highlight></codeline>
<codeline lineno="14977"><highlight class="normal"><sp/><sp/><sp/><sp/>primary_argument();</highlight></codeline>
<codeline lineno="14978"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14979"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="14981"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="14982"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="14983"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="14984"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14985"><highlight class="normal"></highlight></codeline>
<codeline lineno="14986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="14987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14988"><highlight class="normal"></highlight></codeline>
<codeline lineno="14989"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Bracket_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14990"><highlight class="normal"></highlight></codeline>
<codeline lineno="14991"><highlight class="normal">KerMLParser::Bracket_expressionContext::Bracket_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="14992"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="14993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14994"><highlight class="normal"></highlight></codeline>
<codeline lineno="14995"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Bracket_expressionContext::SYMBOL_SQUARE_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="14996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="14997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14998"><highlight class="normal"></highlight></codeline>
<codeline lineno="14999"><highlight class="normal">KerMLParser::Sequence_expression_list_memberContext*<sp/>KerMLParser::Bracket_expressionContext::sequence_expression_list_member()<sp/>{</highlight></codeline>
<codeline lineno="15000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Sequence_expression_list_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15002"><highlight class="normal"></highlight></codeline>
<codeline lineno="15003"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Bracket_expressionContext::SYMBOL_SQUARE_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="15004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SQUARE_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="15005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15006"><highlight class="normal"></highlight></codeline>
<codeline lineno="15007"><highlight class="normal"></highlight></codeline>
<codeline lineno="15008"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Bracket_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBracket_expression;</highlight></codeline>
<codeline lineno="15010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15011"><highlight class="normal"></highlight></codeline>
<codeline lineno="15012"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Bracket_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15015"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBracket_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15017"><highlight class="normal"></highlight></codeline>
<codeline lineno="15018"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Bracket_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15021"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBracket_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15023"><highlight class="normal"></highlight></codeline>
<codeline lineno="15024"><highlight class="normal">KerMLParser::Bracket_expressionContext*<sp/>KerMLParser::bracket_expression()<sp/>{</highlight></codeline>
<codeline lineno="15025"><highlight class="normal"><sp/><sp/><ref refid="d8/d0b/class_ker_m_l_parser_1_1_bracket__expression_context" kindref="compound">Bracket_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d0b/class_ker_m_l_parser_1_1_bracket__expression_context" kindref="compound">Bracket_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15026"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>344,<sp/>KerMLParser::RuleBracket_expression);</highlight></codeline>
<codeline lineno="15027"><highlight class="normal"></highlight></codeline>
<codeline lineno="15028"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15030"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15033"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15034"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15036"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15037"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1653);</highlight></codeline>
<codeline lineno="15038"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="15039"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1654);</highlight></codeline>
<codeline lineno="15040"><highlight class="normal"><sp/><sp/><sp/><sp/>sequence_expression_list_member();</highlight></codeline>
<codeline lineno="15041"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1655);</highlight></codeline>
<codeline lineno="15042"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SQUARE_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="15043"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15044"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15046"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15047"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15048"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15049"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15050"><highlight class="normal"></highlight></codeline>
<codeline lineno="15051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15053"><highlight class="normal"></highlight></codeline>
<codeline lineno="15054"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Index_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15055"><highlight class="normal"></highlight></codeline>
<codeline lineno="15056"><highlight class="normal">KerMLParser::Index_expressionContext::Index_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15057"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15059"><highlight class="normal"></highlight></codeline>
<codeline lineno="15060"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Index_expressionContext::SYMBOL_HASHTAG()<sp/>{</highlight></codeline>
<codeline lineno="15061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_HASHTAG,<sp/>0);</highlight></codeline>
<codeline lineno="15062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15063"><highlight class="normal"></highlight></codeline>
<codeline lineno="15064"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Index_expressionContext::SYMBOL_ROUND_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="15065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="15066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15067"><highlight class="normal"></highlight></codeline>
<codeline lineno="15068"><highlight class="normal">KerMLParser::Sequence_expression_list_memberContext*<sp/>KerMLParser::Index_expressionContext::sequence_expression_list_member()<sp/>{</highlight></codeline>
<codeline lineno="15069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Sequence_expression_list_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15071"><highlight class="normal"></highlight></codeline>
<codeline lineno="15072"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Index_expressionContext::SYMBOL_ROUND_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="15073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="15074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15075"><highlight class="normal"></highlight></codeline>
<codeline lineno="15076"><highlight class="normal"></highlight></codeline>
<codeline lineno="15077"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Index_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleIndex_expression;</highlight></codeline>
<codeline lineno="15079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15080"><highlight class="normal"></highlight></codeline>
<codeline lineno="15081"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Index_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15084"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterIndex_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15086"><highlight class="normal"></highlight></codeline>
<codeline lineno="15087"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Index_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15090"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitIndex_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15092"><highlight class="normal"></highlight></codeline>
<codeline lineno="15093"><highlight class="normal">KerMLParser::Index_expressionContext*<sp/>KerMLParser::index_expression()<sp/>{</highlight></codeline>
<codeline lineno="15094"><highlight class="normal"><sp/><sp/><ref refid="dc/d9b/class_ker_m_l_parser_1_1_index__expression_context" kindref="compound">Index_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d9b/class_ker_m_l_parser_1_1_index__expression_context" kindref="compound">Index_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15095"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>346,<sp/>KerMLParser::RuleIndex_expression);</highlight></codeline>
<codeline lineno="15096"><highlight class="normal"></highlight></codeline>
<codeline lineno="15097"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15099"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15102"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15103"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15105"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15106"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1657);</highlight></codeline>
<codeline lineno="15107"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_HASHTAG);</highlight></codeline>
<codeline lineno="15108"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1658);</highlight></codeline>
<codeline lineno="15109"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="15110"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1659);</highlight></codeline>
<codeline lineno="15111"><highlight class="normal"><sp/><sp/><sp/><sp/>sequence_expression_list_member();</highlight></codeline>
<codeline lineno="15112"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1660);</highlight></codeline>
<codeline lineno="15113"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="15114"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15117"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15118"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15119"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15121"><highlight class="normal"></highlight></codeline>
<codeline lineno="15122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15124"><highlight class="normal"></highlight></codeline>
<codeline lineno="15125"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Sequence_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15126"><highlight class="normal"></highlight></codeline>
<codeline lineno="15127"><highlight class="normal">KerMLParser::Sequence_expressionContext::Sequence_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15128"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15130"><highlight class="normal"></highlight></codeline>
<codeline lineno="15131"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Sequence_expressionContext::SYMBOL_ROUND_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="15132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="15133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15134"><highlight class="normal"></highlight></codeline>
<codeline lineno="15135"><highlight class="normal">KerMLParser::Sequence_expression_listContext*<sp/>KerMLParser::Sequence_expressionContext::sequence_expression_list()<sp/>{</highlight></codeline>
<codeline lineno="15136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Sequence_expression_listContext&gt;(0);</highlight></codeline>
<codeline lineno="15137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15138"><highlight class="normal"></highlight></codeline>
<codeline lineno="15139"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Sequence_expressionContext::SYMBOL_ROUND_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="15140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="15141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15142"><highlight class="normal"></highlight></codeline>
<codeline lineno="15143"><highlight class="normal"></highlight></codeline>
<codeline lineno="15144"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSequence_expression;</highlight></codeline>
<codeline lineno="15146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15147"><highlight class="normal"></highlight></codeline>
<codeline lineno="15148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15151"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSequence_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15153"><highlight class="normal"></highlight></codeline>
<codeline lineno="15154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15157"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSequence_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15159"><highlight class="normal"></highlight></codeline>
<codeline lineno="15160"><highlight class="normal">KerMLParser::Sequence_expressionContext*<sp/>KerMLParser::sequence_expression()<sp/>{</highlight></codeline>
<codeline lineno="15161"><highlight class="normal"><sp/><sp/><ref refid="da/dd0/class_ker_m_l_parser_1_1_sequence__expression_context" kindref="compound">Sequence_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/dd0/class_ker_m_l_parser_1_1_sequence__expression_context" kindref="compound">Sequence_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15162"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>348,<sp/>KerMLParser::RuleSequence_expression);</highlight></codeline>
<codeline lineno="15163"><highlight class="normal"></highlight></codeline>
<codeline lineno="15164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15166"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15169"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15170"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15172"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15173"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1662);</highlight></codeline>
<codeline lineno="15174"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="15175"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1663);</highlight></codeline>
<codeline lineno="15176"><highlight class="normal"><sp/><sp/><sp/><sp/>sequence_expression_list();</highlight></codeline>
<codeline lineno="15177"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1664);</highlight></codeline>
<codeline lineno="15178"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="15179"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15182"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15183"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15184"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15186"><highlight class="normal"></highlight></codeline>
<codeline lineno="15187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15189"><highlight class="normal"></highlight></codeline>
<codeline lineno="15190"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Sequence_expression_listContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15191"><highlight class="normal"></highlight></codeline>
<codeline lineno="15192"><highlight class="normal">KerMLParser::Sequence_expression_listContext::Sequence_expression_listContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15193"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15195"><highlight class="normal"></highlight></codeline>
<codeline lineno="15196"><highlight class="normal"><ref refid="d9/d44/class_ker_m_l_parser_1_1_owned__expressions_context" kindref="compound">KerMLParser::Owned_expressionsContext</ref>*<sp/>KerMLParser::Sequence_expression_listContext::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="15197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionsContext&gt;(0);</highlight></codeline>
<codeline lineno="15198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15199"><highlight class="normal"></highlight></codeline>
<codeline lineno="15200"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Sequence_expression_listContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="15201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>0);</highlight></codeline>
<codeline lineno="15202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15203"><highlight class="normal"></highlight></codeline>
<codeline lineno="15204"><highlight class="normal">KerMLParser::Sequence_operator_expressionContext*<sp/>KerMLParser::Sequence_expression_listContext::sequence_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="15205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Sequence_operator_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="15206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15207"><highlight class="normal"></highlight></codeline>
<codeline lineno="15208"><highlight class="normal"></highlight></codeline>
<codeline lineno="15209"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expression_listContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSequence_expression_list;</highlight></codeline>
<codeline lineno="15211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15212"><highlight class="normal"></highlight></codeline>
<codeline lineno="15213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expression_listContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15216"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSequence_expression_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15218"><highlight class="normal"></highlight></codeline>
<codeline lineno="15219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expression_listContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15222"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSequence_expression_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15224"><highlight class="normal"></highlight></codeline>
<codeline lineno="15225"><highlight class="normal">KerMLParser::Sequence_expression_listContext*<sp/>KerMLParser::sequence_expression_list()<sp/>{</highlight></codeline>
<codeline lineno="15226"><highlight class="normal"><sp/><sp/><ref refid="de/db1/class_ker_m_l_parser_1_1_sequence__expression__list_context" kindref="compound">Sequence_expression_listContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/db1/class_ker_m_l_parser_1_1_sequence__expression__list_context" kindref="compound">Sequence_expression_listContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15227"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>350,<sp/>KerMLParser::RuleSequence_expression_list);</highlight></codeline>
<codeline lineno="15228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15229"><highlight class="normal"></highlight></codeline>
<codeline lineno="15230"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15232"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15235"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15236"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15238"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1671);</highlight></codeline>
<codeline lineno="15239"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>168,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="15241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="15242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1666);</highlight></codeline>
<codeline lineno="15244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_expressions();</highlight></codeline>
<codeline lineno="15245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1668);</highlight></codeline>
<codeline lineno="15246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15247"><highlight class="normal"></highlight></codeline>
<codeline lineno="15248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="15249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="15250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1667);</highlight></codeline>
<codeline lineno="15251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="15252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15255"><highlight class="normal"></highlight></codeline>
<codeline lineno="15256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="15257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="15258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1670);</highlight></codeline>
<codeline lineno="15259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sequence_operator_expression();</highlight></codeline>
<codeline lineno="15260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15262"><highlight class="normal"></highlight></codeline>
<codeline lineno="15263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15266"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15269"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15270"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15271"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15273"><highlight class="normal"></highlight></codeline>
<codeline lineno="15274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15276"><highlight class="normal"></highlight></codeline>
<codeline lineno="15277"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Sequence_operator_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15278"><highlight class="normal"></highlight></codeline>
<codeline lineno="15279"><highlight class="normal">KerMLParser::Sequence_operator_expressionContext::Sequence_operator_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15280"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15282"><highlight class="normal"></highlight></codeline>
<codeline lineno="15283"><highlight class="normal"><ref refid="d9/da0/class_ker_m_l_parser_1_1_owned__expression__member_context" kindref="compound">KerMLParser::Owned_expression_memberContext</ref>*<sp/>KerMLParser::Sequence_operator_expressionContext::owned_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="15284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expression_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15286"><highlight class="normal"></highlight></codeline>
<codeline lineno="15287"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Sequence_operator_expressionContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="15288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>0);</highlight></codeline>
<codeline lineno="15289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15290"><highlight class="normal"></highlight></codeline>
<codeline lineno="15291"><highlight class="normal">KerMLParser::Sequence_expression_list_memberContext*<sp/>KerMLParser::Sequence_operator_expressionContext::sequence_expression_list_member()<sp/>{</highlight></codeline>
<codeline lineno="15292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Sequence_expression_list_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15294"><highlight class="normal"></highlight></codeline>
<codeline lineno="15295"><highlight class="normal"></highlight></codeline>
<codeline lineno="15296"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_operator_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSequence_operator_expression;</highlight></codeline>
<codeline lineno="15298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15299"><highlight class="normal"></highlight></codeline>
<codeline lineno="15300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_operator_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15303"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSequence_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15305"><highlight class="normal"></highlight></codeline>
<codeline lineno="15306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_operator_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15309"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSequence_operator_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15311"><highlight class="normal"></highlight></codeline>
<codeline lineno="15312"><highlight class="normal">KerMLParser::Sequence_operator_expressionContext*<sp/>KerMLParser::sequence_operator_expression()<sp/>{</highlight></codeline>
<codeline lineno="15313"><highlight class="normal"><sp/><sp/><ref refid="d1/dfb/class_ker_m_l_parser_1_1_sequence__operator__expression_context" kindref="compound">Sequence_operator_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/dfb/class_ker_m_l_parser_1_1_sequence__operator__expression_context" kindref="compound">Sequence_operator_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15314"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>352,<sp/>KerMLParser::RuleSequence_operator_expression);</highlight></codeline>
<codeline lineno="15315"><highlight class="normal"></highlight></codeline>
<codeline lineno="15316"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15318"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15321"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15322"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15324"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15325"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1673);</highlight></codeline>
<codeline lineno="15326"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression_member();</highlight></codeline>
<codeline lineno="15327"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1674);</highlight></codeline>
<codeline lineno="15328"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="15329"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1675);</highlight></codeline>
<codeline lineno="15330"><highlight class="normal"><sp/><sp/><sp/><sp/>sequence_expression_list_member();</highlight></codeline>
<codeline lineno="15331"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15334"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15335"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15336"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15338"><highlight class="normal"></highlight></codeline>
<codeline lineno="15339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15341"><highlight class="normal"></highlight></codeline>
<codeline lineno="15342"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Sequence_expression_list_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15343"><highlight class="normal"></highlight></codeline>
<codeline lineno="15344"><highlight class="normal">KerMLParser::Sequence_expression_list_memberContext::Sequence_expression_list_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15345"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15347"><highlight class="normal"></highlight></codeline>
<codeline lineno="15348"><highlight class="normal"><ref refid="de/db1/class_ker_m_l_parser_1_1_sequence__expression__list_context" kindref="compound">KerMLParser::Sequence_expression_listContext</ref>*<sp/>KerMLParser::Sequence_expression_list_memberContext::sequence_expression_list()<sp/>{</highlight></codeline>
<codeline lineno="15349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Sequence_expression_listContext&gt;(0);</highlight></codeline>
<codeline lineno="15350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15351"><highlight class="normal"></highlight></codeline>
<codeline lineno="15352"><highlight class="normal"></highlight></codeline>
<codeline lineno="15353"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expression_list_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSequence_expression_list_member;</highlight></codeline>
<codeline lineno="15355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15356"><highlight class="normal"></highlight></codeline>
<codeline lineno="15357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expression_list_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15360"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSequence_expression_list_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15362"><highlight class="normal"></highlight></codeline>
<codeline lineno="15363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Sequence_expression_list_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15366"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSequence_expression_list_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15368"><highlight class="normal"></highlight></codeline>
<codeline lineno="15369"><highlight class="normal">KerMLParser::Sequence_expression_list_memberContext*<sp/>KerMLParser::sequence_expression_list_member()<sp/>{</highlight></codeline>
<codeline lineno="15370"><highlight class="normal"><sp/><sp/><ref refid="d3/df7/class_ker_m_l_parser_1_1_sequence__expression__list__member_context" kindref="compound">Sequence_expression_list_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/df7/class_ker_m_l_parser_1_1_sequence__expression__list__member_context" kindref="compound">Sequence_expression_list_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15371"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>354,<sp/>KerMLParser::RuleSequence_expression_list_member);</highlight></codeline>
<codeline lineno="15372"><highlight class="normal"></highlight></codeline>
<codeline lineno="15373"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15375"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15378"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15379"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15381"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15382"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1677);</highlight></codeline>
<codeline lineno="15383"><highlight class="normal"><sp/><sp/><sp/><sp/>sequence_expression_list();</highlight></codeline>
<codeline lineno="15384"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15387"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15388"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15389"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15391"><highlight class="normal"></highlight></codeline>
<codeline lineno="15392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15394"><highlight class="normal"></highlight></codeline>
<codeline lineno="15395"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_chain_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15396"><highlight class="normal"></highlight></codeline>
<codeline lineno="15397"><highlight class="normal">KerMLParser::Feature_chain_expressionContext::Feature_chain_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15398"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15400"><highlight class="normal"></highlight></codeline>
<codeline lineno="15401"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_chain_expressionContext::SYMBOL_DOT()<sp/>{</highlight></codeline>
<codeline lineno="15402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT,<sp/>0);</highlight></codeline>
<codeline lineno="15403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15404"><highlight class="normal"></highlight></codeline>
<codeline lineno="15405"><highlight class="normal">KerMLParser::Feature_chain_memberContext*<sp/>KerMLParser::Feature_chain_expressionContext::feature_chain_member()<sp/>{</highlight></codeline>
<codeline lineno="15406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chain_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15408"><highlight class="normal"></highlight></codeline>
<codeline lineno="15409"><highlight class="normal"></highlight></codeline>
<codeline lineno="15410"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chain_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_chain_expression;</highlight></codeline>
<codeline lineno="15412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15413"><highlight class="normal"></highlight></codeline>
<codeline lineno="15414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chain_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15417"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_chain_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15419"><highlight class="normal"></highlight></codeline>
<codeline lineno="15420"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chain_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15423"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_chain_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15425"><highlight class="normal"></highlight></codeline>
<codeline lineno="15426"><highlight class="normal">KerMLParser::Feature_chain_expressionContext*<sp/>KerMLParser::feature_chain_expression()<sp/>{</highlight></codeline>
<codeline lineno="15427"><highlight class="normal"><sp/><sp/><ref refid="d7/d8d/class_ker_m_l_parser_1_1_feature__chain__expression_context" kindref="compound">Feature_chain_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/d8d/class_ker_m_l_parser_1_1_feature__chain__expression_context" kindref="compound">Feature_chain_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15428"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>356,<sp/>KerMLParser::RuleFeature_chain_expression);</highlight></codeline>
<codeline lineno="15429"><highlight class="normal"></highlight></codeline>
<codeline lineno="15430"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15432"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15435"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15436"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15438"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15439"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1679);</highlight></codeline>
<codeline lineno="15440"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="15441"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1680);</highlight></codeline>
<codeline lineno="15442"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_chain_member();</highlight></codeline>
<codeline lineno="15443"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15446"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15447"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15448"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15450"><highlight class="normal"></highlight></codeline>
<codeline lineno="15451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15453"><highlight class="normal"></highlight></codeline>
<codeline lineno="15454"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Collect_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15455"><highlight class="normal"></highlight></codeline>
<codeline lineno="15456"><highlight class="normal">KerMLParser::Collect_expressionContext::Collect_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15457"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15459"><highlight class="normal"></highlight></codeline>
<codeline lineno="15460"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Collect_expressionContext::SYMBOL_DOT()<sp/>{</highlight></codeline>
<codeline lineno="15461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT,<sp/>0);</highlight></codeline>
<codeline lineno="15462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15463"><highlight class="normal"></highlight></codeline>
<codeline lineno="15464"><highlight class="normal">KerMLParser::Body_expression_memberContext*<sp/>KerMLParser::Collect_expressionContext::body_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="15465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_expression_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15467"><highlight class="normal"></highlight></codeline>
<codeline lineno="15468"><highlight class="normal"></highlight></codeline>
<codeline lineno="15469"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Collect_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleCollect_expression;</highlight></codeline>
<codeline lineno="15471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15472"><highlight class="normal"></highlight></codeline>
<codeline lineno="15473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Collect_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15476"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterCollect_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15478"><highlight class="normal"></highlight></codeline>
<codeline lineno="15479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Collect_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15482"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitCollect_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15484"><highlight class="normal"></highlight></codeline>
<codeline lineno="15485"><highlight class="normal">KerMLParser::Collect_expressionContext*<sp/>KerMLParser::collect_expression()<sp/>{</highlight></codeline>
<codeline lineno="15486"><highlight class="normal"><sp/><sp/><ref refid="d1/d89/class_ker_m_l_parser_1_1_collect__expression_context" kindref="compound">Collect_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d1/d89/class_ker_m_l_parser_1_1_collect__expression_context" kindref="compound">Collect_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15487"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>358,<sp/>KerMLParser::RuleCollect_expression);</highlight></codeline>
<codeline lineno="15488"><highlight class="normal"></highlight></codeline>
<codeline lineno="15489"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15491"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15494"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15495"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15497"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15498"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1682);</highlight></codeline>
<codeline lineno="15499"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="15500"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1683);</highlight></codeline>
<codeline lineno="15501"><highlight class="normal"><sp/><sp/><sp/><sp/>body_expression_member();</highlight></codeline>
<codeline lineno="15502"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15505"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15506"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15507"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15509"><highlight class="normal"></highlight></codeline>
<codeline lineno="15510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15512"><highlight class="normal"></highlight></codeline>
<codeline lineno="15513"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Select_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15514"><highlight class="normal"></highlight></codeline>
<codeline lineno="15515"><highlight class="normal">KerMLParser::Select_expressionContext::Select_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15516"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15518"><highlight class="normal"></highlight></codeline>
<codeline lineno="15519"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Select_expressionContext::SYMBOL_DOT_QUESTION()<sp/>{</highlight></codeline>
<codeline lineno="15520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT_QUESTION,<sp/>0);</highlight></codeline>
<codeline lineno="15521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15522"><highlight class="normal"></highlight></codeline>
<codeline lineno="15523"><highlight class="normal">KerMLParser::Body_expression_memberContext*<sp/>KerMLParser::Select_expressionContext::body_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="15524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_expression_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15526"><highlight class="normal"></highlight></codeline>
<codeline lineno="15527"><highlight class="normal"></highlight></codeline>
<codeline lineno="15528"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Select_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSelect_expression;</highlight></codeline>
<codeline lineno="15530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15531"><highlight class="normal"></highlight></codeline>
<codeline lineno="15532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Select_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15535"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSelect_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15537"><highlight class="normal"></highlight></codeline>
<codeline lineno="15538"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Select_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15541"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSelect_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15543"><highlight class="normal"></highlight></codeline>
<codeline lineno="15544"><highlight class="normal">KerMLParser::Select_expressionContext*<sp/>KerMLParser::select_expression()<sp/>{</highlight></codeline>
<codeline lineno="15545"><highlight class="normal"><sp/><sp/><ref refid="d9/d9c/class_ker_m_l_parser_1_1_select__expression_context" kindref="compound">Select_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d9c/class_ker_m_l_parser_1_1_select__expression_context" kindref="compound">Select_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15546"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>360,<sp/>KerMLParser::RuleSelect_expression);</highlight></codeline>
<codeline lineno="15547"><highlight class="normal"></highlight></codeline>
<codeline lineno="15548"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15550"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15553"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15554"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15556"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15557"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1685);</highlight></codeline>
<codeline lineno="15558"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT_QUESTION);</highlight></codeline>
<codeline lineno="15559"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1686);</highlight></codeline>
<codeline lineno="15560"><highlight class="normal"><sp/><sp/><sp/><sp/>body_expression_member();</highlight></codeline>
<codeline lineno="15561"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15564"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15565"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15566"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15568"><highlight class="normal"></highlight></codeline>
<codeline lineno="15569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15571"><highlight class="normal"></highlight></codeline>
<codeline lineno="15572"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_operation_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15573"><highlight class="normal"></highlight></codeline>
<codeline lineno="15574"><highlight class="normal">KerMLParser::Function_operation_expressionContext::Function_operation_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15575"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15577"><highlight class="normal"></highlight></codeline>
<codeline lineno="15578"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Function_operation_expressionContext::SYMBOL_ARROOW()<sp/>{</highlight></codeline>
<codeline lineno="15579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ARROOW,<sp/>0);</highlight></codeline>
<codeline lineno="15580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15581"><highlight class="normal"></highlight></codeline>
<codeline lineno="15582"><highlight class="normal">KerMLParser::Reference_typingContext*<sp/>KerMLParser::Function_operation_expressionContext::reference_typing()<sp/>{</highlight></codeline>
<codeline lineno="15583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Reference_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="15584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15585"><highlight class="normal"></highlight></codeline>
<codeline lineno="15586"><highlight class="normal">KerMLParser::Body_argument_memberContext*<sp/>KerMLParser::Function_operation_expressionContext::body_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="15587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15589"><highlight class="normal"></highlight></codeline>
<codeline lineno="15590"><highlight class="normal">KerMLParser::Function_reference_argument_memberContext*<sp/>KerMLParser::Function_operation_expressionContext::function_reference_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="15591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_reference_argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15593"><highlight class="normal"></highlight></codeline>
<codeline lineno="15594"><highlight class="normal">KerMLParser::Argument_expressionContext*<sp/>KerMLParser::Function_operation_expressionContext::argument_expression()<sp/>{</highlight></codeline>
<codeline lineno="15595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="15596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15597"><highlight class="normal"></highlight></codeline>
<codeline lineno="15598"><highlight class="normal"></highlight></codeline>
<codeline lineno="15599"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_operation_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_operation_expression;</highlight></codeline>
<codeline lineno="15601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15602"><highlight class="normal"></highlight></codeline>
<codeline lineno="15603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_operation_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15606"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_operation_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15608"><highlight class="normal"></highlight></codeline>
<codeline lineno="15609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_operation_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15612"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_operation_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15614"><highlight class="normal"></highlight></codeline>
<codeline lineno="15615"><highlight class="normal">KerMLParser::Function_operation_expressionContext*<sp/>KerMLParser::function_operation_expression()<sp/>{</highlight></codeline>
<codeline lineno="15616"><highlight class="normal"><sp/><sp/><ref refid="d6/d05/class_ker_m_l_parser_1_1_function__operation__expression_context" kindref="compound">Function_operation_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d05/class_ker_m_l_parser_1_1_function__operation__expression_context" kindref="compound">Function_operation_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15617"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>362,<sp/>KerMLParser::RuleFunction_operation_expression);</highlight></codeline>
<codeline lineno="15618"><highlight class="normal"></highlight></codeline>
<codeline lineno="15619"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15621"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15624"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15625"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15627"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15628"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1688);</highlight></codeline>
<codeline lineno="15629"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ARROOW);</highlight></codeline>
<codeline lineno="15630"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1689);</highlight></codeline>
<codeline lineno="15631"><highlight class="normal"><sp/><sp/><sp/><sp/>reference_typing();</highlight></codeline>
<codeline lineno="15632"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1693);</highlight></codeline>
<codeline lineno="15633"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>169,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="15635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="15636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1690);</highlight></codeline>
<codeline lineno="15637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>body_argument_member();</highlight></codeline>
<codeline lineno="15638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15640"><highlight class="normal"></highlight></codeline>
<codeline lineno="15641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="15642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1691);</highlight></codeline>
<codeline lineno="15643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>function_reference_argument_member();</highlight></codeline>
<codeline lineno="15644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15646"><highlight class="normal"></highlight></codeline>
<codeline lineno="15647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="15648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1692);</highlight></codeline>
<codeline lineno="15649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argument_expression();</highlight></codeline>
<codeline lineno="15650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15652"><highlight class="normal"></highlight></codeline>
<codeline lineno="15653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15656"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15659"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15660"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15661"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15663"><highlight class="normal"></highlight></codeline>
<codeline lineno="15664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15666"><highlight class="normal"></highlight></codeline>
<codeline lineno="15667"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Body_argument_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15668"><highlight class="normal"></highlight></codeline>
<codeline lineno="15669"><highlight class="normal">KerMLParser::Body_argument_memberContext::Body_argument_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15670"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15672"><highlight class="normal"></highlight></codeline>
<codeline lineno="15673"><highlight class="normal"><ref refid="d5/d23/class_ker_m_l_parser_1_1_body__argument_context" kindref="compound">KerMLParser::Body_argumentContext</ref>*<sp/>KerMLParser::Body_argument_memberContext::body_argument()<sp/>{</highlight></codeline>
<codeline lineno="15674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_argumentContext&gt;(0);</highlight></codeline>
<codeline lineno="15675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15676"><highlight class="normal"></highlight></codeline>
<codeline lineno="15677"><highlight class="normal"></highlight></codeline>
<codeline lineno="15678"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Body_argument_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBody_argument_member;</highlight></codeline>
<codeline lineno="15680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15681"><highlight class="normal"></highlight></codeline>
<codeline lineno="15682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_argument_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15685"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBody_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15687"><highlight class="normal"></highlight></codeline>
<codeline lineno="15688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_argument_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15691"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBody_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15693"><highlight class="normal"></highlight></codeline>
<codeline lineno="15694"><highlight class="normal">KerMLParser::Body_argument_memberContext*<sp/>KerMLParser::body_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="15695"><highlight class="normal"><sp/><sp/><ref refid="d6/dcb/class_ker_m_l_parser_1_1_body__argument__member_context" kindref="compound">Body_argument_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/dcb/class_ker_m_l_parser_1_1_body__argument__member_context" kindref="compound">Body_argument_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15696"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>364,<sp/>KerMLParser::RuleBody_argument_member);</highlight></codeline>
<codeline lineno="15697"><highlight class="normal"></highlight></codeline>
<codeline lineno="15698"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15700"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15702"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15703"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15704"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15706"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15707"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1695);</highlight></codeline>
<codeline lineno="15708"><highlight class="normal"><sp/><sp/><sp/><sp/>body_argument();</highlight></codeline>
<codeline lineno="15709"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15712"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15713"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15714"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15716"><highlight class="normal"></highlight></codeline>
<codeline lineno="15717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15719"><highlight class="normal"></highlight></codeline>
<codeline lineno="15720"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Body_argumentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15721"><highlight class="normal"></highlight></codeline>
<codeline lineno="15722"><highlight class="normal">KerMLParser::Body_argumentContext::Body_argumentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15723"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15725"><highlight class="normal"></highlight></codeline>
<codeline lineno="15726"><highlight class="normal"><ref refid="df/d3e/class_ker_m_l_parser_1_1_body__argument__value_context" kindref="compound">KerMLParser::Body_argument_valueContext</ref>*<sp/>KerMLParser::Body_argumentContext::body_argument_value()<sp/>{</highlight></codeline>
<codeline lineno="15727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_argument_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="15728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15729"><highlight class="normal"></highlight></codeline>
<codeline lineno="15730"><highlight class="normal"></highlight></codeline>
<codeline lineno="15731"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Body_argumentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBody_argument;</highlight></codeline>
<codeline lineno="15733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15734"><highlight class="normal"></highlight></codeline>
<codeline lineno="15735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_argumentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15738"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBody_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15740"><highlight class="normal"></highlight></codeline>
<codeline lineno="15741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_argumentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15744"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBody_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15746"><highlight class="normal"></highlight></codeline>
<codeline lineno="15747"><highlight class="normal">KerMLParser::Body_argumentContext*<sp/>KerMLParser::body_argument()<sp/>{</highlight></codeline>
<codeline lineno="15748"><highlight class="normal"><sp/><sp/><ref refid="d5/d23/class_ker_m_l_parser_1_1_body__argument_context" kindref="compound">Body_argumentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d23/class_ker_m_l_parser_1_1_body__argument_context" kindref="compound">Body_argumentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15749"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>366,<sp/>KerMLParser::RuleBody_argument);</highlight></codeline>
<codeline lineno="15750"><highlight class="normal"></highlight></codeline>
<codeline lineno="15751"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15753"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15755"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15756"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15757"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15759"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15760"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1697);</highlight></codeline>
<codeline lineno="15761"><highlight class="normal"><sp/><sp/><sp/><sp/>body_argument_value();</highlight></codeline>
<codeline lineno="15762"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15765"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15766"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15767"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15769"><highlight class="normal"></highlight></codeline>
<codeline lineno="15770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15772"><highlight class="normal"></highlight></codeline>
<codeline lineno="15773"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Body_argument_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15774"><highlight class="normal"></highlight></codeline>
<codeline lineno="15775"><highlight class="normal">KerMLParser::Body_argument_valueContext::Body_argument_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15776"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15778"><highlight class="normal"></highlight></codeline>
<codeline lineno="15779"><highlight class="normal"><ref refid="df/d4f/class_ker_m_l_parser_1_1_body__expression_context" kindref="compound">KerMLParser::Body_expressionContext</ref>*<sp/>KerMLParser::Body_argument_valueContext::body_expression()<sp/>{</highlight></codeline>
<codeline lineno="15780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="15781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15782"><highlight class="normal"></highlight></codeline>
<codeline lineno="15783"><highlight class="normal"></highlight></codeline>
<codeline lineno="15784"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Body_argument_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBody_argument_value;</highlight></codeline>
<codeline lineno="15786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15787"><highlight class="normal"></highlight></codeline>
<codeline lineno="15788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_argument_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15791"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBody_argument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15793"><highlight class="normal"></highlight></codeline>
<codeline lineno="15794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_argument_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15797"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBody_argument_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15799"><highlight class="normal"></highlight></codeline>
<codeline lineno="15800"><highlight class="normal">KerMLParser::Body_argument_valueContext*<sp/>KerMLParser::body_argument_value()<sp/>{</highlight></codeline>
<codeline lineno="15801"><highlight class="normal"><sp/><sp/><ref refid="df/d3e/class_ker_m_l_parser_1_1_body__argument__value_context" kindref="compound">Body_argument_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d3e/class_ker_m_l_parser_1_1_body__argument__value_context" kindref="compound">Body_argument_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15802"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>368,<sp/>KerMLParser::RuleBody_argument_value);</highlight></codeline>
<codeline lineno="15803"><highlight class="normal"></highlight></codeline>
<codeline lineno="15804"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15806"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15808"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15809"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15810"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15812"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15813"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1699);</highlight></codeline>
<codeline lineno="15814"><highlight class="normal"><sp/><sp/><sp/><sp/>body_expression();</highlight></codeline>
<codeline lineno="15815"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15818"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15819"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15820"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15822"><highlight class="normal"></highlight></codeline>
<codeline lineno="15823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15825"><highlight class="normal"></highlight></codeline>
<codeline lineno="15826"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Body_expression_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15827"><highlight class="normal"></highlight></codeline>
<codeline lineno="15828"><highlight class="normal">KerMLParser::Body_expression_memberContext::Body_expression_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15829"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15831"><highlight class="normal"></highlight></codeline>
<codeline lineno="15832"><highlight class="normal"><ref refid="df/d4f/class_ker_m_l_parser_1_1_body__expression_context" kindref="compound">KerMLParser::Body_expressionContext</ref>*<sp/>KerMLParser::Body_expression_memberContext::body_expression()<sp/>{</highlight></codeline>
<codeline lineno="15833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="15834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15835"><highlight class="normal"></highlight></codeline>
<codeline lineno="15836"><highlight class="normal"></highlight></codeline>
<codeline lineno="15837"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Body_expression_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBody_expression_member;</highlight></codeline>
<codeline lineno="15839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15840"><highlight class="normal"></highlight></codeline>
<codeline lineno="15841"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_expression_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15844"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBody_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15846"><highlight class="normal"></highlight></codeline>
<codeline lineno="15847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_expression_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15850"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBody_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15852"><highlight class="normal"></highlight></codeline>
<codeline lineno="15853"><highlight class="normal">KerMLParser::Body_expression_memberContext*<sp/>KerMLParser::body_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="15854"><highlight class="normal"><sp/><sp/><ref refid="d7/daf/class_ker_m_l_parser_1_1_body__expression__member_context" kindref="compound">Body_expression_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/daf/class_ker_m_l_parser_1_1_body__expression__member_context" kindref="compound">Body_expression_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15855"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>370,<sp/>KerMLParser::RuleBody_expression_member);</highlight></codeline>
<codeline lineno="15856"><highlight class="normal"></highlight></codeline>
<codeline lineno="15857"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15859"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15861"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15862"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15863"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15865"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15866"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1701);</highlight></codeline>
<codeline lineno="15867"><highlight class="normal"><sp/><sp/><sp/><sp/>body_expression();</highlight></codeline>
<codeline lineno="15868"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15871"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15872"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15873"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15875"><highlight class="normal"></highlight></codeline>
<codeline lineno="15876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15878"><highlight class="normal"></highlight></codeline>
<codeline lineno="15879"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_reference_argument_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15880"><highlight class="normal"></highlight></codeline>
<codeline lineno="15881"><highlight class="normal">KerMLParser::Function_reference_argument_memberContext::Function_reference_argument_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15882"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15884"><highlight class="normal"></highlight></codeline>
<codeline lineno="15885"><highlight class="normal"><ref refid="df/d9b/class_ker_m_l_parser_1_1_function__reference__argument_context" kindref="compound">KerMLParser::Function_reference_argumentContext</ref>*<sp/>KerMLParser::Function_reference_argument_memberContext::function_reference_argument()<sp/>{</highlight></codeline>
<codeline lineno="15886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_reference_argumentContext&gt;(0);</highlight></codeline>
<codeline lineno="15887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15888"><highlight class="normal"></highlight></codeline>
<codeline lineno="15889"><highlight class="normal"></highlight></codeline>
<codeline lineno="15890"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_argument_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_reference_argument_member;</highlight></codeline>
<codeline lineno="15892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15893"><highlight class="normal"></highlight></codeline>
<codeline lineno="15894"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_argument_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15897"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_reference_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15899"><highlight class="normal"></highlight></codeline>
<codeline lineno="15900"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_argument_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15903"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_reference_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15905"><highlight class="normal"></highlight></codeline>
<codeline lineno="15906"><highlight class="normal">KerMLParser::Function_reference_argument_memberContext*<sp/>KerMLParser::function_reference_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="15907"><highlight class="normal"><sp/><sp/><ref refid="de/db9/class_ker_m_l_parser_1_1_function__reference__argument__member_context" kindref="compound">Function_reference_argument_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/db9/class_ker_m_l_parser_1_1_function__reference__argument__member_context" kindref="compound">Function_reference_argument_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15908"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>372,<sp/>KerMLParser::RuleFunction_reference_argument_member);</highlight></codeline>
<codeline lineno="15909"><highlight class="normal"></highlight></codeline>
<codeline lineno="15910"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15912"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15914"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15915"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15916"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15918"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15919"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1703);</highlight></codeline>
<codeline lineno="15920"><highlight class="normal"><sp/><sp/><sp/><sp/>function_reference_argument();</highlight></codeline>
<codeline lineno="15921"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15924"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15925"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15926"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15928"><highlight class="normal"></highlight></codeline>
<codeline lineno="15929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15931"><highlight class="normal"></highlight></codeline>
<codeline lineno="15932"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_reference_argumentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15933"><highlight class="normal"></highlight></codeline>
<codeline lineno="15934"><highlight class="normal">KerMLParser::Function_reference_argumentContext::Function_reference_argumentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15935"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15937"><highlight class="normal"></highlight></codeline>
<codeline lineno="15938"><highlight class="normal"><ref refid="d8/d23/class_ker_m_l_parser_1_1_function__reference__member_context" kindref="compound">KerMLParser::Function_reference_memberContext</ref>*<sp/>KerMLParser::Function_reference_argumentContext::function_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="15939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_reference_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="15940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15941"><highlight class="normal"></highlight></codeline>
<codeline lineno="15942"><highlight class="normal"></highlight></codeline>
<codeline lineno="15943"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_argumentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_reference_argument;</highlight></codeline>
<codeline lineno="15945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15946"><highlight class="normal"></highlight></codeline>
<codeline lineno="15947"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_argumentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15950"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_reference_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15952"><highlight class="normal"></highlight></codeline>
<codeline lineno="15953"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_argumentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="15954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="15955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15956"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_reference_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15958"><highlight class="normal"></highlight></codeline>
<codeline lineno="15959"><highlight class="normal">KerMLParser::Function_reference_argumentContext*<sp/>KerMLParser::function_reference_argument()<sp/>{</highlight></codeline>
<codeline lineno="15960"><highlight class="normal"><sp/><sp/><ref refid="df/d9b/class_ker_m_l_parser_1_1_function__reference__argument_context" kindref="compound">Function_reference_argumentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d9b/class_ker_m_l_parser_1_1_function__reference__argument_context" kindref="compound">Function_reference_argumentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="15961"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>374,<sp/>KerMLParser::RuleFunction_reference_argument);</highlight></codeline>
<codeline lineno="15962"><highlight class="normal"></highlight></codeline>
<codeline lineno="15963"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="15965"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="15967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15968"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="15969"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15971"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="15972"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1705);</highlight></codeline>
<codeline lineno="15973"><highlight class="normal"><sp/><sp/><sp/><sp/>function_reference_member();</highlight></codeline>
<codeline lineno="15974"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15975"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="15977"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="15978"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="15979"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="15980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15981"><highlight class="normal"></highlight></codeline>
<codeline lineno="15982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="15983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15984"><highlight class="normal"></highlight></codeline>
<codeline lineno="15985"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_reference_arugment_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15986"><highlight class="normal"></highlight></codeline>
<codeline lineno="15987"><highlight class="normal">KerMLParser::Function_reference_arugment_valueContext::Function_reference_arugment_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="15988"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="15989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15990"><highlight class="normal"></highlight></codeline>
<codeline lineno="15991"><highlight class="normal"><ref refid="d6/d42/class_ker_m_l_parser_1_1_function__reference__expression_context" kindref="compound">KerMLParser::Function_reference_expressionContext</ref>*<sp/>KerMLParser::Function_reference_arugment_valueContext::function_reference_expression()<sp/>{</highlight></codeline>
<codeline lineno="15992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_reference_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="15993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15994"><highlight class="normal"></highlight></codeline>
<codeline lineno="15995"><highlight class="normal"></highlight></codeline>
<codeline lineno="15996"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_arugment_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_reference_arugment_value;</highlight></codeline>
<codeline lineno="15998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15999"><highlight class="normal"></highlight></codeline>
<codeline lineno="16000"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_arugment_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16003"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_reference_arugment_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16005"><highlight class="normal"></highlight></codeline>
<codeline lineno="16006"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_arugment_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16009"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_reference_arugment_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16011"><highlight class="normal"></highlight></codeline>
<codeline lineno="16012"><highlight class="normal">KerMLParser::Function_reference_arugment_valueContext*<sp/>KerMLParser::function_reference_arugment_value()<sp/>{</highlight></codeline>
<codeline lineno="16013"><highlight class="normal"><sp/><sp/><ref refid="d9/d31/class_ker_m_l_parser_1_1_function__reference__arugment__value_context" kindref="compound">Function_reference_arugment_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d31/class_ker_m_l_parser_1_1_function__reference__arugment__value_context" kindref="compound">Function_reference_arugment_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16014"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>376,<sp/>KerMLParser::RuleFunction_reference_arugment_value);</highlight></codeline>
<codeline lineno="16015"><highlight class="normal"></highlight></codeline>
<codeline lineno="16016"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16018"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16020"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16021"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16022"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16024"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16025"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1707);</highlight></codeline>
<codeline lineno="16026"><highlight class="normal"><sp/><sp/><sp/><sp/>function_reference_expression();</highlight></codeline>
<codeline lineno="16027"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16030"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16031"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16032"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16034"><highlight class="normal"></highlight></codeline>
<codeline lineno="16035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16037"><highlight class="normal"></highlight></codeline>
<codeline lineno="16038"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_reference_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16039"><highlight class="normal"></highlight></codeline>
<codeline lineno="16040"><highlight class="normal">KerMLParser::Function_reference_expressionContext::Function_reference_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16041"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16043"><highlight class="normal"></highlight></codeline>
<codeline lineno="16044"><highlight class="normal"><ref refid="d9/d0d/class_ker_m_l_parser_1_1_reference__typing_context" kindref="compound">KerMLParser::Reference_typingContext</ref>*<sp/>KerMLParser::Function_reference_expressionContext::reference_typing()<sp/>{</highlight></codeline>
<codeline lineno="16045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Reference_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="16046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16047"><highlight class="normal"></highlight></codeline>
<codeline lineno="16048"><highlight class="normal"></highlight></codeline>
<codeline lineno="16049"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_reference_expression;</highlight></codeline>
<codeline lineno="16051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16052"><highlight class="normal"></highlight></codeline>
<codeline lineno="16053"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16056"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_reference_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16058"><highlight class="normal"></highlight></codeline>
<codeline lineno="16059"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16062"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_reference_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16064"><highlight class="normal"></highlight></codeline>
<codeline lineno="16065"><highlight class="normal">KerMLParser::Function_reference_expressionContext*<sp/>KerMLParser::function_reference_expression()<sp/>{</highlight></codeline>
<codeline lineno="16066"><highlight class="normal"><sp/><sp/><ref refid="d6/d42/class_ker_m_l_parser_1_1_function__reference__expression_context" kindref="compound">Function_reference_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d42/class_ker_m_l_parser_1_1_function__reference__expression_context" kindref="compound">Function_reference_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16067"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>378,<sp/>KerMLParser::RuleFunction_reference_expression);</highlight></codeline>
<codeline lineno="16068"><highlight class="normal"></highlight></codeline>
<codeline lineno="16069"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16071"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16073"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16074"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16075"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16077"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16078"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1709);</highlight></codeline>
<codeline lineno="16079"><highlight class="normal"><sp/><sp/><sp/><sp/>reference_typing();</highlight></codeline>
<codeline lineno="16080"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16083"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16084"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16085"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16087"><highlight class="normal"></highlight></codeline>
<codeline lineno="16088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16090"><highlight class="normal"></highlight></codeline>
<codeline lineno="16091"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_reference_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16092"><highlight class="normal"></highlight></codeline>
<codeline lineno="16093"><highlight class="normal">KerMLParser::Function_reference_memberContext::Function_reference_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16094"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16096"><highlight class="normal"></highlight></codeline>
<codeline lineno="16097"><highlight class="normal"><ref refid="df/d45/class_ker_m_l_parser_1_1_function__reference_context" kindref="compound">KerMLParser::Function_referenceContext</ref>*<sp/>KerMLParser::Function_reference_memberContext::function_reference()<sp/>{</highlight></codeline>
<codeline lineno="16098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_referenceContext&gt;(0);</highlight></codeline>
<codeline lineno="16099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16100"><highlight class="normal"></highlight></codeline>
<codeline lineno="16101"><highlight class="normal"></highlight></codeline>
<codeline lineno="16102"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_reference_member;</highlight></codeline>
<codeline lineno="16104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16105"><highlight class="normal"></highlight></codeline>
<codeline lineno="16106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16109"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16111"><highlight class="normal"></highlight></codeline>
<codeline lineno="16112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_reference_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16115"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16117"><highlight class="normal"></highlight></codeline>
<codeline lineno="16118"><highlight class="normal">KerMLParser::Function_reference_memberContext*<sp/>KerMLParser::function_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="16119"><highlight class="normal"><sp/><sp/><ref refid="d8/d23/class_ker_m_l_parser_1_1_function__reference__member_context" kindref="compound">Function_reference_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d23/class_ker_m_l_parser_1_1_function__reference__member_context" kindref="compound">Function_reference_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16120"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>380,<sp/>KerMLParser::RuleFunction_reference_member);</highlight></codeline>
<codeline lineno="16121"><highlight class="normal"></highlight></codeline>
<codeline lineno="16122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16124"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16127"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16128"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16130"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16131"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1711);</highlight></codeline>
<codeline lineno="16132"><highlight class="normal"><sp/><sp/><sp/><sp/>function_reference();</highlight></codeline>
<codeline lineno="16133"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16136"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16137"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16138"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16140"><highlight class="normal"></highlight></codeline>
<codeline lineno="16141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16143"><highlight class="normal"></highlight></codeline>
<codeline lineno="16144"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Function_referenceContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16145"><highlight class="normal"></highlight></codeline>
<codeline lineno="16146"><highlight class="normal">KerMLParser::Function_referenceContext::Function_referenceContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16147"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16149"><highlight class="normal"></highlight></codeline>
<codeline lineno="16150"><highlight class="normal"><ref refid="d9/d0d/class_ker_m_l_parser_1_1_reference__typing_context" kindref="compound">KerMLParser::Reference_typingContext</ref>*<sp/>KerMLParser::Function_referenceContext::reference_typing()<sp/>{</highlight></codeline>
<codeline lineno="16151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Reference_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="16152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16153"><highlight class="normal"></highlight></codeline>
<codeline lineno="16154"><highlight class="normal"></highlight></codeline>
<codeline lineno="16155"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Function_referenceContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFunction_reference;</highlight></codeline>
<codeline lineno="16157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16158"><highlight class="normal"></highlight></codeline>
<codeline lineno="16159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_referenceContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16162"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFunction_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16164"><highlight class="normal"></highlight></codeline>
<codeline lineno="16165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Function_referenceContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16168"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFunction_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16170"><highlight class="normal"></highlight></codeline>
<codeline lineno="16171"><highlight class="normal">KerMLParser::Function_referenceContext*<sp/>KerMLParser::function_reference()<sp/>{</highlight></codeline>
<codeline lineno="16172"><highlight class="normal"><sp/><sp/><ref refid="df/d45/class_ker_m_l_parser_1_1_function__reference_context" kindref="compound">Function_referenceContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d45/class_ker_m_l_parser_1_1_function__reference_context" kindref="compound">Function_referenceContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16173"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>382,<sp/>KerMLParser::RuleFunction_reference);</highlight></codeline>
<codeline lineno="16174"><highlight class="normal"></highlight></codeline>
<codeline lineno="16175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16180"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16181"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16183"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16184"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1713);</highlight></codeline>
<codeline lineno="16185"><highlight class="normal"><sp/><sp/><sp/><sp/>reference_typing();</highlight></codeline>
<codeline lineno="16186"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16189"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16190"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16191"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16193"><highlight class="normal"></highlight></codeline>
<codeline lineno="16194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16196"><highlight class="normal"></highlight></codeline>
<codeline lineno="16197"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_chain_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16198"><highlight class="normal"></highlight></codeline>
<codeline lineno="16199"><highlight class="normal">KerMLParser::Feature_chain_memberContext::Feature_chain_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16200"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16202"><highlight class="normal"></highlight></codeline>
<codeline lineno="16203"><highlight class="normal"><ref refid="d0/d59/class_ker_m_l_parser_1_1_feature__reference__member_context" kindref="compound">KerMLParser::Feature_reference_memberContext</ref>*<sp/>KerMLParser::Feature_chain_memberContext::feature_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="16204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_reference_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="16205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16206"><highlight class="normal"></highlight></codeline>
<codeline lineno="16207"><highlight class="normal">KerMLParser::Owned_feature_chain_memberContext*<sp/>KerMLParser::Feature_chain_memberContext::owned_feature_chain_member()<sp/>{</highlight></codeline>
<codeline lineno="16208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_chain_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="16209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16210"><highlight class="normal"></highlight></codeline>
<codeline lineno="16211"><highlight class="normal"></highlight></codeline>
<codeline lineno="16212"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chain_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_chain_member;</highlight></codeline>
<codeline lineno="16214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16215"><highlight class="normal"></highlight></codeline>
<codeline lineno="16216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chain_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16219"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_chain_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16221"><highlight class="normal"></highlight></codeline>
<codeline lineno="16222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_chain_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16225"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_chain_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16227"><highlight class="normal"></highlight></codeline>
<codeline lineno="16228"><highlight class="normal">KerMLParser::Feature_chain_memberContext*<sp/>KerMLParser::feature_chain_member()<sp/>{</highlight></codeline>
<codeline lineno="16229"><highlight class="normal"><sp/><sp/><ref refid="d9/d72/class_ker_m_l_parser_1_1_feature__chain__member_context" kindref="compound">Feature_chain_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d72/class_ker_m_l_parser_1_1_feature__chain__member_context" kindref="compound">Feature_chain_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16230"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>384,<sp/>KerMLParser::RuleFeature_chain_member);</highlight></codeline>
<codeline lineno="16231"><highlight class="normal"></highlight></codeline>
<codeline lineno="16232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16234"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16237"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16238"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16240"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1717);</highlight></codeline>
<codeline lineno="16241"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>170,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="16243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="16244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1715);</highlight></codeline>
<codeline lineno="16246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_reference_member();</highlight></codeline>
<codeline lineno="16247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16249"><highlight class="normal"></highlight></codeline>
<codeline lineno="16250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="16251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="16252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1716);</highlight></codeline>
<codeline lineno="16253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_chain_member();</highlight></codeline>
<codeline lineno="16254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16256"><highlight class="normal"></highlight></codeline>
<codeline lineno="16257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16260"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16263"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16264"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16265"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16267"><highlight class="normal"></highlight></codeline>
<codeline lineno="16268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16270"><highlight class="normal"></highlight></codeline>
<codeline lineno="16271"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_feature_chain_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16272"><highlight class="normal"></highlight></codeline>
<codeline lineno="16273"><highlight class="normal">KerMLParser::Owned_feature_chain_memberContext::Owned_feature_chain_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16274"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16276"><highlight class="normal"></highlight></codeline>
<codeline lineno="16277"><highlight class="normal"><ref refid="d2/d78/class_ker_m_l_parser_1_1_feature__chain_context" kindref="compound">KerMLParser::Feature_chainContext</ref>*<sp/>KerMLParser::Owned_feature_chain_memberContext::feature_chain()<sp/>{</highlight></codeline>
<codeline lineno="16278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_chainContext&gt;(0);</highlight></codeline>
<codeline lineno="16279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16280"><highlight class="normal"></highlight></codeline>
<codeline lineno="16281"><highlight class="normal"></highlight></codeline>
<codeline lineno="16282"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chain_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_feature_chain_member;</highlight></codeline>
<codeline lineno="16284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16285"><highlight class="normal"></highlight></codeline>
<codeline lineno="16286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chain_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16289"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_feature_chain_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16291"><highlight class="normal"></highlight></codeline>
<codeline lineno="16292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_feature_chain_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16295"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_feature_chain_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16297"><highlight class="normal"></highlight></codeline>
<codeline lineno="16298"><highlight class="normal">KerMLParser::Owned_feature_chain_memberContext*<sp/>KerMLParser::owned_feature_chain_member()<sp/>{</highlight></codeline>
<codeline lineno="16299"><highlight class="normal"><sp/><sp/><ref refid="d9/d91/class_ker_m_l_parser_1_1_owned__feature__chain__member_context" kindref="compound">Owned_feature_chain_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d91/class_ker_m_l_parser_1_1_owned__feature__chain__member_context" kindref="compound">Owned_feature_chain_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16300"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>386,<sp/>KerMLParser::RuleOwned_feature_chain_member);</highlight></codeline>
<codeline lineno="16301"><highlight class="normal"></highlight></codeline>
<codeline lineno="16302"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16304"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16307"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16308"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16310"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16311"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1719);</highlight></codeline>
<codeline lineno="16312"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_chain();</highlight></codeline>
<codeline lineno="16313"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16316"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16317"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16318"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16320"><highlight class="normal"></highlight></codeline>
<codeline lineno="16321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16323"><highlight class="normal"></highlight></codeline>
<codeline lineno="16324"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Base_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16325"><highlight class="normal"></highlight></codeline>
<codeline lineno="16326"><highlight class="normal">KerMLParser::Base_expressionContext::Base_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16327"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16329"><highlight class="normal"></highlight></codeline>
<codeline lineno="16330"><highlight class="normal"><ref refid="df/d09/class_ker_m_l_parser_1_1_null__expression_context" kindref="compound">KerMLParser::Null_expressionContext</ref>*<sp/>KerMLParser::Base_expressionContext::null_expression()<sp/>{</highlight></codeline>
<codeline lineno="16331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Null_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="16332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16333"><highlight class="normal"></highlight></codeline>
<codeline lineno="16334"><highlight class="normal">KerMLParser::Literal_expressionContext*<sp/>KerMLParser::Base_expressionContext::literal_expression()<sp/>{</highlight></codeline>
<codeline lineno="16335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Literal_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="16336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16337"><highlight class="normal"></highlight></codeline>
<codeline lineno="16338"><highlight class="normal">KerMLParser::Feature_reference_expressionContext*<sp/>KerMLParser::Base_expressionContext::feature_reference_expression()<sp/>{</highlight></codeline>
<codeline lineno="16339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_reference_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="16340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16341"><highlight class="normal"></highlight></codeline>
<codeline lineno="16342"><highlight class="normal">KerMLParser::Metadata_access_expressionContext*<sp/>KerMLParser::Base_expressionContext::metadata_access_expression()<sp/>{</highlight></codeline>
<codeline lineno="16343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_access_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="16344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16345"><highlight class="normal"></highlight></codeline>
<codeline lineno="16346"><highlight class="normal">KerMLParser::Invocation_expressionContext*<sp/>KerMLParser::Base_expressionContext::invocation_expression()<sp/>{</highlight></codeline>
<codeline lineno="16347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Invocation_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="16348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16349"><highlight class="normal"></highlight></codeline>
<codeline lineno="16350"><highlight class="normal">KerMLParser::Body_expressionContext*<sp/>KerMLParser::Base_expressionContext::body_expression()<sp/>{</highlight></codeline>
<codeline lineno="16351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Body_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="16352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16353"><highlight class="normal"></highlight></codeline>
<codeline lineno="16354"><highlight class="normal"></highlight></codeline>
<codeline lineno="16355"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Base_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBase_expression;</highlight></codeline>
<codeline lineno="16357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16358"><highlight class="normal"></highlight></codeline>
<codeline lineno="16359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Base_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16362"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBase_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16364"><highlight class="normal"></highlight></codeline>
<codeline lineno="16365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Base_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16368"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBase_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16370"><highlight class="normal"></highlight></codeline>
<codeline lineno="16371"><highlight class="normal">KerMLParser::Base_expressionContext*<sp/>KerMLParser::base_expression()<sp/>{</highlight></codeline>
<codeline lineno="16372"><highlight class="normal"><sp/><sp/><ref refid="d3/dc9/class_ker_m_l_parser_1_1_base__expression_context" kindref="compound">Base_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/dc9/class_ker_m_l_parser_1_1_base__expression_context" kindref="compound">Base_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16373"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>388,<sp/>KerMLParser::RuleBase_expression);</highlight></codeline>
<codeline lineno="16374"><highlight class="normal"></highlight></codeline>
<codeline lineno="16375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16377"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16380"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16381"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16383"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1727);</highlight></codeline>
<codeline lineno="16384"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>171,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="16386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="16387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1721);</highlight></codeline>
<codeline lineno="16389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>null_expression();</highlight></codeline>
<codeline lineno="16390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16392"><highlight class="normal"></highlight></codeline>
<codeline lineno="16393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="16394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="16395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1722);</highlight></codeline>
<codeline lineno="16396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>literal_expression();</highlight></codeline>
<codeline lineno="16397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16399"><highlight class="normal"></highlight></codeline>
<codeline lineno="16400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="16401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="16402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1723);</highlight></codeline>
<codeline lineno="16403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_reference_expression();</highlight></codeline>
<codeline lineno="16404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16406"><highlight class="normal"></highlight></codeline>
<codeline lineno="16407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="16408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="16409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1724);</highlight></codeline>
<codeline lineno="16410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata_access_expression();</highlight></codeline>
<codeline lineno="16411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16413"><highlight class="normal"></highlight></codeline>
<codeline lineno="16414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{</highlight></codeline>
<codeline lineno="16415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>5);</highlight></codeline>
<codeline lineno="16416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1725);</highlight></codeline>
<codeline lineno="16417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invocation_expression();</highlight></codeline>
<codeline lineno="16418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16420"><highlight class="normal"></highlight></codeline>
<codeline lineno="16421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{</highlight></codeline>
<codeline lineno="16422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>6);</highlight></codeline>
<codeline lineno="16423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1726);</highlight></codeline>
<codeline lineno="16424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>body_expression();</highlight></codeline>
<codeline lineno="16425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16427"><highlight class="normal"></highlight></codeline>
<codeline lineno="16428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16431"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16434"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16435"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16436"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16438"><highlight class="normal"></highlight></codeline>
<codeline lineno="16439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16441"><highlight class="normal"></highlight></codeline>
<codeline lineno="16442"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Null_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16443"><highlight class="normal"></highlight></codeline>
<codeline lineno="16444"><highlight class="normal">KerMLParser::Null_expressionContext::Null_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16445"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16447"><highlight class="normal"></highlight></codeline>
<codeline lineno="16448"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Null_expressionContext::KEYWORD_NULL()<sp/>{</highlight></codeline>
<codeline lineno="16449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_NULL,<sp/>0);</highlight></codeline>
<codeline lineno="16450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16451"><highlight class="normal"></highlight></codeline>
<codeline lineno="16452"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Null_expressionContext::SYMBOL_ROUND_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="16453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="16454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16455"><highlight class="normal"></highlight></codeline>
<codeline lineno="16456"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Null_expressionContext::SYMBOL_ROUND_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="16457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="16458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16459"><highlight class="normal"></highlight></codeline>
<codeline lineno="16460"><highlight class="normal"></highlight></codeline>
<codeline lineno="16461"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Null_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNull_expression;</highlight></codeline>
<codeline lineno="16463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16464"><highlight class="normal"></highlight></codeline>
<codeline lineno="16465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Null_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16468"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNull_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16470"><highlight class="normal"></highlight></codeline>
<codeline lineno="16471"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Null_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16474"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNull_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16476"><highlight class="normal"></highlight></codeline>
<codeline lineno="16477"><highlight class="normal">KerMLParser::Null_expressionContext*<sp/>KerMLParser::null_expression()<sp/>{</highlight></codeline>
<codeline lineno="16478"><highlight class="normal"><sp/><sp/><ref refid="df/d09/class_ker_m_l_parser_1_1_null__expression_context" kindref="compound">Null_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d09/class_ker_m_l_parser_1_1_null__expression_context" kindref="compound">Null_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16479"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>390,<sp/>KerMLParser::RuleNull_expression);</highlight></codeline>
<codeline lineno="16480"><highlight class="normal"></highlight></codeline>
<codeline lineno="16481"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16483"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16486"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16487"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16489"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1732);</highlight></codeline>
<codeline lineno="16490"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="16492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_NULL:<sp/>{</highlight></codeline>
<codeline lineno="16493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1729);</highlight></codeline>
<codeline lineno="16495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_NULL);</highlight></codeline>
<codeline lineno="16496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16498"><highlight class="normal"></highlight></codeline>
<codeline lineno="16499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_ROUND_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="16500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="16501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1730);</highlight></codeline>
<codeline lineno="16502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="16503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1731);</highlight></codeline>
<codeline lineno="16504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="16505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16507"><highlight class="normal"></highlight></codeline>
<codeline lineno="16508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16511"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16514"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16515"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16516"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16518"><highlight class="normal"></highlight></codeline>
<codeline lineno="16519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16521"><highlight class="normal"></highlight></codeline>
<codeline lineno="16522"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_reference_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16523"><highlight class="normal"></highlight></codeline>
<codeline lineno="16524"><highlight class="normal">KerMLParser::Feature_reference_expressionContext::Feature_reference_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16525"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16527"><highlight class="normal"></highlight></codeline>
<codeline lineno="16528"><highlight class="normal"><ref refid="d0/d59/class_ker_m_l_parser_1_1_feature__reference__member_context" kindref="compound">KerMLParser::Feature_reference_memberContext</ref>*<sp/>KerMLParser::Feature_reference_expressionContext::feature_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="16529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_reference_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="16530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16531"><highlight class="normal"></highlight></codeline>
<codeline lineno="16532"><highlight class="normal"></highlight></codeline>
<codeline lineno="16533"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_reference_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_reference_expression;</highlight></codeline>
<codeline lineno="16535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16536"><highlight class="normal"></highlight></codeline>
<codeline lineno="16537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_reference_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16540"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_reference_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16542"><highlight class="normal"></highlight></codeline>
<codeline lineno="16543"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_reference_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16546"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_reference_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16548"><highlight class="normal"></highlight></codeline>
<codeline lineno="16549"><highlight class="normal">KerMLParser::Feature_reference_expressionContext*<sp/>KerMLParser::feature_reference_expression()<sp/>{</highlight></codeline>
<codeline lineno="16550"><highlight class="normal"><sp/><sp/><ref refid="db/dfd/class_ker_m_l_parser_1_1_feature__reference__expression_context" kindref="compound">Feature_reference_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/dfd/class_ker_m_l_parser_1_1_feature__reference__expression_context" kindref="compound">Feature_reference_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16551"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>392,<sp/>KerMLParser::RuleFeature_reference_expression);</highlight></codeline>
<codeline lineno="16552"><highlight class="normal"></highlight></codeline>
<codeline lineno="16553"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16555"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16558"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16559"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16561"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16562"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1734);</highlight></codeline>
<codeline lineno="16563"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_reference_member();</highlight></codeline>
<codeline lineno="16564"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16567"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16568"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16569"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16571"><highlight class="normal"></highlight></codeline>
<codeline lineno="16572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16574"><highlight class="normal"></highlight></codeline>
<codeline lineno="16575"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_reference_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16576"><highlight class="normal"></highlight></codeline>
<codeline lineno="16577"><highlight class="normal">KerMLParser::Feature_reference_memberContext::Feature_reference_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16578"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16580"><highlight class="normal"></highlight></codeline>
<codeline lineno="16581"><highlight class="normal"><ref refid="d5/dac/class_ker_m_l_parser_1_1_feature__reference_context" kindref="compound">KerMLParser::Feature_referenceContext</ref>*<sp/>KerMLParser::Feature_reference_memberContext::feature_reference()<sp/>{</highlight></codeline>
<codeline lineno="16582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_referenceContext&gt;(0);</highlight></codeline>
<codeline lineno="16583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16584"><highlight class="normal"></highlight></codeline>
<codeline lineno="16585"><highlight class="normal"></highlight></codeline>
<codeline lineno="16586"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_reference_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_reference_member;</highlight></codeline>
<codeline lineno="16588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16589"><highlight class="normal"></highlight></codeline>
<codeline lineno="16590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_reference_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16593"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16595"><highlight class="normal"></highlight></codeline>
<codeline lineno="16596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_reference_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16599"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_reference_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16601"><highlight class="normal"></highlight></codeline>
<codeline lineno="16602"><highlight class="normal">KerMLParser::Feature_reference_memberContext*<sp/>KerMLParser::feature_reference_member()<sp/>{</highlight></codeline>
<codeline lineno="16603"><highlight class="normal"><sp/><sp/><ref refid="d0/d59/class_ker_m_l_parser_1_1_feature__reference__member_context" kindref="compound">Feature_reference_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/d59/class_ker_m_l_parser_1_1_feature__reference__member_context" kindref="compound">Feature_reference_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16604"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>394,<sp/>KerMLParser::RuleFeature_reference_member);</highlight></codeline>
<codeline lineno="16605"><highlight class="normal"></highlight></codeline>
<codeline lineno="16606"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16608"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16610"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16611"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16612"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16614"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16615"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1736);</highlight></codeline>
<codeline lineno="16616"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_reference();</highlight></codeline>
<codeline lineno="16617"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16620"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16621"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16622"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16624"><highlight class="normal"></highlight></codeline>
<codeline lineno="16625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16627"><highlight class="normal"></highlight></codeline>
<codeline lineno="16628"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_referenceContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16629"><highlight class="normal"></highlight></codeline>
<codeline lineno="16630"><highlight class="normal">KerMLParser::Feature_referenceContext::Feature_referenceContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16631"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16633"><highlight class="normal"></highlight></codeline>
<codeline lineno="16634"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Feature_referenceContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="16635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="16636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16637"><highlight class="normal"></highlight></codeline>
<codeline lineno="16638"><highlight class="normal"></highlight></codeline>
<codeline lineno="16639"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_referenceContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_reference;</highlight></codeline>
<codeline lineno="16641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16642"><highlight class="normal"></highlight></codeline>
<codeline lineno="16643"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_referenceContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16646"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16648"><highlight class="normal"></highlight></codeline>
<codeline lineno="16649"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_referenceContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16652"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_reference(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16654"><highlight class="normal"></highlight></codeline>
<codeline lineno="16655"><highlight class="normal">KerMLParser::Feature_referenceContext*<sp/>KerMLParser::feature_reference()<sp/>{</highlight></codeline>
<codeline lineno="16656"><highlight class="normal"><sp/><sp/><ref refid="d5/dac/class_ker_m_l_parser_1_1_feature__reference_context" kindref="compound">Feature_referenceContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/dac/class_ker_m_l_parser_1_1_feature__reference_context" kindref="compound">Feature_referenceContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16657"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>396,<sp/>KerMLParser::RuleFeature_reference);</highlight></codeline>
<codeline lineno="16658"><highlight class="normal"></highlight></codeline>
<codeline lineno="16659"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16661"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16664"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16665"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16667"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16668"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1738);</highlight></codeline>
<codeline lineno="16669"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="16670"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16673"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16674"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16675"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16677"><highlight class="normal"></highlight></codeline>
<codeline lineno="16678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16680"><highlight class="normal"></highlight></codeline>
<codeline lineno="16681"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_access_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16682"><highlight class="normal"></highlight></codeline>
<codeline lineno="16683"><highlight class="normal">KerMLParser::Metadata_access_expressionContext::Metadata_access_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16684"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16686"><highlight class="normal"></highlight></codeline>
<codeline lineno="16687"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Metadata_access_expressionContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="16688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="16689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16690"><highlight class="normal"></highlight></codeline>
<codeline lineno="16691"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_access_expressionContext::SYMBOL_DOT()<sp/>{</highlight></codeline>
<codeline lineno="16692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT,<sp/>0);</highlight></codeline>
<codeline lineno="16693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16694"><highlight class="normal"></highlight></codeline>
<codeline lineno="16695"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_access_expressionContext::KEYWORD_METADATA()<sp/>{</highlight></codeline>
<codeline lineno="16696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_METADATA,<sp/>0);</highlight></codeline>
<codeline lineno="16697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16698"><highlight class="normal"></highlight></codeline>
<codeline lineno="16699"><highlight class="normal"></highlight></codeline>
<codeline lineno="16700"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_access_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_access_expression;</highlight></codeline>
<codeline lineno="16702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16703"><highlight class="normal"></highlight></codeline>
<codeline lineno="16704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_access_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16707"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_access_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16709"><highlight class="normal"></highlight></codeline>
<codeline lineno="16710"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_access_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16713"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_access_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16715"><highlight class="normal"></highlight></codeline>
<codeline lineno="16716"><highlight class="normal">KerMLParser::Metadata_access_expressionContext*<sp/>KerMLParser::metadata_access_expression()<sp/>{</highlight></codeline>
<codeline lineno="16717"><highlight class="normal"><sp/><sp/><ref refid="d3/d7b/class_ker_m_l_parser_1_1_metadata__access__expression_context" kindref="compound">Metadata_access_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d7b/class_ker_m_l_parser_1_1_metadata__access__expression_context" kindref="compound">Metadata_access_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16718"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>398,<sp/>KerMLParser::RuleMetadata_access_expression);</highlight></codeline>
<codeline lineno="16719"><highlight class="normal"></highlight></codeline>
<codeline lineno="16720"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16722"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16724"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16725"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16726"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16728"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16729"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1740);</highlight></codeline>
<codeline lineno="16730"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="16731"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1741);</highlight></codeline>
<codeline lineno="16732"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="16733"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1742);</highlight></codeline>
<codeline lineno="16734"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_METADATA);</highlight></codeline>
<codeline lineno="16735"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16738"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16739"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16740"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16742"><highlight class="normal"></highlight></codeline>
<codeline lineno="16743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16745"><highlight class="normal"></highlight></codeline>
<codeline lineno="16746"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Invocation_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16747"><highlight class="normal"></highlight></codeline>
<codeline lineno="16748"><highlight class="normal">KerMLParser::Invocation_expressionContext::Invocation_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16749"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16751"><highlight class="normal"></highlight></codeline>
<codeline lineno="16752"><highlight class="normal"><ref refid="de/d95/class_ker_m_l_parser_1_1_internal__invocation__expression_context" kindref="compound">KerMLParser::Internal_invocation_expressionContext</ref>*<sp/>KerMLParser::Invocation_expressionContext::internal_invocation_expression()<sp/>{</highlight></codeline>
<codeline lineno="16753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Internal_invocation_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="16754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16755"><highlight class="normal"></highlight></codeline>
<codeline lineno="16756"><highlight class="normal"></highlight></codeline>
<codeline lineno="16757"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Invocation_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleInvocation_expression;</highlight></codeline>
<codeline lineno="16759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16760"><highlight class="normal"></highlight></codeline>
<codeline lineno="16761"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Invocation_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16764"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterInvocation_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16766"><highlight class="normal"></highlight></codeline>
<codeline lineno="16767"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Invocation_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16770"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitInvocation_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16772"><highlight class="normal"></highlight></codeline>
<codeline lineno="16773"><highlight class="normal">KerMLParser::Invocation_expressionContext*<sp/>KerMLParser::invocation_expression()<sp/>{</highlight></codeline>
<codeline lineno="16774"><highlight class="normal"><sp/><sp/><ref refid="d5/d5a/class_ker_m_l_parser_1_1_invocation__expression_context" kindref="compound">Invocation_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d5a/class_ker_m_l_parser_1_1_invocation__expression_context" kindref="compound">Invocation_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16775"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>400,<sp/>KerMLParser::RuleInvocation_expression);</highlight></codeline>
<codeline lineno="16776"><highlight class="normal"></highlight></codeline>
<codeline lineno="16777"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16779"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16781"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16782"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16783"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16785"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16786"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1744);</highlight></codeline>
<codeline lineno="16787"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_invocation_expression();</highlight></codeline>
<codeline lineno="16788"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16791"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16792"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16793"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16795"><highlight class="normal"></highlight></codeline>
<codeline lineno="16796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16798"><highlight class="normal"></highlight></codeline>
<codeline lineno="16799"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Internal_invocation_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16800"><highlight class="normal"></highlight></codeline>
<codeline lineno="16801"><highlight class="normal">KerMLParser::Internal_invocation_expressionContext::Internal_invocation_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16802"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16804"><highlight class="normal"></highlight></codeline>
<codeline lineno="16805"><highlight class="normal"><ref refid="de/d15/class_ker_m_l_parser_1_1_argument__list_context" kindref="compound">KerMLParser::Argument_listContext</ref>*<sp/>KerMLParser::Internal_invocation_expressionContext::argument_list()<sp/>{</highlight></codeline>
<codeline lineno="16806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_listContext&gt;(0);</highlight></codeline>
<codeline lineno="16807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16808"><highlight class="normal"></highlight></codeline>
<codeline lineno="16809"><highlight class="normal">KerMLParser::Owned_feature_typingContext*<sp/>KerMLParser::Internal_invocation_expressionContext::owned_feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="16810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="16811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16812"><highlight class="normal"></highlight></codeline>
<codeline lineno="16813"><highlight class="normal">KerMLParser::Named_argument_listContext*<sp/>KerMLParser::Internal_invocation_expressionContext::named_argument_list()<sp/>{</highlight></codeline>
<codeline lineno="16814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Named_argument_listContext&gt;(0);</highlight></codeline>
<codeline lineno="16815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16816"><highlight class="normal"></highlight></codeline>
<codeline lineno="16817"><highlight class="normal"></highlight></codeline>
<codeline lineno="16818"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Internal_invocation_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleInternal_invocation_expression;</highlight></codeline>
<codeline lineno="16820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16821"><highlight class="normal"></highlight></codeline>
<codeline lineno="16822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Internal_invocation_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16825"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterInternal_invocation_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16827"><highlight class="normal"></highlight></codeline>
<codeline lineno="16828"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Internal_invocation_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16831"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitInternal_invocation_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16833"><highlight class="normal"></highlight></codeline>
<codeline lineno="16834"><highlight class="normal">KerMLParser::Internal_invocation_expressionContext*<sp/>KerMLParser::internal_invocation_expression()<sp/>{</highlight></codeline>
<codeline lineno="16835"><highlight class="normal"><sp/><sp/><ref refid="de/d95/class_ker_m_l_parser_1_1_internal__invocation__expression_context" kindref="compound">Internal_invocation_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d95/class_ker_m_l_parser_1_1_internal__invocation__expression_context" kindref="compound">Internal_invocation_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16836"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>402,<sp/>KerMLParser::RuleInternal_invocation_expression);</highlight></codeline>
<codeline lineno="16837"><highlight class="normal"></highlight></codeline>
<codeline lineno="16838"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16840"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16842"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16843"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16844"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16846"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16847"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1748);</highlight></codeline>
<codeline lineno="16848"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>173,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="16850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="16851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1746);</highlight></codeline>
<codeline lineno="16852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_typing();</highlight></codeline>
<codeline lineno="16853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16855"><highlight class="normal"></highlight></codeline>
<codeline lineno="16856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="16857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1747);</highlight></codeline>
<codeline lineno="16858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>named_argument_list();</highlight></codeline>
<codeline lineno="16859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16861"><highlight class="normal"></highlight></codeline>
<codeline lineno="16862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16865"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1750);</highlight></codeline>
<codeline lineno="16866"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_list();</highlight></codeline>
<codeline lineno="16867"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16870"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16871"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16872"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16873"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16874"><highlight class="normal"></highlight></codeline>
<codeline lineno="16875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16877"><highlight class="normal"></highlight></codeline>
<codeline lineno="16878"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Argument_listContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16879"><highlight class="normal"></highlight></codeline>
<codeline lineno="16880"><highlight class="normal">KerMLParser::Argument_listContext::Argument_listContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16881"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16883"><highlight class="normal"></highlight></codeline>
<codeline lineno="16884"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Argument_listContext::SYMBOL_ROUND_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="16885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="16886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16887"><highlight class="normal"></highlight></codeline>
<codeline lineno="16888"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Argument_listContext::SYMBOL_ROUND_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="16889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="16890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16891"><highlight class="normal"></highlight></codeline>
<codeline lineno="16892"><highlight class="normal">KerMLParser::Owned_expressionsContext*<sp/>KerMLParser::Argument_listContext::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="16893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionsContext&gt;(0);</highlight></codeline>
<codeline lineno="16894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16895"><highlight class="normal"></highlight></codeline>
<codeline lineno="16896"><highlight class="normal">KerMLParser::Positional_argument_listContext*<sp/>KerMLParser::Argument_listContext::positional_argument_list()<sp/>{</highlight></codeline>
<codeline lineno="16897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Positional_argument_listContext&gt;(0);</highlight></codeline>
<codeline lineno="16898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16899"><highlight class="normal"></highlight></codeline>
<codeline lineno="16900"><highlight class="normal">KerMLParser::Named_argument_listContext*<sp/>KerMLParser::Argument_listContext::named_argument_list()<sp/>{</highlight></codeline>
<codeline lineno="16901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Named_argument_listContext&gt;(0);</highlight></codeline>
<codeline lineno="16902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16903"><highlight class="normal"></highlight></codeline>
<codeline lineno="16904"><highlight class="normal"></highlight></codeline>
<codeline lineno="16905"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Argument_listContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleArgument_list;</highlight></codeline>
<codeline lineno="16907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16908"><highlight class="normal"></highlight></codeline>
<codeline lineno="16909"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_listContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16912"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterArgument_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16914"><highlight class="normal"></highlight></codeline>
<codeline lineno="16915"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Argument_listContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="16916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="16917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16918"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitArgument_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16920"><highlight class="normal"></highlight></codeline>
<codeline lineno="16921"><highlight class="normal">KerMLParser::Argument_listContext*<sp/>KerMLParser::argument_list()<sp/>{</highlight></codeline>
<codeline lineno="16922"><highlight class="normal"><sp/><sp/><ref refid="de/d15/class_ker_m_l_parser_1_1_argument__list_context" kindref="compound">Argument_listContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d15/class_ker_m_l_parser_1_1_argument__list_context" kindref="compound">Argument_listContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="16923"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>404,<sp/>KerMLParser::RuleArgument_list);</highlight></codeline>
<codeline lineno="16924"><highlight class="normal"></highlight></codeline>
<codeline lineno="16925"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="16927"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="16929"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16930"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="16931"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="16932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16933"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="16934"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1752);</highlight></codeline>
<codeline lineno="16935"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="16936"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1757);</highlight></codeline>
<codeline lineno="16937"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16938"><highlight class="normal"></highlight></codeline>
<codeline lineno="16939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>174,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="16940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="16941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1753);</highlight></codeline>
<codeline lineno="16942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_expressions();</highlight></codeline>
<codeline lineno="16943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1754);</highlight></codeline>
<codeline lineno="16944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>positional_argument_list();</highlight></codeline>
<codeline lineno="16945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16947"><highlight class="normal"></highlight></codeline>
<codeline lineno="16948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="16949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1756);</highlight></codeline>
<codeline lineno="16950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>named_argument_list();</highlight></codeline>
<codeline lineno="16951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16953"><highlight class="normal"></highlight></codeline>
<codeline lineno="16954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16957"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1759);</highlight></codeline>
<codeline lineno="16958"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="16959"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="16962"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="16963"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="16964"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="16965"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16966"><highlight class="normal"></highlight></codeline>
<codeline lineno="16967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="16968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16969"><highlight class="normal"></highlight></codeline>
<codeline lineno="16970"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Positional_argument_listContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16971"><highlight class="normal"></highlight></codeline>
<codeline lineno="16972"><highlight class="normal">KerMLParser::Positional_argument_listContext::Positional_argument_listContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="16973"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="16974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16975"><highlight class="normal"></highlight></codeline>
<codeline lineno="16976"><highlight class="normal"><ref refid="da/d16/class_ker_m_l_parser_1_1_argument__member_context" kindref="compound">KerMLParser::Argument_memberContext</ref>*<sp/>KerMLParser::Positional_argument_listContext::argument_member()<sp/>{</highlight></codeline>
<codeline lineno="16977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Argument_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="16978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16979"><highlight class="normal"></highlight></codeline>
<codeline lineno="16980"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Positional_argument_listContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="16981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="16982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16983"><highlight class="normal"></highlight></codeline>
<codeline lineno="16984"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Positional_argument_listContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="16985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="16986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16987"><highlight class="normal"></highlight></codeline>
<codeline lineno="16988"><highlight class="normal">std::vector&lt;KerMLParser::Owned_expressionsContext<sp/>*&gt;<sp/>KerMLParser::Positional_argument_listContext::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="16989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Owned_expressionsContext&gt;();</highlight></codeline>
<codeline lineno="16990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16991"><highlight class="normal"></highlight></codeline>
<codeline lineno="16992"><highlight class="normal">KerMLParser::Owned_expressionsContext*<sp/>KerMLParser::Positional_argument_listContext::owned_expressions(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="16993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionsContext&gt;(i);</highlight></codeline>
<codeline lineno="16994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16995"><highlight class="normal"></highlight></codeline>
<codeline lineno="16996"><highlight class="normal"></highlight></codeline>
<codeline lineno="16997"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Positional_argument_listContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePositional_argument_list;</highlight></codeline>
<codeline lineno="16999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17000"><highlight class="normal"></highlight></codeline>
<codeline lineno="17001"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Positional_argument_listContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17004"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPositional_argument_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17006"><highlight class="normal"></highlight></codeline>
<codeline lineno="17007"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Positional_argument_listContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17010"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPositional_argument_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17012"><highlight class="normal"></highlight></codeline>
<codeline lineno="17013"><highlight class="normal">KerMLParser::Positional_argument_listContext*<sp/>KerMLParser::positional_argument_list()<sp/>{</highlight></codeline>
<codeline lineno="17014"><highlight class="normal"><sp/><sp/><ref refid="df/d88/class_ker_m_l_parser_1_1_positional__argument__list_context" kindref="compound">Positional_argument_listContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d88/class_ker_m_l_parser_1_1_positional__argument__list_context" kindref="compound">Positional_argument_listContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17015"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>406,<sp/>KerMLParser::RulePositional_argument_list);</highlight></codeline>
<codeline lineno="17016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17017"><highlight class="normal"></highlight></codeline>
<codeline lineno="17018"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17020"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17022"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17023"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17024"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17026"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17027"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1761);</highlight></codeline>
<codeline lineno="17028"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_member();</highlight></codeline>
<codeline lineno="17029"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1766);</highlight></codeline>
<codeline lineno="17030"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17031"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="17033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1762);</highlight></codeline>
<codeline lineno="17034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="17035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1763);</highlight></codeline>
<codeline lineno="17036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_expressions();</highlight></codeline>
<codeline lineno="17037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1768);</highlight></codeline>
<codeline lineno="17038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17041"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17042"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17044"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17045"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17046"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17047"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17048"><highlight class="normal"></highlight></codeline>
<codeline lineno="17049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17051"><highlight class="normal"></highlight></codeline>
<codeline lineno="17052"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Named_argument_listContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17053"><highlight class="normal"></highlight></codeline>
<codeline lineno="17054"><highlight class="normal">KerMLParser::Named_argument_listContext::Named_argument_listContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17055"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17057"><highlight class="normal"></highlight></codeline>
<codeline lineno="17058"><highlight class="normal">std::vector&lt;KerMLParser::Named_argument_memberContext<sp/>*&gt;<sp/>KerMLParser::Named_argument_listContext::named_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="17059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Named_argument_memberContext&gt;();</highlight></codeline>
<codeline lineno="17060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17061"><highlight class="normal"></highlight></codeline>
<codeline lineno="17062"><highlight class="normal">KerMLParser::Named_argument_memberContext*<sp/>KerMLParser::Named_argument_listContext::named_argument_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="17063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Named_argument_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="17064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17065"><highlight class="normal"></highlight></codeline>
<codeline lineno="17066"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Named_argument_listContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="17067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="17068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17069"><highlight class="normal"></highlight></codeline>
<codeline lineno="17070"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Named_argument_listContext::SYMBOL_COMMA(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="17071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>i);</highlight></codeline>
<codeline lineno="17072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17073"><highlight class="normal"></highlight></codeline>
<codeline lineno="17074"><highlight class="normal"></highlight></codeline>
<codeline lineno="17075"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Named_argument_listContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamed_argument_list;</highlight></codeline>
<codeline lineno="17077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17078"><highlight class="normal"></highlight></codeline>
<codeline lineno="17079"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Named_argument_listContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17082"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamed_argument_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17084"><highlight class="normal"></highlight></codeline>
<codeline lineno="17085"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Named_argument_listContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17088"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamed_argument_list(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17090"><highlight class="normal"></highlight></codeline>
<codeline lineno="17091"><highlight class="normal">KerMLParser::Named_argument_listContext*<sp/>KerMLParser::named_argument_list()<sp/>{</highlight></codeline>
<codeline lineno="17092"><highlight class="normal"><sp/><sp/><ref refid="d2/d71/class_ker_m_l_parser_1_1_named__argument__list_context" kindref="compound">Named_argument_listContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d71/class_ker_m_l_parser_1_1_named__argument__list_context" kindref="compound">Named_argument_listContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17093"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>408,<sp/>KerMLParser::RuleNamed_argument_list);</highlight></codeline>
<codeline lineno="17094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17095"><highlight class="normal"></highlight></codeline>
<codeline lineno="17096"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17098"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17101"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17102"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17104"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17105"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1769);</highlight></codeline>
<codeline lineno="17106"><highlight class="normal"><sp/><sp/><sp/><sp/>named_argument_member();</highlight></codeline>
<codeline lineno="17107"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1774);</highlight></codeline>
<codeline lineno="17108"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17109"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_COMMA)<sp/>{</highlight></codeline>
<codeline lineno="17111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1770);</highlight></codeline>
<codeline lineno="17112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="17113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1771);</highlight></codeline>
<codeline lineno="17114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>named_argument_member();</highlight></codeline>
<codeline lineno="17115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1776);</highlight></codeline>
<codeline lineno="17116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17119"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17122"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17123"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17124"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17126"><highlight class="normal"></highlight></codeline>
<codeline lineno="17127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17129"><highlight class="normal"></highlight></codeline>
<codeline lineno="17130"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Named_argument_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17131"><highlight class="normal"></highlight></codeline>
<codeline lineno="17132"><highlight class="normal">KerMLParser::Named_argument_memberContext::Named_argument_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17133"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17135"><highlight class="normal"></highlight></codeline>
<codeline lineno="17136"><highlight class="normal"><ref refid="d9/d91/class_ker_m_l_parser_1_1_named__argument_context" kindref="compound">KerMLParser::Named_argumentContext</ref>*<sp/>KerMLParser::Named_argument_memberContext::named_argument()<sp/>{</highlight></codeline>
<codeline lineno="17137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Named_argumentContext&gt;(0);</highlight></codeline>
<codeline lineno="17138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17139"><highlight class="normal"></highlight></codeline>
<codeline lineno="17140"><highlight class="normal"></highlight></codeline>
<codeline lineno="17141"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Named_argument_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamed_argument_member;</highlight></codeline>
<codeline lineno="17143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17144"><highlight class="normal"></highlight></codeline>
<codeline lineno="17145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Named_argument_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17148"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamed_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17150"><highlight class="normal"></highlight></codeline>
<codeline lineno="17151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Named_argument_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17154"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamed_argument_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17156"><highlight class="normal"></highlight></codeline>
<codeline lineno="17157"><highlight class="normal">KerMLParser::Named_argument_memberContext*<sp/>KerMLParser::named_argument_member()<sp/>{</highlight></codeline>
<codeline lineno="17158"><highlight class="normal"><sp/><sp/><ref refid="d6/d82/class_ker_m_l_parser_1_1_named__argument__member_context" kindref="compound">Named_argument_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/d82/class_ker_m_l_parser_1_1_named__argument__member_context" kindref="compound">Named_argument_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17159"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>410,<sp/>KerMLParser::RuleNamed_argument_member);</highlight></codeline>
<codeline lineno="17160"><highlight class="normal"></highlight></codeline>
<codeline lineno="17161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17163"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17166"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17167"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17169"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17170"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1777);</highlight></codeline>
<codeline lineno="17171"><highlight class="normal"><sp/><sp/><sp/><sp/>named_argument();</highlight></codeline>
<codeline lineno="17172"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17175"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17176"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17177"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17179"><highlight class="normal"></highlight></codeline>
<codeline lineno="17180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17182"><highlight class="normal"></highlight></codeline>
<codeline lineno="17183"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Named_argumentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17184"><highlight class="normal"></highlight></codeline>
<codeline lineno="17185"><highlight class="normal">KerMLParser::Named_argumentContext::Named_argumentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17186"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17188"><highlight class="normal"></highlight></codeline>
<codeline lineno="17189"><highlight class="normal"><ref refid="db/d13/class_ker_m_l_parser_1_1_paramenter__redefinition_context" kindref="compound">KerMLParser::Paramenter_redefinitionContext</ref>*<sp/>KerMLParser::Named_argumentContext::paramenter_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="17190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Paramenter_redefinitionContext&gt;(0);</highlight></codeline>
<codeline lineno="17191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17192"><highlight class="normal"></highlight></codeline>
<codeline lineno="17193"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Named_argumentContext::SYMBOL_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="17194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="17195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17196"><highlight class="normal"></highlight></codeline>
<codeline lineno="17197"><highlight class="normal">KerMLParser::Owned_expressionsContext*<sp/>KerMLParser::Named_argumentContext::owned_expressions()<sp/>{</highlight></codeline>
<codeline lineno="17198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionsContext&gt;(0);</highlight></codeline>
<codeline lineno="17199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17200"><highlight class="normal"></highlight></codeline>
<codeline lineno="17201"><highlight class="normal"></highlight></codeline>
<codeline lineno="17202"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Named_argumentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleNamed_argument;</highlight></codeline>
<codeline lineno="17204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17205"><highlight class="normal"></highlight></codeline>
<codeline lineno="17206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Named_argumentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17209"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterNamed_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17211"><highlight class="normal"></highlight></codeline>
<codeline lineno="17212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Named_argumentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17215"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitNamed_argument(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17217"><highlight class="normal"></highlight></codeline>
<codeline lineno="17218"><highlight class="normal">KerMLParser::Named_argumentContext*<sp/>KerMLParser::named_argument()<sp/>{</highlight></codeline>
<codeline lineno="17219"><highlight class="normal"><sp/><sp/><ref refid="d9/d91/class_ker_m_l_parser_1_1_named__argument_context" kindref="compound">Named_argumentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d91/class_ker_m_l_parser_1_1_named__argument_context" kindref="compound">Named_argumentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17220"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>412,<sp/>KerMLParser::RuleNamed_argument);</highlight></codeline>
<codeline lineno="17221"><highlight class="normal"></highlight></codeline>
<codeline lineno="17222"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17224"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17227"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17228"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17230"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17231"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1779);</highlight></codeline>
<codeline lineno="17232"><highlight class="normal"><sp/><sp/><sp/><sp/>paramenter_redefinition();</highlight></codeline>
<codeline lineno="17233"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1780);</highlight></codeline>
<codeline lineno="17234"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_EQUALS);</highlight></codeline>
<codeline lineno="17235"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1781);</highlight></codeline>
<codeline lineno="17236"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expressions();</highlight></codeline>
<codeline lineno="17237"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17240"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17241"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17242"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17244"><highlight class="normal"></highlight></codeline>
<codeline lineno="17245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17247"><highlight class="normal"></highlight></codeline>
<codeline lineno="17248"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Paramenter_redefinitionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17249"><highlight class="normal"></highlight></codeline>
<codeline lineno="17250"><highlight class="normal">KerMLParser::Paramenter_redefinitionContext::Paramenter_redefinitionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17251"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17253"><highlight class="normal"></highlight></codeline>
<codeline lineno="17254"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Paramenter_redefinitionContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="17255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="17256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17257"><highlight class="normal"></highlight></codeline>
<codeline lineno="17258"><highlight class="normal"></highlight></codeline>
<codeline lineno="17259"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Paramenter_redefinitionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleParamenter_redefinition;</highlight></codeline>
<codeline lineno="17261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17262"><highlight class="normal"></highlight></codeline>
<codeline lineno="17263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Paramenter_redefinitionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17266"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterParamenter_redefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17268"><highlight class="normal"></highlight></codeline>
<codeline lineno="17269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Paramenter_redefinitionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17272"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitParamenter_redefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17274"><highlight class="normal"></highlight></codeline>
<codeline lineno="17275"><highlight class="normal">KerMLParser::Paramenter_redefinitionContext*<sp/>KerMLParser::paramenter_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="17276"><highlight class="normal"><sp/><sp/><ref refid="db/d13/class_ker_m_l_parser_1_1_paramenter__redefinition_context" kindref="compound">Paramenter_redefinitionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d13/class_ker_m_l_parser_1_1_paramenter__redefinition_context" kindref="compound">Paramenter_redefinitionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17277"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>414,<sp/>KerMLParser::RuleParamenter_redefinition);</highlight></codeline>
<codeline lineno="17278"><highlight class="normal"></highlight></codeline>
<codeline lineno="17279"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17281"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17284"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17285"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17287"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17288"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1783);</highlight></codeline>
<codeline lineno="17289"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="17290"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17293"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17294"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17295"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17297"><highlight class="normal"></highlight></codeline>
<codeline lineno="17298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17300"><highlight class="normal"></highlight></codeline>
<codeline lineno="17301"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Body_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17302"><highlight class="normal"></highlight></codeline>
<codeline lineno="17303"><highlight class="normal">KerMLParser::Body_expressionContext::Body_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17304"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17306"><highlight class="normal"></highlight></codeline>
<codeline lineno="17307"><highlight class="normal"><ref refid="d9/d6f/class_ker_m_l_parser_1_1_expression__body__member_context" kindref="compound">KerMLParser::Expression_body_memberContext</ref>*<sp/>KerMLParser::Body_expressionContext::expression_body_member()<sp/>{</highlight></codeline>
<codeline lineno="17308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Expression_body_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="17309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17310"><highlight class="normal"></highlight></codeline>
<codeline lineno="17311"><highlight class="normal"></highlight></codeline>
<codeline lineno="17312"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Body_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBody_expression;</highlight></codeline>
<codeline lineno="17314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17315"><highlight class="normal"></highlight></codeline>
<codeline lineno="17316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17319"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBody_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17321"><highlight class="normal"></highlight></codeline>
<codeline lineno="17322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Body_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17325"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBody_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17327"><highlight class="normal"></highlight></codeline>
<codeline lineno="17328"><highlight class="normal">KerMLParser::Body_expressionContext*<sp/>KerMLParser::body_expression()<sp/>{</highlight></codeline>
<codeline lineno="17329"><highlight class="normal"><sp/><sp/><ref refid="df/d4f/class_ker_m_l_parser_1_1_body__expression_context" kindref="compound">Body_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d4f/class_ker_m_l_parser_1_1_body__expression_context" kindref="compound">Body_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17330"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>416,<sp/>KerMLParser::RuleBody_expression);</highlight></codeline>
<codeline lineno="17331"><highlight class="normal"></highlight></codeline>
<codeline lineno="17332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17334"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17337"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17338"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17340"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17341"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1785);</highlight></codeline>
<codeline lineno="17342"><highlight class="normal"><sp/><sp/><sp/><sp/>expression_body_member();</highlight></codeline>
<codeline lineno="17343"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17346"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17347"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17348"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17350"><highlight class="normal"></highlight></codeline>
<codeline lineno="17351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17353"><highlight class="normal"></highlight></codeline>
<codeline lineno="17354"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Expression_body_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17355"><highlight class="normal"></highlight></codeline>
<codeline lineno="17356"><highlight class="normal">KerMLParser::Expression_body_memberContext::Expression_body_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17357"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17359"><highlight class="normal"></highlight></codeline>
<codeline lineno="17360"><highlight class="normal"><ref refid="db/d59/class_ker_m_l_parser_1_1_expression__body_context" kindref="compound">KerMLParser::Expression_bodyContext</ref>*<sp/>KerMLParser::Expression_body_memberContext::expression_body()<sp/>{</highlight></codeline>
<codeline lineno="17361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Expression_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="17362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17363"><highlight class="normal"></highlight></codeline>
<codeline lineno="17364"><highlight class="normal"></highlight></codeline>
<codeline lineno="17365"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Expression_body_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleExpression_body_member;</highlight></codeline>
<codeline lineno="17367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17368"><highlight class="normal"></highlight></codeline>
<codeline lineno="17369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Expression_body_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17372"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterExpression_body_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17374"><highlight class="normal"></highlight></codeline>
<codeline lineno="17375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Expression_body_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17378"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitExpression_body_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17380"><highlight class="normal"></highlight></codeline>
<codeline lineno="17381"><highlight class="normal">KerMLParser::Expression_body_memberContext*<sp/>KerMLParser::expression_body_member()<sp/>{</highlight></codeline>
<codeline lineno="17382"><highlight class="normal"><sp/><sp/><ref refid="d9/d6f/class_ker_m_l_parser_1_1_expression__body__member_context" kindref="compound">Expression_body_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d6f/class_ker_m_l_parser_1_1_expression__body__member_context" kindref="compound">Expression_body_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17383"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>418,<sp/>KerMLParser::RuleExpression_body_member);</highlight></codeline>
<codeline lineno="17384"><highlight class="normal"></highlight></codeline>
<codeline lineno="17385"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17387"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17390"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17391"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17393"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17394"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1787);</highlight></codeline>
<codeline lineno="17395"><highlight class="normal"><sp/><sp/><sp/><sp/>expression_body();</highlight></codeline>
<codeline lineno="17396"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17399"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17400"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17401"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17403"><highlight class="normal"></highlight></codeline>
<codeline lineno="17404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17406"><highlight class="normal"></highlight></codeline>
<codeline lineno="17407"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Expression_bodyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17408"><highlight class="normal"></highlight></codeline>
<codeline lineno="17409"><highlight class="normal">KerMLParser::Expression_bodyContext::Expression_bodyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17410"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17412"><highlight class="normal"></highlight></codeline>
<codeline lineno="17413"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Expression_bodyContext::SYMBOL_ROUND_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="17414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="17415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17416"><highlight class="normal"></highlight></codeline>
<codeline lineno="17417"><highlight class="normal">KerMLParser::Function_body_partContext*<sp/>KerMLParser::Expression_bodyContext::function_body_part()<sp/>{</highlight></codeline>
<codeline lineno="17418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Function_body_partContext&gt;(0);</highlight></codeline>
<codeline lineno="17419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17420"><highlight class="normal"></highlight></codeline>
<codeline lineno="17421"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Expression_bodyContext::SYMBOL_ROUND_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="17422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="17423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17424"><highlight class="normal"></highlight></codeline>
<codeline lineno="17425"><highlight class="normal"></highlight></codeline>
<codeline lineno="17426"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Expression_bodyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleExpression_body;</highlight></codeline>
<codeline lineno="17428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17429"><highlight class="normal"></highlight></codeline>
<codeline lineno="17430"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Expression_bodyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17433"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterExpression_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17435"><highlight class="normal"></highlight></codeline>
<codeline lineno="17436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Expression_bodyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17439"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitExpression_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17441"><highlight class="normal"></highlight></codeline>
<codeline lineno="17442"><highlight class="normal">KerMLParser::Expression_bodyContext*<sp/>KerMLParser::expression_body()<sp/>{</highlight></codeline>
<codeline lineno="17443"><highlight class="normal"><sp/><sp/><ref refid="db/d59/class_ker_m_l_parser_1_1_expression__body_context" kindref="compound">Expression_bodyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/d59/class_ker_m_l_parser_1_1_expression__body_context" kindref="compound">Expression_bodyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17444"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>420,<sp/>KerMLParser::RuleExpression_body);</highlight></codeline>
<codeline lineno="17445"><highlight class="normal"></highlight></codeline>
<codeline lineno="17446"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17448"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17451"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17452"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17454"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17455"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1789);</highlight></codeline>
<codeline lineno="17456"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="17457"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1790);</highlight></codeline>
<codeline lineno="17458"><highlight class="normal"><sp/><sp/><sp/><sp/>function_body_part();</highlight></codeline>
<codeline lineno="17459"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1791);</highlight></codeline>
<codeline lineno="17460"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ROUND_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="17461"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17464"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17465"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17466"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17468"><highlight class="normal"></highlight></codeline>
<codeline lineno="17469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17471"><highlight class="normal"></highlight></codeline>
<codeline lineno="17472"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Literal_expressionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17473"><highlight class="normal"></highlight></codeline>
<codeline lineno="17474"><highlight class="normal">KerMLParser::Literal_expressionContext::Literal_expressionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17475"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17477"><highlight class="normal"></highlight></codeline>
<codeline lineno="17478"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Literal_expressionContext::KEYWORD_TRUE()<sp/>{</highlight></codeline>
<codeline lineno="17479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TRUE,<sp/>0);</highlight></codeline>
<codeline lineno="17480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17481"><highlight class="normal"></highlight></codeline>
<codeline lineno="17482"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Literal_expressionContext::KEYWORD_FALSE()<sp/>{</highlight></codeline>
<codeline lineno="17483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FALSE,<sp/>0);</highlight></codeline>
<codeline lineno="17484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17485"><highlight class="normal"></highlight></codeline>
<codeline lineno="17486"><highlight class="normal">KerMLParser::Literal_stringContext*<sp/>KerMLParser::Literal_expressionContext::literal_string()<sp/>{</highlight></codeline>
<codeline lineno="17487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Literal_stringContext&gt;(0);</highlight></codeline>
<codeline lineno="17488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17489"><highlight class="normal"></highlight></codeline>
<codeline lineno="17490"><highlight class="normal">KerMLParser::Literal_integerContext*<sp/>KerMLParser::Literal_expressionContext::literal_integer()<sp/>{</highlight></codeline>
<codeline lineno="17491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Literal_integerContext&gt;(0);</highlight></codeline>
<codeline lineno="17492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17493"><highlight class="normal"></highlight></codeline>
<codeline lineno="17494"><highlight class="normal">KerMLParser::Literal_realContext*<sp/>KerMLParser::Literal_expressionContext::literal_real()<sp/>{</highlight></codeline>
<codeline lineno="17495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Literal_realContext&gt;(0);</highlight></codeline>
<codeline lineno="17496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17497"><highlight class="normal"></highlight></codeline>
<codeline lineno="17498"><highlight class="normal">KerMLParser::Literal_infinityContext*<sp/>KerMLParser::Literal_expressionContext::literal_infinity()<sp/>{</highlight></codeline>
<codeline lineno="17499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Literal_infinityContext&gt;(0);</highlight></codeline>
<codeline lineno="17500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17501"><highlight class="normal"></highlight></codeline>
<codeline lineno="17502"><highlight class="normal"></highlight></codeline>
<codeline lineno="17503"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Literal_expressionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleLiteral_expression;</highlight></codeline>
<codeline lineno="17505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17506"><highlight class="normal"></highlight></codeline>
<codeline lineno="17507"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_expressionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17510"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterLiteral_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17512"><highlight class="normal"></highlight></codeline>
<codeline lineno="17513"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_expressionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17516"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitLiteral_expression(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17518"><highlight class="normal"></highlight></codeline>
<codeline lineno="17519"><highlight class="normal">KerMLParser::Literal_expressionContext*<sp/>KerMLParser::literal_expression()<sp/>{</highlight></codeline>
<codeline lineno="17520"><highlight class="normal"><sp/><sp/><ref refid="d7/d7b/class_ker_m_l_parser_1_1_literal__expression_context" kindref="compound">Literal_expressionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/d7b/class_ker_m_l_parser_1_1_literal__expression_context" kindref="compound">Literal_expressionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17521"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>422,<sp/>KerMLParser::RuleLiteral_expression);</highlight></codeline>
<codeline lineno="17522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17523"><highlight class="normal"></highlight></codeline>
<codeline lineno="17524"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17526"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17529"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17530"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17532"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1799);</highlight></codeline>
<codeline lineno="17533"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>177,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="17535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="17536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1793);</highlight></codeline>
<codeline lineno="17538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_FALSE</highlight></codeline>
<codeline lineno="17540"><highlight class="normal"></highlight></codeline>
<codeline lineno="17541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_TRUE))<sp/>{</highlight></codeline>
<codeline lineno="17542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="17547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17550"><highlight class="normal"></highlight></codeline>
<codeline lineno="17551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="17552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="17553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1794);</highlight></codeline>
<codeline lineno="17554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>literal_string();</highlight></codeline>
<codeline lineno="17555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17557"><highlight class="normal"></highlight></codeline>
<codeline lineno="17558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="17559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="17560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1795);</highlight></codeline>
<codeline lineno="17561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>literal_integer();</highlight></codeline>
<codeline lineno="17562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17564"><highlight class="normal"></highlight></codeline>
<codeline lineno="17565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="17566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="17567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1796);</highlight></codeline>
<codeline lineno="17568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>literal_real();</highlight></codeline>
<codeline lineno="17569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17571"><highlight class="normal"></highlight></codeline>
<codeline lineno="17572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{</highlight></codeline>
<codeline lineno="17573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>5);</highlight></codeline>
<codeline lineno="17574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1797);</highlight></codeline>
<codeline lineno="17575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>literal_integer();</highlight></codeline>
<codeline lineno="17576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17578"><highlight class="normal"></highlight></codeline>
<codeline lineno="17579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{</highlight></codeline>
<codeline lineno="17580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>6);</highlight></codeline>
<codeline lineno="17581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1798);</highlight></codeline>
<codeline lineno="17582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>literal_infinity();</highlight></codeline>
<codeline lineno="17583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17585"><highlight class="normal"></highlight></codeline>
<codeline lineno="17586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17589"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17592"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17593"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17594"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17596"><highlight class="normal"></highlight></codeline>
<codeline lineno="17597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17599"><highlight class="normal"></highlight></codeline>
<codeline lineno="17600"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Literal_booleanContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17601"><highlight class="normal"></highlight></codeline>
<codeline lineno="17602"><highlight class="normal">KerMLParser::Literal_booleanContext::Literal_booleanContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17603"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17605"><highlight class="normal"></highlight></codeline>
<codeline lineno="17606"><highlight class="normal"><ref refid="dd/df7/class_ker_m_l_parser_1_1_boolean__value_context" kindref="compound">KerMLParser::Boolean_valueContext</ref>*<sp/>KerMLParser::Literal_booleanContext::boolean_value()<sp/>{</highlight></codeline>
<codeline lineno="17607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Boolean_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="17608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17609"><highlight class="normal"></highlight></codeline>
<codeline lineno="17610"><highlight class="normal"></highlight></codeline>
<codeline lineno="17611"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Literal_booleanContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleLiteral_boolean;</highlight></codeline>
<codeline lineno="17613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17614"><highlight class="normal"></highlight></codeline>
<codeline lineno="17615"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_booleanContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17618"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterLiteral_boolean(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17620"><highlight class="normal"></highlight></codeline>
<codeline lineno="17621"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_booleanContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17624"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitLiteral_boolean(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17626"><highlight class="normal"></highlight></codeline>
<codeline lineno="17627"><highlight class="normal">KerMLParser::Literal_booleanContext*<sp/>KerMLParser::literal_boolean()<sp/>{</highlight></codeline>
<codeline lineno="17628"><highlight class="normal"><sp/><sp/><ref refid="d8/dda/class_ker_m_l_parser_1_1_literal__boolean_context" kindref="compound">Literal_booleanContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/dda/class_ker_m_l_parser_1_1_literal__boolean_context" kindref="compound">Literal_booleanContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17629"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>424,<sp/>KerMLParser::RuleLiteral_boolean);</highlight></codeline>
<codeline lineno="17630"><highlight class="normal"></highlight></codeline>
<codeline lineno="17631"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17633"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17635"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17636"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17637"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17639"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17640"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1801);</highlight></codeline>
<codeline lineno="17641"><highlight class="normal"><sp/><sp/><sp/><sp/>boolean_value();</highlight></codeline>
<codeline lineno="17642"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17645"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17646"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17647"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17649"><highlight class="normal"></highlight></codeline>
<codeline lineno="17650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17652"><highlight class="normal"></highlight></codeline>
<codeline lineno="17653"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Boolean_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17654"><highlight class="normal"></highlight></codeline>
<codeline lineno="17655"><highlight class="normal">KerMLParser::Boolean_valueContext::Boolean_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17656"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17658"><highlight class="normal"></highlight></codeline>
<codeline lineno="17659"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Boolean_valueContext::KEYWORD_TRUE()<sp/>{</highlight></codeline>
<codeline lineno="17660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TRUE,<sp/>0);</highlight></codeline>
<codeline lineno="17661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17662"><highlight class="normal"></highlight></codeline>
<codeline lineno="17663"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Boolean_valueContext::KEYWORD_FALSE()<sp/>{</highlight></codeline>
<codeline lineno="17664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FALSE,<sp/>0);</highlight></codeline>
<codeline lineno="17665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17666"><highlight class="normal"></highlight></codeline>
<codeline lineno="17667"><highlight class="normal"></highlight></codeline>
<codeline lineno="17668"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Boolean_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleBoolean_value;</highlight></codeline>
<codeline lineno="17670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17671"><highlight class="normal"></highlight></codeline>
<codeline lineno="17672"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Boolean_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17675"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterBoolean_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17677"><highlight class="normal"></highlight></codeline>
<codeline lineno="17678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Boolean_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17681"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitBoolean_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17683"><highlight class="normal"></highlight></codeline>
<codeline lineno="17684"><highlight class="normal">KerMLParser::Boolean_valueContext*<sp/>KerMLParser::boolean_value()<sp/>{</highlight></codeline>
<codeline lineno="17685"><highlight class="normal"><sp/><sp/><ref refid="dd/df7/class_ker_m_l_parser_1_1_boolean__value_context" kindref="compound">Boolean_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dd/df7/class_ker_m_l_parser_1_1_boolean__value_context" kindref="compound">Boolean_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17686"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>426,<sp/>KerMLParser::RuleBoolean_value);</highlight></codeline>
<codeline lineno="17687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17688"><highlight class="normal"></highlight></codeline>
<codeline lineno="17689"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17691"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17694"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17695"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17697"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17698"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1803);</highlight></codeline>
<codeline lineno="17699"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_FALSE</highlight></codeline>
<codeline lineno="17701"><highlight class="normal"></highlight></codeline>
<codeline lineno="17702"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_TRUE))<sp/>{</highlight></codeline>
<codeline lineno="17703"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="17708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17709"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17712"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17713"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17714"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17716"><highlight class="normal"></highlight></codeline>
<codeline lineno="17717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17719"><highlight class="normal"></highlight></codeline>
<codeline lineno="17720"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Literal_stringContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17721"><highlight class="normal"></highlight></codeline>
<codeline lineno="17722"><highlight class="normal">KerMLParser::Literal_stringContext::Literal_stringContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17723"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17725"><highlight class="normal"></highlight></codeline>
<codeline lineno="17726"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Literal_stringContext::STRING_VALUE()<sp/>{</highlight></codeline>
<codeline lineno="17727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::STRING_VALUE,<sp/>0);</highlight></codeline>
<codeline lineno="17728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17729"><highlight class="normal"></highlight></codeline>
<codeline lineno="17730"><highlight class="normal"></highlight></codeline>
<codeline lineno="17731"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Literal_stringContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleLiteral_string;</highlight></codeline>
<codeline lineno="17733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17734"><highlight class="normal"></highlight></codeline>
<codeline lineno="17735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_stringContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17738"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterLiteral_string(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17740"><highlight class="normal"></highlight></codeline>
<codeline lineno="17741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_stringContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17744"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitLiteral_string(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17746"><highlight class="normal"></highlight></codeline>
<codeline lineno="17747"><highlight class="normal">KerMLParser::Literal_stringContext*<sp/>KerMLParser::literal_string()<sp/>{</highlight></codeline>
<codeline lineno="17748"><highlight class="normal"><sp/><sp/><ref refid="d5/d32/class_ker_m_l_parser_1_1_literal__string_context" kindref="compound">Literal_stringContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d32/class_ker_m_l_parser_1_1_literal__string_context" kindref="compound">Literal_stringContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17749"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>428,<sp/>KerMLParser::RuleLiteral_string);</highlight></codeline>
<codeline lineno="17750"><highlight class="normal"></highlight></codeline>
<codeline lineno="17751"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17753"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17755"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17756"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17757"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17759"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17760"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1805);</highlight></codeline>
<codeline lineno="17761"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::STRING_VALUE);</highlight></codeline>
<codeline lineno="17762"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17765"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17766"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17767"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17769"><highlight class="normal"></highlight></codeline>
<codeline lineno="17770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17772"><highlight class="normal"></highlight></codeline>
<codeline lineno="17773"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Literal_integerContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17774"><highlight class="normal"></highlight></codeline>
<codeline lineno="17775"><highlight class="normal">KerMLParser::Literal_integerContext::Literal_integerContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17776"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17778"><highlight class="normal"></highlight></codeline>
<codeline lineno="17779"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Literal_integerContext::DECIMAL_VALUE()<sp/>{</highlight></codeline>
<codeline lineno="17780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::DECIMAL_VALUE,<sp/>0);</highlight></codeline>
<codeline lineno="17781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17782"><highlight class="normal"></highlight></codeline>
<codeline lineno="17783"><highlight class="normal"></highlight></codeline>
<codeline lineno="17784"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Literal_integerContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleLiteral_integer;</highlight></codeline>
<codeline lineno="17786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17787"><highlight class="normal"></highlight></codeline>
<codeline lineno="17788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_integerContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17791"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterLiteral_integer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17793"><highlight class="normal"></highlight></codeline>
<codeline lineno="17794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_integerContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17797"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitLiteral_integer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17799"><highlight class="normal"></highlight></codeline>
<codeline lineno="17800"><highlight class="normal">KerMLParser::Literal_integerContext*<sp/>KerMLParser::literal_integer()<sp/>{</highlight></codeline>
<codeline lineno="17801"><highlight class="normal"><sp/><sp/><ref refid="d2/d20/class_ker_m_l_parser_1_1_literal__integer_context" kindref="compound">Literal_integerContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d20/class_ker_m_l_parser_1_1_literal__integer_context" kindref="compound">Literal_integerContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17802"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>430,<sp/>KerMLParser::RuleLiteral_integer);</highlight></codeline>
<codeline lineno="17803"><highlight class="normal"></highlight></codeline>
<codeline lineno="17804"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17806"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17808"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17809"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17810"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17812"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17813"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1807);</highlight></codeline>
<codeline lineno="17814"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::DECIMAL_VALUE);</highlight></codeline>
<codeline lineno="17815"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17818"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17819"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17820"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17822"><highlight class="normal"></highlight></codeline>
<codeline lineno="17823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17825"><highlight class="normal"></highlight></codeline>
<codeline lineno="17826"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Literal_realContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17827"><highlight class="normal"></highlight></codeline>
<codeline lineno="17828"><highlight class="normal">KerMLParser::Literal_realContext::Literal_realContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17829"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17831"><highlight class="normal"></highlight></codeline>
<codeline lineno="17832"><highlight class="normal"><ref refid="d9/de7/class_ker_m_l_parser_1_1_real__value_context" kindref="compound">KerMLParser::Real_valueContext</ref>*<sp/>KerMLParser::Literal_realContext::real_value()<sp/>{</highlight></codeline>
<codeline lineno="17833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Real_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="17834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17835"><highlight class="normal"></highlight></codeline>
<codeline lineno="17836"><highlight class="normal"></highlight></codeline>
<codeline lineno="17837"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Literal_realContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleLiteral_real;</highlight></codeline>
<codeline lineno="17839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17840"><highlight class="normal"></highlight></codeline>
<codeline lineno="17841"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_realContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17844"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterLiteral_real(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17846"><highlight class="normal"></highlight></codeline>
<codeline lineno="17847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_realContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17850"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitLiteral_real(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17852"><highlight class="normal"></highlight></codeline>
<codeline lineno="17853"><highlight class="normal">KerMLParser::Literal_realContext*<sp/>KerMLParser::literal_real()<sp/>{</highlight></codeline>
<codeline lineno="17854"><highlight class="normal"><sp/><sp/><ref refid="db/de5/class_ker_m_l_parser_1_1_literal__real_context" kindref="compound">Literal_realContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/de5/class_ker_m_l_parser_1_1_literal__real_context" kindref="compound">Literal_realContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17855"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>432,<sp/>KerMLParser::RuleLiteral_real);</highlight></codeline>
<codeline lineno="17856"><highlight class="normal"></highlight></codeline>
<codeline lineno="17857"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17859"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17861"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17862"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17863"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17865"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17866"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1809);</highlight></codeline>
<codeline lineno="17867"><highlight class="normal"><sp/><sp/><sp/><sp/>real_value();</highlight></codeline>
<codeline lineno="17868"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17871"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17872"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17873"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17875"><highlight class="normal"></highlight></codeline>
<codeline lineno="17876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17878"><highlight class="normal"></highlight></codeline>
<codeline lineno="17879"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Real_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17880"><highlight class="normal"></highlight></codeline>
<codeline lineno="17881"><highlight class="normal">KerMLParser::Real_valueContext::Real_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17882"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17884"><highlight class="normal"></highlight></codeline>
<codeline lineno="17885"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Real_valueContext::SYMBOL_DOT()<sp/>{</highlight></codeline>
<codeline lineno="17886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT,<sp/>0);</highlight></codeline>
<codeline lineno="17887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17888"><highlight class="normal"></highlight></codeline>
<codeline lineno="17889"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::Real_valueContext::DECIMAL_VALUE()<sp/>{</highlight></codeline>
<codeline lineno="17890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::DECIMAL_VALUE);</highlight></codeline>
<codeline lineno="17891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17892"><highlight class="normal"></highlight></codeline>
<codeline lineno="17893"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Real_valueContext::DECIMAL_VALUE(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="17894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::DECIMAL_VALUE,<sp/>i);</highlight></codeline>
<codeline lineno="17895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17896"><highlight class="normal"></highlight></codeline>
<codeline lineno="17897"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Real_valueContext::EXPONENTIAL_VALUE()<sp/>{</highlight></codeline>
<codeline lineno="17898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::EXPONENTIAL_VALUE,<sp/>0);</highlight></codeline>
<codeline lineno="17899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17900"><highlight class="normal"></highlight></codeline>
<codeline lineno="17901"><highlight class="normal"></highlight></codeline>
<codeline lineno="17902"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Real_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleReal_value;</highlight></codeline>
<codeline lineno="17904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17905"><highlight class="normal"></highlight></codeline>
<codeline lineno="17906"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Real_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17909"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterReal_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17911"><highlight class="normal"></highlight></codeline>
<codeline lineno="17912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Real_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17915"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitReal_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17917"><highlight class="normal"></highlight></codeline>
<codeline lineno="17918"><highlight class="normal">KerMLParser::Real_valueContext*<sp/>KerMLParser::real_value()<sp/>{</highlight></codeline>
<codeline lineno="17919"><highlight class="normal"><sp/><sp/><ref refid="d9/de7/class_ker_m_l_parser_1_1_real__value_context" kindref="compound">Real_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/de7/class_ker_m_l_parser_1_1_real__value_context" kindref="compound">Real_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="17920"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>434,<sp/>KerMLParser::RuleReal_value);</highlight></codeline>
<codeline lineno="17921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17922"><highlight class="normal"></highlight></codeline>
<codeline lineno="17923"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="17925"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="17927"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17928"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="17929"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="17930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17931"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1817);</highlight></codeline>
<codeline lineno="17932"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="17934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_DOT:</highlight></codeline>
<codeline lineno="17935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::DECIMAL_VALUE:<sp/>{</highlight></codeline>
<codeline lineno="17936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="17937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1812);</highlight></codeline>
<codeline lineno="17938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17939"><highlight class="normal"></highlight></codeline>
<codeline lineno="17940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::DECIMAL_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="17942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1811);</highlight></codeline>
<codeline lineno="17943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::DECIMAL_VALUE);</highlight></codeline>
<codeline lineno="17944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1814);</highlight></codeline>
<codeline lineno="17946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="17947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1815);</highlight></codeline>
<codeline lineno="17948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="17949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::DECIMAL_VALUE</highlight></codeline>
<codeline lineno="17950"><highlight class="normal"></highlight></codeline>
<codeline lineno="17951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::EXPONENTIAL_VALUE))<sp/>{</highlight></codeline>
<codeline lineno="17952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="17957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17960"><highlight class="normal"></highlight></codeline>
<codeline lineno="17961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::EXPONENTIAL_VALUE:<sp/>{</highlight></codeline>
<codeline lineno="17962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="17963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1816);</highlight></codeline>
<codeline lineno="17964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::EXPONENTIAL_VALUE);</highlight></codeline>
<codeline lineno="17965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17967"><highlight class="normal"></highlight></codeline>
<codeline lineno="17968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17971"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17972"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="17974"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="17975"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="17976"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="17977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17978"><highlight class="normal"></highlight></codeline>
<codeline lineno="17979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="17980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17981"><highlight class="normal"></highlight></codeline>
<codeline lineno="17982"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Literal_infinityContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17983"><highlight class="normal"></highlight></codeline>
<codeline lineno="17984"><highlight class="normal">KerMLParser::Literal_infinityContext::Literal_infinityContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="17985"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="17986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17987"><highlight class="normal"></highlight></codeline>
<codeline lineno="17988"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Literal_infinityContext::SYMBOL_STAR()<sp/>{</highlight></codeline>
<codeline lineno="17989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STAR,<sp/>0);</highlight></codeline>
<codeline lineno="17990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17991"><highlight class="normal"></highlight></codeline>
<codeline lineno="17992"><highlight class="normal"></highlight></codeline>
<codeline lineno="17993"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Literal_infinityContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleLiteral_infinity;</highlight></codeline>
<codeline lineno="17995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17996"><highlight class="normal"></highlight></codeline>
<codeline lineno="17997"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_infinityContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="17998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="17999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18000"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterLiteral_infinity(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18002"><highlight class="normal"></highlight></codeline>
<codeline lineno="18003"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Literal_infinityContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18006"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitLiteral_infinity(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18008"><highlight class="normal"></highlight></codeline>
<codeline lineno="18009"><highlight class="normal">KerMLParser::Literal_infinityContext*<sp/>KerMLParser::literal_infinity()<sp/>{</highlight></codeline>
<codeline lineno="18010"><highlight class="normal"><sp/><sp/><ref refid="d0/dad/class_ker_m_l_parser_1_1_literal__infinity_context" kindref="compound">Literal_infinityContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d0/dad/class_ker_m_l_parser_1_1_literal__infinity_context" kindref="compound">Literal_infinityContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18011"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>436,<sp/>KerMLParser::RuleLiteral_infinity);</highlight></codeline>
<codeline lineno="18012"><highlight class="normal"></highlight></codeline>
<codeline lineno="18013"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18015"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18017"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18018"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18019"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18021"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18022"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1819);</highlight></codeline>
<codeline lineno="18023"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STAR);</highlight></codeline>
<codeline lineno="18024"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18027"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18028"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18029"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18030"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18031"><highlight class="normal"></highlight></codeline>
<codeline lineno="18032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18034"><highlight class="normal"></highlight></codeline>
<codeline lineno="18035"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>InteractionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18036"><highlight class="normal"></highlight></codeline>
<codeline lineno="18037"><highlight class="normal">KerMLParser::InteractionContext::InteractionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18038"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18040"><highlight class="normal"></highlight></codeline>
<codeline lineno="18041"><highlight class="normal"><ref refid="d4/db9/class_ker_m_l_parser_1_1_type__prefix_context" kindref="compound">KerMLParser::Type_prefixContext</ref>*<sp/>KerMLParser::InteractionContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="18042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="18043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18044"><highlight class="normal"></highlight></codeline>
<codeline lineno="18045"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::InteractionContext::KEYWORD_INTERACTION()<sp/>{</highlight></codeline>
<codeline lineno="18046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_INTERACTION,<sp/>0);</highlight></codeline>
<codeline lineno="18047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18048"><highlight class="normal"></highlight></codeline>
<codeline lineno="18049"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::InteractionContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="18050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="18051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18052"><highlight class="normal"></highlight></codeline>
<codeline lineno="18053"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::InteractionContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="18054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="18055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18056"><highlight class="normal"></highlight></codeline>
<codeline lineno="18057"><highlight class="normal"></highlight></codeline>
<codeline lineno="18058"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::InteractionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleInteraction;</highlight></codeline>
<codeline lineno="18060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18061"><highlight class="normal"></highlight></codeline>
<codeline lineno="18062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::InteractionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18065"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterInteraction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18067"><highlight class="normal"></highlight></codeline>
<codeline lineno="18068"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::InteractionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18071"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitInteraction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18073"><highlight class="normal"></highlight></codeline>
<codeline lineno="18074"><highlight class="normal">KerMLParser::InteractionContext*<sp/>KerMLParser::interaction()<sp/>{</highlight></codeline>
<codeline lineno="18075"><highlight class="normal"><sp/><sp/><ref refid="d9/d5f/class_ker_m_l_parser_1_1_interaction_context" kindref="compound">InteractionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d9/d5f/class_ker_m_l_parser_1_1_interaction_context" kindref="compound">InteractionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18076"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>438,<sp/>KerMLParser::RuleInteraction);</highlight></codeline>
<codeline lineno="18077"><highlight class="normal"></highlight></codeline>
<codeline lineno="18078"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18080"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18082"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18083"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18084"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18086"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18087"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1821);</highlight></codeline>
<codeline lineno="18088"><highlight class="normal"><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="18089"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1822);</highlight></codeline>
<codeline lineno="18090"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_INTERACTION);</highlight></codeline>
<codeline lineno="18091"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1823);</highlight></codeline>
<codeline lineno="18092"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="18093"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1824);</highlight></codeline>
<codeline lineno="18094"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="18095"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18098"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18099"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18100"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18102"><highlight class="normal"></highlight></codeline>
<codeline lineno="18103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18105"><highlight class="normal"></highlight></codeline>
<codeline lineno="18106"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_flowContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18107"><highlight class="normal"></highlight></codeline>
<codeline lineno="18108"><highlight class="normal">KerMLParser::Item_flowContext::Item_flowContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18109"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18111"><highlight class="normal"></highlight></codeline>
<codeline lineno="18112"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::Item_flowContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="18113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="18114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18115"><highlight class="normal"></highlight></codeline>
<codeline lineno="18116"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Item_flowContext::KEYWORD_FLOW()<sp/>{</highlight></codeline>
<codeline lineno="18117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FLOW,<sp/>0);</highlight></codeline>
<codeline lineno="18118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18119"><highlight class="normal"></highlight></codeline>
<codeline lineno="18120"><highlight class="normal">KerMLParser::Item_flow_declarationContext*<sp/>KerMLParser::Item_flowContext::item_flow_declaration()<sp/>{</highlight></codeline>
<codeline lineno="18121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flow_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="18122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18123"><highlight class="normal"></highlight></codeline>
<codeline lineno="18124"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Item_flowContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="18125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="18126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18127"><highlight class="normal"></highlight></codeline>
<codeline lineno="18128"><highlight class="normal"></highlight></codeline>
<codeline lineno="18129"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_flowContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_flow;</highlight></codeline>
<codeline lineno="18131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18132"><highlight class="normal"></highlight></codeline>
<codeline lineno="18133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flowContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18136"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_flow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18138"><highlight class="normal"></highlight></codeline>
<codeline lineno="18139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flowContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18142"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_flow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18144"><highlight class="normal"></highlight></codeline>
<codeline lineno="18145"><highlight class="normal">KerMLParser::Item_flowContext*<sp/>KerMLParser::item_flow()<sp/>{</highlight></codeline>
<codeline lineno="18146"><highlight class="normal"><sp/><sp/><ref refid="d5/d77/class_ker_m_l_parser_1_1_item__flow_context" kindref="compound">Item_flowContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d77/class_ker_m_l_parser_1_1_item__flow_context" kindref="compound">Item_flowContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18147"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>440,<sp/>KerMLParser::RuleItem_flow);</highlight></codeline>
<codeline lineno="18148"><highlight class="normal"></highlight></codeline>
<codeline lineno="18149"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18151"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18154"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18155"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18157"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18158"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1826);</highlight></codeline>
<codeline lineno="18159"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="18160"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1827);</highlight></codeline>
<codeline lineno="18161"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FLOW);</highlight></codeline>
<codeline lineno="18162"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1828);</highlight></codeline>
<codeline lineno="18163"><highlight class="normal"><sp/><sp/><sp/><sp/>item_flow_declaration();</highlight></codeline>
<codeline lineno="18164"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1829);</highlight></codeline>
<codeline lineno="18165"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="18166"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18169"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18170"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18171"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18173"><highlight class="normal"></highlight></codeline>
<codeline lineno="18174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18176"><highlight class="normal"></highlight></codeline>
<codeline lineno="18177"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Succession_item_flowContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18178"><highlight class="normal"></highlight></codeline>
<codeline lineno="18179"><highlight class="normal">KerMLParser::Succession_item_flowContext::Succession_item_flowContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18180"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18182"><highlight class="normal"></highlight></codeline>
<codeline lineno="18183"><highlight class="normal"><ref refid="d8/dfb/class_ker_m_l_parser_1_1_feature__prefix_context" kindref="compound">KerMLParser::Feature_prefixContext</ref>*<sp/>KerMLParser::Succession_item_flowContext::feature_prefix()<sp/>{</highlight></codeline>
<codeline lineno="18184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="18185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18186"><highlight class="normal"></highlight></codeline>
<codeline lineno="18187"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Succession_item_flowContext::KEYWORD_SUCCSESSION()<sp/>{</highlight></codeline>
<codeline lineno="18188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_SUCCSESSION,<sp/>0);</highlight></codeline>
<codeline lineno="18189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18190"><highlight class="normal"></highlight></codeline>
<codeline lineno="18191"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Succession_item_flowContext::KEYWORD_FLOW()<sp/>{</highlight></codeline>
<codeline lineno="18192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FLOW,<sp/>0);</highlight></codeline>
<codeline lineno="18193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18194"><highlight class="normal"></highlight></codeline>
<codeline lineno="18195"><highlight class="normal">KerMLParser::Item_flow_declarationContext*<sp/>KerMLParser::Succession_item_flowContext::item_flow_declaration()<sp/>{</highlight></codeline>
<codeline lineno="18196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flow_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="18197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18198"><highlight class="normal"></highlight></codeline>
<codeline lineno="18199"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Succession_item_flowContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="18200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="18201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18202"><highlight class="normal"></highlight></codeline>
<codeline lineno="18203"><highlight class="normal"></highlight></codeline>
<codeline lineno="18204"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Succession_item_flowContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleSuccession_item_flow;</highlight></codeline>
<codeline lineno="18206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18207"><highlight class="normal"></highlight></codeline>
<codeline lineno="18208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Succession_item_flowContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18211"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterSuccession_item_flow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18213"><highlight class="normal"></highlight></codeline>
<codeline lineno="18214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Succession_item_flowContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18217"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitSuccession_item_flow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18219"><highlight class="normal"></highlight></codeline>
<codeline lineno="18220"><highlight class="normal">KerMLParser::Succession_item_flowContext*<sp/>KerMLParser::succession_item_flow()<sp/>{</highlight></codeline>
<codeline lineno="18221"><highlight class="normal"><sp/><sp/><ref refid="da/db7/class_ker_m_l_parser_1_1_succession__item__flow_context" kindref="compound">Succession_item_flowContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/db7/class_ker_m_l_parser_1_1_succession__item__flow_context" kindref="compound">Succession_item_flowContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18222"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>442,<sp/>KerMLParser::RuleSuccession_item_flow);</highlight></codeline>
<codeline lineno="18223"><highlight class="normal"></highlight></codeline>
<codeline lineno="18224"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18226"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18229"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18230"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18232"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18233"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1831);</highlight></codeline>
<codeline lineno="18234"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_prefix();</highlight></codeline>
<codeline lineno="18235"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1832);</highlight></codeline>
<codeline lineno="18236"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_SUCCSESSION);</highlight></codeline>
<codeline lineno="18237"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1833);</highlight></codeline>
<codeline lineno="18238"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FLOW);</highlight></codeline>
<codeline lineno="18239"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1834);</highlight></codeline>
<codeline lineno="18240"><highlight class="normal"><sp/><sp/><sp/><sp/>item_flow_declaration();</highlight></codeline>
<codeline lineno="18241"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1835);</highlight></codeline>
<codeline lineno="18242"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="18243"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18246"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18247"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18248"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18250"><highlight class="normal"></highlight></codeline>
<codeline lineno="18251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18253"><highlight class="normal"></highlight></codeline>
<codeline lineno="18254"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_flow_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18255"><highlight class="normal"></highlight></codeline>
<codeline lineno="18256"><highlight class="normal">KerMLParser::Item_flow_declarationContext::Item_flow_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18257"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18259"><highlight class="normal"></highlight></codeline>
<codeline lineno="18260"><highlight class="normal"><ref refid="d0/da8/class_ker_m_l_parser_1_1_feature__declaration_context" kindref="compound">KerMLParser::Feature_declarationContext</ref>*<sp/>KerMLParser::Item_flow_declarationContext::feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="18261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="18262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18263"><highlight class="normal"></highlight></codeline>
<codeline lineno="18264"><highlight class="normal">std::vector&lt;KerMLParser::Item_flow_end_memberContext<sp/>*&gt;<sp/>KerMLParser::Item_flow_declarationContext::item_flow_end_member()<sp/>{</highlight></codeline>
<codeline lineno="18265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Item_flow_end_memberContext&gt;();</highlight></codeline>
<codeline lineno="18266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18267"><highlight class="normal"></highlight></codeline>
<codeline lineno="18268"><highlight class="normal">KerMLParser::Item_flow_end_memberContext*<sp/>KerMLParser::Item_flow_declarationContext::item_flow_end_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="18269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flow_end_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="18270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18271"><highlight class="normal"></highlight></codeline>
<codeline lineno="18272"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Item_flow_declarationContext::KEYWORD_TO()<sp/>{</highlight></codeline>
<codeline lineno="18273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TO,<sp/>0);</highlight></codeline>
<codeline lineno="18274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18275"><highlight class="normal"></highlight></codeline>
<codeline lineno="18276"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::Item_flow_declarationContext::value_part()<sp/>{</highlight></codeline>
<codeline lineno="18277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Value_partContext&gt;(0);</highlight></codeline>
<codeline lineno="18278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18279"><highlight class="normal"></highlight></codeline>
<codeline lineno="18280"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Item_flow_declarationContext::KEYWORD_OF()<sp/>{</highlight></codeline>
<codeline lineno="18281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_OF,<sp/>0);</highlight></codeline>
<codeline lineno="18282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18283"><highlight class="normal"></highlight></codeline>
<codeline lineno="18284"><highlight class="normal">KerMLParser::Item_feature_memberContext*<sp/>KerMLParser::Item_flow_declarationContext::item_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="18285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="18286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18287"><highlight class="normal"></highlight></codeline>
<codeline lineno="18288"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Item_flow_declarationContext::KEYWORD_FROM()<sp/>{</highlight></codeline>
<codeline lineno="18289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FROM,<sp/>0);</highlight></codeline>
<codeline lineno="18290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18291"><highlight class="normal"></highlight></codeline>
<codeline lineno="18292"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Item_flow_declarationContext::KEYWORD_ALL()<sp/>{</highlight></codeline>
<codeline lineno="18293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ALL,<sp/>0);</highlight></codeline>
<codeline lineno="18294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18295"><highlight class="normal"></highlight></codeline>
<codeline lineno="18296"><highlight class="normal"></highlight></codeline>
<codeline lineno="18297"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_flow_declaration;</highlight></codeline>
<codeline lineno="18299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18300"><highlight class="normal"></highlight></codeline>
<codeline lineno="18301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18304"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_flow_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18306"><highlight class="normal"></highlight></codeline>
<codeline lineno="18307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18310"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_flow_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18312"><highlight class="normal"></highlight></codeline>
<codeline lineno="18313"><highlight class="normal">KerMLParser::Item_flow_declarationContext*<sp/>KerMLParser::item_flow_declaration()<sp/>{</highlight></codeline>
<codeline lineno="18314"><highlight class="normal"><sp/><sp/><ref refid="d3/d4f/class_ker_m_l_parser_1_1_item__flow__declaration_context" kindref="compound">Item_flow_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d4f/class_ker_m_l_parser_1_1_item__flow__declaration_context" kindref="compound">Item_flow_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18315"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>444,<sp/>KerMLParser::RuleItem_flow_declaration);</highlight></codeline>
<codeline lineno="18316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18317"><highlight class="normal"></highlight></codeline>
<codeline lineno="18318"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18323"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18324"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18326"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18327"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1859);</highlight></codeline>
<codeline lineno="18328"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>184,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="18330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="18331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1837);</highlight></codeline>
<codeline lineno="18332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_declaration();</highlight></codeline>
<codeline lineno="18333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1839);</highlight></codeline>
<codeline lineno="18334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18335"><highlight class="normal"></highlight></codeline>
<codeline lineno="18336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="18338"><highlight class="normal"></highlight></codeline>
<codeline lineno="18339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="18340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1838);</highlight></codeline>
<codeline lineno="18341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_part();</highlight></codeline>
<codeline lineno="18342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1843);</highlight></codeline>
<codeline lineno="18344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18345"><highlight class="normal"></highlight></codeline>
<codeline lineno="18346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_OF)<sp/>{</highlight></codeline>
<codeline lineno="18348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1841);</highlight></codeline>
<codeline lineno="18349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_OF);</highlight></codeline>
<codeline lineno="18350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1842);</highlight></codeline>
<codeline lineno="18351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_feature_member();</highlight></codeline>
<codeline lineno="18352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1850);</highlight></codeline>
<codeline lineno="18354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18355"><highlight class="normal"></highlight></codeline>
<codeline lineno="18356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_FROM)<sp/>{</highlight></codeline>
<codeline lineno="18358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1845);</highlight></codeline>
<codeline lineno="18359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FROM);</highlight></codeline>
<codeline lineno="18360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1846);</highlight></codeline>
<codeline lineno="18361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_flow_end_member();</highlight></codeline>
<codeline lineno="18362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1847);</highlight></codeline>
<codeline lineno="18363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_TO);</highlight></codeline>
<codeline lineno="18364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1848);</highlight></codeline>
<codeline lineno="18365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_flow_end_member();</highlight></codeline>
<codeline lineno="18366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18369"><highlight class="normal"></highlight></codeline>
<codeline lineno="18370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="18371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1853);</highlight></codeline>
<codeline lineno="18372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18373"><highlight class="normal"></highlight></codeline>
<codeline lineno="18374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_ALL)<sp/>{</highlight></codeline>
<codeline lineno="18376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1852);</highlight></codeline>
<codeline lineno="18377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ALL);</highlight></codeline>
<codeline lineno="18378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1855);</highlight></codeline>
<codeline lineno="18380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item_flow_end_member();</highlight></codeline>
<codeline lineno="18381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1856);</highlight></codeline>
<codeline lineno="18382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_TO);</highlight></codeline>
<codeline lineno="18383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1857);</highlight></codeline>
<codeline lineno="18384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item_flow_end_member();</highlight></codeline>
<codeline lineno="18385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18387"><highlight class="normal"></highlight></codeline>
<codeline lineno="18388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18391"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18394"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18395"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18396"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18398"><highlight class="normal"></highlight></codeline>
<codeline lineno="18399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18401"><highlight class="normal"></highlight></codeline>
<codeline lineno="18402"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18403"><highlight class="normal"></highlight></codeline>
<codeline lineno="18404"><highlight class="normal">KerMLParser::Item_feature_memberContext::Item_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18405"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18407"><highlight class="normal"></highlight></codeline>
<codeline lineno="18408"><highlight class="normal"><ref refid="d7/ddc/class_ker_m_l_parser_1_1_item__feature_context" kindref="compound">KerMLParser::Item_featureContext</ref>*<sp/>KerMLParser::Item_feature_memberContext::item_feature()<sp/>{</highlight></codeline>
<codeline lineno="18409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_featureContext&gt;(0);</highlight></codeline>
<codeline lineno="18410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18411"><highlight class="normal"></highlight></codeline>
<codeline lineno="18412"><highlight class="normal"></highlight></codeline>
<codeline lineno="18413"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_feature_member;</highlight></codeline>
<codeline lineno="18415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18416"><highlight class="normal"></highlight></codeline>
<codeline lineno="18417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18420"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18422"><highlight class="normal"></highlight></codeline>
<codeline lineno="18423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18426"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18428"><highlight class="normal"></highlight></codeline>
<codeline lineno="18429"><highlight class="normal">KerMLParser::Item_feature_memberContext*<sp/>KerMLParser::item_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="18430"><highlight class="normal"><sp/><sp/><ref refid="dc/da4/class_ker_m_l_parser_1_1_item__feature__member_context" kindref="compound">Item_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/da4/class_ker_m_l_parser_1_1_item__feature__member_context" kindref="compound">Item_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18431"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>446,<sp/>KerMLParser::RuleItem_feature_member);</highlight></codeline>
<codeline lineno="18432"><highlight class="normal"></highlight></codeline>
<codeline lineno="18433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18435"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18438"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18439"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18441"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18442"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1861);</highlight></codeline>
<codeline lineno="18443"><highlight class="normal"><sp/><sp/><sp/><sp/>item_feature();</highlight></codeline>
<codeline lineno="18444"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18447"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18448"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18449"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18451"><highlight class="normal"></highlight></codeline>
<codeline lineno="18452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18454"><highlight class="normal"></highlight></codeline>
<codeline lineno="18455"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_featureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18456"><highlight class="normal"></highlight></codeline>
<codeline lineno="18457"><highlight class="normal">KerMLParser::Item_featureContext::Item_featureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18458"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18460"><highlight class="normal"></highlight></codeline>
<codeline lineno="18461"><highlight class="normal"><ref refid="d9/d18/class_ker_m_l_parser_1_1_identification_context" kindref="compound">KerMLParser::IdentificationContext</ref>*<sp/>KerMLParser::Item_featureContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="18462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="18463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18464"><highlight class="normal"></highlight></codeline>
<codeline lineno="18465"><highlight class="normal">KerMLParser::Item_feature_specilization_partContext*<sp/>KerMLParser::Item_featureContext::item_feature_specilization_part()<sp/>{</highlight></codeline>
<codeline lineno="18466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_feature_specilization_partContext&gt;(0);</highlight></codeline>
<codeline lineno="18467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18468"><highlight class="normal"></highlight></codeline>
<codeline lineno="18469"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::Item_featureContext::value_part()<sp/>{</highlight></codeline>
<codeline lineno="18470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Value_partContext&gt;(0);</highlight></codeline>
<codeline lineno="18471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18472"><highlight class="normal"></highlight></codeline>
<codeline lineno="18473"><highlight class="normal">KerMLParser::Owned_feature_typingContext*<sp/>KerMLParser::Item_featureContext::owned_feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="18474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="18475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18476"><highlight class="normal"></highlight></codeline>
<codeline lineno="18477"><highlight class="normal">KerMLParser::Multiplicity_boundsContext*<sp/>KerMLParser::Item_featureContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="18478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="18479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18480"><highlight class="normal"></highlight></codeline>
<codeline lineno="18481"><highlight class="normal"></highlight></codeline>
<codeline lineno="18482"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_featureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_feature;</highlight></codeline>
<codeline lineno="18484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18485"><highlight class="normal"></highlight></codeline>
<codeline lineno="18486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_featureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18489"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18491"><highlight class="normal"></highlight></codeline>
<codeline lineno="18492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_featureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18495"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18497"><highlight class="normal"></highlight></codeline>
<codeline lineno="18498"><highlight class="normal">KerMLParser::Item_featureContext*<sp/>KerMLParser::item_feature()<sp/>{</highlight></codeline>
<codeline lineno="18499"><highlight class="normal"><sp/><sp/><ref refid="d7/ddc/class_ker_m_l_parser_1_1_item__feature_context" kindref="compound">Item_featureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/ddc/class_ker_m_l_parser_1_1_item__feature_context" kindref="compound">Item_featureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18500"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>448,<sp/>KerMLParser::RuleItem_feature);</highlight></codeline>
<codeline lineno="18501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18502"><highlight class="normal"></highlight></codeline>
<codeline lineno="18503"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18505"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18508"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18509"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18511"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1876);</highlight></codeline>
<codeline lineno="18512"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>188,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="18514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="18515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1863);</highlight></codeline>
<codeline lineno="18517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="18518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1864);</highlight></codeline>
<codeline lineno="18519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item_feature_specilization_part();</highlight></codeline>
<codeline lineno="18520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1866);</highlight></codeline>
<codeline lineno="18521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18522"><highlight class="normal"></highlight></codeline>
<codeline lineno="18523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="18525"><highlight class="normal"></highlight></codeline>
<codeline lineno="18526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="18527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1865);</highlight></codeline>
<codeline lineno="18528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_part();</highlight></codeline>
<codeline lineno="18529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18532"><highlight class="normal"></highlight></codeline>
<codeline lineno="18533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="18534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="18535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1868);</highlight></codeline>
<codeline lineno="18536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_typing();</highlight></codeline>
<codeline lineno="18537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1870);</highlight></codeline>
<codeline lineno="18538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18539"><highlight class="normal"></highlight></codeline>
<codeline lineno="18540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="18542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1869);</highlight></codeline>
<codeline lineno="18543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="18544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18547"><highlight class="normal"></highlight></codeline>
<codeline lineno="18548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="18549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="18550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1872);</highlight></codeline>
<codeline lineno="18551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="18552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1874);</highlight></codeline>
<codeline lineno="18553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18554"><highlight class="normal"></highlight></codeline>
<codeline lineno="18555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="18557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1873);</highlight></codeline>
<codeline lineno="18558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_feature_typing();</highlight></codeline>
<codeline lineno="18559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18562"><highlight class="normal"></highlight></codeline>
<codeline lineno="18563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18566"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18569"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18570"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18571"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18573"><highlight class="normal"></highlight></codeline>
<codeline lineno="18574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18576"><highlight class="normal"></highlight></codeline>
<codeline lineno="18577"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_feature_specilization_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18578"><highlight class="normal"></highlight></codeline>
<codeline lineno="18579"><highlight class="normal">KerMLParser::Item_feature_specilization_partContext::Item_feature_specilization_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18580"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18582"><highlight class="normal"></highlight></codeline>
<codeline lineno="18583"><highlight class="normal"><ref refid="df/d38/class_ker_m_l_parser_1_1_multiplicity__part_context" kindref="compound">KerMLParser::Multiplicity_partContext</ref>*<sp/>KerMLParser::Item_feature_specilization_partContext::multiplicity_part()<sp/>{</highlight></codeline>
<codeline lineno="18584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_partContext&gt;(0);</highlight></codeline>
<codeline lineno="18585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18586"><highlight class="normal"></highlight></codeline>
<codeline lineno="18587"><highlight class="normal">std::vector&lt;KerMLParser::Feature_specilizationContext<sp/>*&gt;<sp/>KerMLParser::Item_feature_specilization_partContext::feature_specilization()<sp/>{</highlight></codeline>
<codeline lineno="18588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Feature_specilizationContext&gt;();</highlight></codeline>
<codeline lineno="18589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18590"><highlight class="normal"></highlight></codeline>
<codeline lineno="18591"><highlight class="normal">KerMLParser::Feature_specilizationContext*<sp/>KerMLParser::Item_feature_specilization_partContext::feature_specilization(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="18592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_specilizationContext&gt;(i);</highlight></codeline>
<codeline lineno="18593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18594"><highlight class="normal"></highlight></codeline>
<codeline lineno="18595"><highlight class="normal"></highlight></codeline>
<codeline lineno="18596"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_feature_specilization_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_feature_specilization_part;</highlight></codeline>
<codeline lineno="18598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18599"><highlight class="normal"></highlight></codeline>
<codeline lineno="18600"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_feature_specilization_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18603"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_feature_specilization_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18605"><highlight class="normal"></highlight></codeline>
<codeline lineno="18606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_feature_specilization_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18609"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_feature_specilization_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18611"><highlight class="normal"></highlight></codeline>
<codeline lineno="18612"><highlight class="normal">KerMLParser::Item_feature_specilization_partContext*<sp/>KerMLParser::item_feature_specilization_part()<sp/>{</highlight></codeline>
<codeline lineno="18613"><highlight class="normal"><sp/><sp/><ref refid="d6/daa/class_ker_m_l_parser_1_1_item__feature__specilization__part_context" kindref="compound">Item_feature_specilization_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/daa/class_ker_m_l_parser_1_1_item__feature__specilization__part_context" kindref="compound">Item_feature_specilization_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18614"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>450,<sp/>KerMLParser::RuleItem_feature_specilization_part);</highlight></codeline>
<codeline lineno="18615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18616"><highlight class="normal"></highlight></codeline>
<codeline lineno="18617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18619"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18622"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18623"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18625"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18626"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1881);</highlight></codeline>
<codeline lineno="18627"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18628"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="18630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>54043195528446068)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_OUT)<sp/>{</highlight></codeline>
<codeline lineno="18631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1878);</highlight></codeline>
<codeline lineno="18632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_specilization();</highlight></codeline>
<codeline lineno="18633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1883);</highlight></codeline>
<codeline lineno="18634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18637"><highlight class="normal"></highlight></codeline>
<codeline lineno="18638"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1884);</highlight></codeline>
<codeline lineno="18639"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplicity_part();</highlight></codeline>
<codeline lineno="18640"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1886);</highlight></codeline>
<codeline lineno="18641"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18642"><highlight class="normal"></highlight></codeline>
<codeline lineno="18643"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="18644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="18645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>54043195528446068)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_OUT)<sp/>{</highlight></codeline>
<codeline lineno="18646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1885);</highlight></codeline>
<codeline lineno="18647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_specilization();</highlight></codeline>
<codeline lineno="18648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18649"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18650"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18652"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18653"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18654"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18656"><highlight class="normal"></highlight></codeline>
<codeline lineno="18657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18659"><highlight class="normal"></highlight></codeline>
<codeline lineno="18660"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_flow_end_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18661"><highlight class="normal"></highlight></codeline>
<codeline lineno="18662"><highlight class="normal">KerMLParser::Item_flow_end_memberContext::Item_flow_end_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18663"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18665"><highlight class="normal"></highlight></codeline>
<codeline lineno="18666"><highlight class="normal"><ref refid="de/d62/class_ker_m_l_parser_1_1_item__flow__end_context" kindref="compound">KerMLParser::Item_flow_endContext</ref>*<sp/>KerMLParser::Item_flow_end_memberContext::item_flow_end()<sp/>{</highlight></codeline>
<codeline lineno="18667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flow_endContext&gt;(0);</highlight></codeline>
<codeline lineno="18668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18669"><highlight class="normal"></highlight></codeline>
<codeline lineno="18670"><highlight class="normal"></highlight></codeline>
<codeline lineno="18671"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_end_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_flow_end_member;</highlight></codeline>
<codeline lineno="18673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18674"><highlight class="normal"></highlight></codeline>
<codeline lineno="18675"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_end_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18678"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_flow_end_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18680"><highlight class="normal"></highlight></codeline>
<codeline lineno="18681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_end_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18684"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_flow_end_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18686"><highlight class="normal"></highlight></codeline>
<codeline lineno="18687"><highlight class="normal">KerMLParser::Item_flow_end_memberContext*<sp/>KerMLParser::item_flow_end_member()<sp/>{</highlight></codeline>
<codeline lineno="18688"><highlight class="normal"><sp/><sp/><ref refid="d5/d67/class_ker_m_l_parser_1_1_item__flow__end__member_context" kindref="compound">Item_flow_end_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d67/class_ker_m_l_parser_1_1_item__flow__end__member_context" kindref="compound">Item_flow_end_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18689"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>452,<sp/>KerMLParser::RuleItem_flow_end_member);</highlight></codeline>
<codeline lineno="18690"><highlight class="normal"></highlight></codeline>
<codeline lineno="18691"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18693"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18696"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18697"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18699"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18700"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1888);</highlight></codeline>
<codeline lineno="18701"><highlight class="normal"><sp/><sp/><sp/><sp/>item_flow_end();</highlight></codeline>
<codeline lineno="18702"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18705"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18706"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18707"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18709"><highlight class="normal"></highlight></codeline>
<codeline lineno="18710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18712"><highlight class="normal"></highlight></codeline>
<codeline lineno="18713"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_flow_endContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18714"><highlight class="normal"></highlight></codeline>
<codeline lineno="18715"><highlight class="normal">KerMLParser::Item_flow_endContext::Item_flow_endContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18716"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18718"><highlight class="normal"></highlight></codeline>
<codeline lineno="18719"><highlight class="normal"><ref refid="d5/db3/class_ker_m_l_parser_1_1_item__flow__feature__member_context" kindref="compound">KerMLParser::Item_flow_feature_memberContext</ref>*<sp/>KerMLParser::Item_flow_endContext::item_flow_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="18720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flow_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="18721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18722"><highlight class="normal"></highlight></codeline>
<codeline lineno="18723"><highlight class="normal">KerMLParser::Owned_reference_subsettingContext*<sp/>KerMLParser::Item_flow_endContext::owned_reference_subsetting()<sp/>{</highlight></codeline>
<codeline lineno="18724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_reference_subsettingContext&gt;(0);</highlight></codeline>
<codeline lineno="18725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18726"><highlight class="normal"></highlight></codeline>
<codeline lineno="18727"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Item_flow_endContext::SYMBOL_DOT()<sp/>{</highlight></codeline>
<codeline lineno="18728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DOT,<sp/>0);</highlight></codeline>
<codeline lineno="18729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18730"><highlight class="normal"></highlight></codeline>
<codeline lineno="18731"><highlight class="normal"></highlight></codeline>
<codeline lineno="18732"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_endContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_flow_end;</highlight></codeline>
<codeline lineno="18734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18735"><highlight class="normal"></highlight></codeline>
<codeline lineno="18736"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_endContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18739"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_flow_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18741"><highlight class="normal"></highlight></codeline>
<codeline lineno="18742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_endContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18745"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_flow_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18747"><highlight class="normal"></highlight></codeline>
<codeline lineno="18748"><highlight class="normal">KerMLParser::Item_flow_endContext*<sp/>KerMLParser::item_flow_end()<sp/>{</highlight></codeline>
<codeline lineno="18749"><highlight class="normal"><sp/><sp/><ref refid="de/d62/class_ker_m_l_parser_1_1_item__flow__end_context" kindref="compound">Item_flow_endContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d62/class_ker_m_l_parser_1_1_item__flow__end_context" kindref="compound">Item_flow_endContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18750"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>454,<sp/>KerMLParser::RuleItem_flow_end);</highlight></codeline>
<codeline lineno="18751"><highlight class="normal"></highlight></codeline>
<codeline lineno="18752"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18754"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18756"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18757"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18758"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18760"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18761"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1893);</highlight></codeline>
<codeline lineno="18762"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18763"><highlight class="normal"></highlight></codeline>
<codeline lineno="18764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>191,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="18765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="18766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1890);</highlight></codeline>
<codeline lineno="18767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owned_reference_subsetting();</highlight></codeline>
<codeline lineno="18768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1891);</highlight></codeline>
<codeline lineno="18769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DOT);</highlight></codeline>
<codeline lineno="18770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18772"><highlight class="normal"></highlight></codeline>
<codeline lineno="18773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18776"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1895);</highlight></codeline>
<codeline lineno="18777"><highlight class="normal"><sp/><sp/><sp/><sp/>item_flow_feature_member();</highlight></codeline>
<codeline lineno="18778"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18781"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18782"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18783"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18785"><highlight class="normal"></highlight></codeline>
<codeline lineno="18786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18788"><highlight class="normal"></highlight></codeline>
<codeline lineno="18789"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_flow_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18790"><highlight class="normal"></highlight></codeline>
<codeline lineno="18791"><highlight class="normal">KerMLParser::Item_flow_feature_memberContext::Item_flow_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18792"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18794"><highlight class="normal"></highlight></codeline>
<codeline lineno="18795"><highlight class="normal"><ref refid="db/da3/class_ker_m_l_parser_1_1_item__flow__feature_context" kindref="compound">KerMLParser::Item_flow_featureContext</ref>*<sp/>KerMLParser::Item_flow_feature_memberContext::item_flow_feature()<sp/>{</highlight></codeline>
<codeline lineno="18796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flow_featureContext&gt;(0);</highlight></codeline>
<codeline lineno="18797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18798"><highlight class="normal"></highlight></codeline>
<codeline lineno="18799"><highlight class="normal"></highlight></codeline>
<codeline lineno="18800"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_flow_feature_member;</highlight></codeline>
<codeline lineno="18802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18803"><highlight class="normal"></highlight></codeline>
<codeline lineno="18804"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18807"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_flow_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18809"><highlight class="normal"></highlight></codeline>
<codeline lineno="18810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18813"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_flow_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18815"><highlight class="normal"></highlight></codeline>
<codeline lineno="18816"><highlight class="normal">KerMLParser::Item_flow_feature_memberContext*<sp/>KerMLParser::item_flow_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="18817"><highlight class="normal"><sp/><sp/><ref refid="d5/db3/class_ker_m_l_parser_1_1_item__flow__feature__member_context" kindref="compound">Item_flow_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/db3/class_ker_m_l_parser_1_1_item__flow__feature__member_context" kindref="compound">Item_flow_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18818"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>456,<sp/>KerMLParser::RuleItem_flow_feature_member);</highlight></codeline>
<codeline lineno="18819"><highlight class="normal"></highlight></codeline>
<codeline lineno="18820"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18822"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18824"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18825"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18826"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18828"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18829"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1897);</highlight></codeline>
<codeline lineno="18830"><highlight class="normal"><sp/><sp/><sp/><sp/>item_flow_feature();</highlight></codeline>
<codeline lineno="18831"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18832"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18834"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18835"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18836"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18837"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18838"><highlight class="normal"></highlight></codeline>
<codeline lineno="18839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18841"><highlight class="normal"></highlight></codeline>
<codeline lineno="18842"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_flow_featureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18843"><highlight class="normal"></highlight></codeline>
<codeline lineno="18844"><highlight class="normal">KerMLParser::Item_flow_featureContext::Item_flow_featureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18845"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18847"><highlight class="normal"></highlight></codeline>
<codeline lineno="18848"><highlight class="normal"><ref refid="dc/df6/class_ker_m_l_parser_1_1_item__flow__redefinition_context" kindref="compound">KerMLParser::Item_flow_redefinitionContext</ref>*<sp/>KerMLParser::Item_flow_featureContext::item_flow_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="18849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Item_flow_redefinitionContext&gt;(0);</highlight></codeline>
<codeline lineno="18850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18851"><highlight class="normal"></highlight></codeline>
<codeline lineno="18852"><highlight class="normal"></highlight></codeline>
<codeline lineno="18853"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_featureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_flow_feature;</highlight></codeline>
<codeline lineno="18855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18856"><highlight class="normal"></highlight></codeline>
<codeline lineno="18857"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_featureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18860"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_flow_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18862"><highlight class="normal"></highlight></codeline>
<codeline lineno="18863"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_featureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18866"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_flow_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18868"><highlight class="normal"></highlight></codeline>
<codeline lineno="18869"><highlight class="normal">KerMLParser::Item_flow_featureContext*<sp/>KerMLParser::item_flow_feature()<sp/>{</highlight></codeline>
<codeline lineno="18870"><highlight class="normal"><sp/><sp/><ref refid="db/da3/class_ker_m_l_parser_1_1_item__flow__feature_context" kindref="compound">Item_flow_featureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="db/da3/class_ker_m_l_parser_1_1_item__flow__feature_context" kindref="compound">Item_flow_featureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18871"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>458,<sp/>KerMLParser::RuleItem_flow_feature);</highlight></codeline>
<codeline lineno="18872"><highlight class="normal"></highlight></codeline>
<codeline lineno="18873"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18875"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18877"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18878"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18879"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18881"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18882"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1899);</highlight></codeline>
<codeline lineno="18883"><highlight class="normal"><sp/><sp/><sp/><sp/>item_flow_redefinition();</highlight></codeline>
<codeline lineno="18884"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18887"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18888"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18889"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18891"><highlight class="normal"></highlight></codeline>
<codeline lineno="18892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18894"><highlight class="normal"></highlight></codeline>
<codeline lineno="18895"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Item_flow_redefinitionContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18896"><highlight class="normal"></highlight></codeline>
<codeline lineno="18897"><highlight class="normal">KerMLParser::Item_flow_redefinitionContext::Item_flow_redefinitionContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18898"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18900"><highlight class="normal"></highlight></codeline>
<codeline lineno="18901"><highlight class="normal"><ref refid="d1/d40/class_ker_m_l_parser_1_1_qualified__name_context" kindref="compound">KerMLParser::Qualified_nameContext</ref>*<sp/>KerMLParser::Item_flow_redefinitionContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="18902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(0);</highlight></codeline>
<codeline lineno="18903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18904"><highlight class="normal"></highlight></codeline>
<codeline lineno="18905"><highlight class="normal"></highlight></codeline>
<codeline lineno="18906"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_redefinitionContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleItem_flow_redefinition;</highlight></codeline>
<codeline lineno="18908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18909"><highlight class="normal"></highlight></codeline>
<codeline lineno="18910"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_redefinitionContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18913"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterItem_flow_redefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18915"><highlight class="normal"></highlight></codeline>
<codeline lineno="18916"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Item_flow_redefinitionContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18919"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitItem_flow_redefinition(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18921"><highlight class="normal"></highlight></codeline>
<codeline lineno="18922"><highlight class="normal">KerMLParser::Item_flow_redefinitionContext*<sp/>KerMLParser::item_flow_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="18923"><highlight class="normal"><sp/><sp/><ref refid="dc/df6/class_ker_m_l_parser_1_1_item__flow__redefinition_context" kindref="compound">Item_flow_redefinitionContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/df6/class_ker_m_l_parser_1_1_item__flow__redefinition_context" kindref="compound">Item_flow_redefinitionContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18924"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>460,<sp/>KerMLParser::RuleItem_flow_redefinition);</highlight></codeline>
<codeline lineno="18925"><highlight class="normal"></highlight></codeline>
<codeline lineno="18926"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18928"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18930"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18931"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18932"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18934"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18935"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1901);</highlight></codeline>
<codeline lineno="18936"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="18937"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18940"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18941"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18942"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18944"><highlight class="normal"></highlight></codeline>
<codeline lineno="18945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18947"><highlight class="normal"></highlight></codeline>
<codeline lineno="18948"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Value_partContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18949"><highlight class="normal"></highlight></codeline>
<codeline lineno="18950"><highlight class="normal">KerMLParser::Value_partContext::Value_partContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="18951"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="18952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18953"><highlight class="normal"></highlight></codeline>
<codeline lineno="18954"><highlight class="normal"><ref refid="d5/d2a/class_ker_m_l_parser_1_1_feature__value_context" kindref="compound">KerMLParser::Feature_valueContext</ref>*<sp/>KerMLParser::Value_partContext::feature_value()<sp/>{</highlight></codeline>
<codeline lineno="18955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_valueContext&gt;(0);</highlight></codeline>
<codeline lineno="18956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18957"><highlight class="normal"></highlight></codeline>
<codeline lineno="18958"><highlight class="normal"></highlight></codeline>
<codeline lineno="18959"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Value_partContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleValue_part;</highlight></codeline>
<codeline lineno="18961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18962"><highlight class="normal"></highlight></codeline>
<codeline lineno="18963"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Value_partContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18966"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterValue_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18968"><highlight class="normal"></highlight></codeline>
<codeline lineno="18969"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Value_partContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="18970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="18971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18972"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitValue_part(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18974"><highlight class="normal"></highlight></codeline>
<codeline lineno="18975"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::value_part()<sp/>{</highlight></codeline>
<codeline lineno="18976"><highlight class="normal"><sp/><sp/><ref refid="d8/d18/class_ker_m_l_parser_1_1_value__part_context" kindref="compound">Value_partContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d18/class_ker_m_l_parser_1_1_value__part_context" kindref="compound">Value_partContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="18977"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>462,<sp/>KerMLParser::RuleValue_part);</highlight></codeline>
<codeline lineno="18978"><highlight class="normal"></highlight></codeline>
<codeline lineno="18979"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="18981"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="18983"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18984"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="18985"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="18986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18987"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="18988"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1903);</highlight></codeline>
<codeline lineno="18989"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_value();</highlight></codeline>
<codeline lineno="18990"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18991"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="18993"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="18994"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="18995"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="18996"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18997"><highlight class="normal"></highlight></codeline>
<codeline lineno="18998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="18999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19000"><highlight class="normal"></highlight></codeline>
<codeline lineno="19001"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_valueContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19002"><highlight class="normal"></highlight></codeline>
<codeline lineno="19003"><highlight class="normal">KerMLParser::Feature_valueContext::Feature_valueContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19004"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19006"><highlight class="normal"></highlight></codeline>
<codeline lineno="19007"><highlight class="normal"><ref refid="d0/d40/class_ker_m_l_parser_1_1_owned__expression_context" kindref="compound">KerMLParser::Owned_expressionContext</ref>*<sp/>KerMLParser::Feature_valueContext::owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="19008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="19009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19010"><highlight class="normal"></highlight></codeline>
<codeline lineno="19011"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_valueContext::SYMBOL_EQUALS()<sp/>{</highlight></codeline>
<codeline lineno="19012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_EQUALS,<sp/>0);</highlight></codeline>
<codeline lineno="19013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19014"><highlight class="normal"></highlight></codeline>
<codeline lineno="19015"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_valueContext::SYMBOL_DEF_ASSIGN()<sp/>{</highlight></codeline>
<codeline lineno="19016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DEF_ASSIGN,<sp/>0);</highlight></codeline>
<codeline lineno="19017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19018"><highlight class="normal"></highlight></codeline>
<codeline lineno="19019"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_valueContext::KEYWORD_DEFAULT()<sp/>{</highlight></codeline>
<codeline lineno="19020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_DEFAULT,<sp/>0);</highlight></codeline>
<codeline lineno="19021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19022"><highlight class="normal"></highlight></codeline>
<codeline lineno="19023"><highlight class="normal"></highlight></codeline>
<codeline lineno="19024"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_valueContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_value;</highlight></codeline>
<codeline lineno="19026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19027"><highlight class="normal"></highlight></codeline>
<codeline lineno="19028"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_valueContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19031"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19033"><highlight class="normal"></highlight></codeline>
<codeline lineno="19034"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_valueContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19037"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19039"><highlight class="normal"></highlight></codeline>
<codeline lineno="19040"><highlight class="normal">KerMLParser::Feature_valueContext*<sp/>KerMLParser::feature_value()<sp/>{</highlight></codeline>
<codeline lineno="19041"><highlight class="normal"><sp/><sp/><ref refid="d5/d2a/class_ker_m_l_parser_1_1_feature__value_context" kindref="compound">Feature_valueContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d2a/class_ker_m_l_parser_1_1_feature__value_context" kindref="compound">Feature_valueContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19042"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>464,<sp/>KerMLParser::RuleFeature_value);</highlight></codeline>
<codeline lineno="19043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19044"><highlight class="normal"></highlight></codeline>
<codeline lineno="19045"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19047"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19049"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19050"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19051"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19053"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19054"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1911);</highlight></codeline>
<codeline lineno="19055"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="19057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_EQUALS:<sp/>{</highlight></codeline>
<codeline lineno="19058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1905);</highlight></codeline>
<codeline lineno="19059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_EQUALS);</highlight></codeline>
<codeline lineno="19060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19062"><highlight class="normal"></highlight></codeline>
<codeline lineno="19063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_DEF_ASSIGN:<sp/>{</highlight></codeline>
<codeline lineno="19064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1906);</highlight></codeline>
<codeline lineno="19065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DEF_ASSIGN);</highlight></codeline>
<codeline lineno="19066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19068"><highlight class="normal"></highlight></codeline>
<codeline lineno="19069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_DEFAULT:<sp/>{</highlight></codeline>
<codeline lineno="19070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1907);</highlight></codeline>
<codeline lineno="19071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_DEFAULT);</highlight></codeline>
<codeline lineno="19072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1909);</highlight></codeline>
<codeline lineno="19073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19074"><highlight class="normal"></highlight></codeline>
<codeline lineno="19075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="19076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="19077"><highlight class="normal"></highlight></codeline>
<codeline lineno="19078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="19079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1908);</highlight></codeline>
<codeline lineno="19080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="19081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="19082"><highlight class="normal"></highlight></codeline>
<codeline lineno="19083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS))<sp/>{</highlight></codeline>
<codeline lineno="19084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="19089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19093"><highlight class="normal"></highlight></codeline>
<codeline lineno="19094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19097"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1913);</highlight></codeline>
<codeline lineno="19098"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression();</highlight></codeline>
<codeline lineno="19099"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19102"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19103"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19104"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19106"><highlight class="normal"></highlight></codeline>
<codeline lineno="19107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19109"><highlight class="normal"></highlight></codeline>
<codeline lineno="19110"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Feature_assignmentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19111"><highlight class="normal"></highlight></codeline>
<codeline lineno="19112"><highlight class="normal">KerMLParser::Feature_assignmentContext::Feature_assignmentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19113"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19115"><highlight class="normal"></highlight></codeline>
<codeline lineno="19116"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Feature_assignmentContext::SYMBOL_ASSIGN()<sp/>{</highlight></codeline>
<codeline lineno="19117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ASSIGN,<sp/>0);</highlight></codeline>
<codeline lineno="19118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19119"><highlight class="normal"></highlight></codeline>
<codeline lineno="19120"><highlight class="normal">KerMLParser::Owned_expressionContext*<sp/>KerMLParser::Feature_assignmentContext::owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="19121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="19122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19123"><highlight class="normal"></highlight></codeline>
<codeline lineno="19124"><highlight class="normal"></highlight></codeline>
<codeline lineno="19125"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Feature_assignmentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleFeature_assignment;</highlight></codeline>
<codeline lineno="19127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19128"><highlight class="normal"></highlight></codeline>
<codeline lineno="19129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_assignmentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19132"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterFeature_assignment(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19134"><highlight class="normal"></highlight></codeline>
<codeline lineno="19135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Feature_assignmentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19138"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitFeature_assignment(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19140"><highlight class="normal"></highlight></codeline>
<codeline lineno="19141"><highlight class="normal">KerMLParser::Feature_assignmentContext*<sp/>KerMLParser::feature_assignment()<sp/>{</highlight></codeline>
<codeline lineno="19142"><highlight class="normal"><sp/><sp/><ref refid="d3/d6f/class_ker_m_l_parser_1_1_feature__assignment_context" kindref="compound">Feature_assignmentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d6f/class_ker_m_l_parser_1_1_feature__assignment_context" kindref="compound">Feature_assignmentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19143"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>466,<sp/>KerMLParser::RuleFeature_assignment);</highlight></codeline>
<codeline lineno="19144"><highlight class="normal"></highlight></codeline>
<codeline lineno="19145"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19147"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19150"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19151"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19153"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19154"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1915);</highlight></codeline>
<codeline lineno="19155"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ASSIGN);</highlight></codeline>
<codeline lineno="19156"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1916);</highlight></codeline>
<codeline lineno="19157"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression();</highlight></codeline>
<codeline lineno="19158"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19161"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19162"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19163"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19165"><highlight class="normal"></highlight></codeline>
<codeline lineno="19166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19168"><highlight class="normal"></highlight></codeline>
<codeline lineno="19169"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>MultiplicityContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19170"><highlight class="normal"></highlight></codeline>
<codeline lineno="19171"><highlight class="normal">KerMLParser::MultiplicityContext::MultiplicityContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19172"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19174"><highlight class="normal"></highlight></codeline>
<codeline lineno="19175"><highlight class="normal"><ref refid="da/d94/class_ker_m_l_parser_1_1_multiplicity__subset_context" kindref="compound">KerMLParser::Multiplicity_subsetContext</ref>*<sp/>KerMLParser::MultiplicityContext::multiplicity_subset()<sp/>{</highlight></codeline>
<codeline lineno="19176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_subsetContext&gt;(0);</highlight></codeline>
<codeline lineno="19177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19178"><highlight class="normal"></highlight></codeline>
<codeline lineno="19179"><highlight class="normal">KerMLParser::Multiplicity_rangeContext*<sp/>KerMLParser::MultiplicityContext::multiplicity_range()<sp/>{</highlight></codeline>
<codeline lineno="19180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_rangeContext&gt;(0);</highlight></codeline>
<codeline lineno="19181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19182"><highlight class="normal"></highlight></codeline>
<codeline lineno="19183"><highlight class="normal"></highlight></codeline>
<codeline lineno="19184"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::MultiplicityContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMultiplicity;</highlight></codeline>
<codeline lineno="19186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19187"><highlight class="normal"></highlight></codeline>
<codeline lineno="19188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::MultiplicityContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19191"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMultiplicity(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19193"><highlight class="normal"></highlight></codeline>
<codeline lineno="19194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::MultiplicityContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19197"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMultiplicity(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19199"><highlight class="normal"></highlight></codeline>
<codeline lineno="19200"><highlight class="normal">KerMLParser::MultiplicityContext*<sp/>KerMLParser::multiplicity()<sp/>{</highlight></codeline>
<codeline lineno="19201"><highlight class="normal"><sp/><sp/><ref refid="df/d8a/class_ker_m_l_parser_1_1_multiplicity_context" kindref="compound">MultiplicityContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d8a/class_ker_m_l_parser_1_1_multiplicity_context" kindref="compound">MultiplicityContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19202"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>468,<sp/>KerMLParser::RuleMultiplicity);</highlight></codeline>
<codeline lineno="19203"><highlight class="normal"></highlight></codeline>
<codeline lineno="19204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19206"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19209"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19210"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19212"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1920);</highlight></codeline>
<codeline lineno="19213"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>194,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="19215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="19216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1918);</highlight></codeline>
<codeline lineno="19218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_subset();</highlight></codeline>
<codeline lineno="19219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19221"><highlight class="normal"></highlight></codeline>
<codeline lineno="19222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="19223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="19224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1919);</highlight></codeline>
<codeline lineno="19225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_range();</highlight></codeline>
<codeline lineno="19226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19228"><highlight class="normal"></highlight></codeline>
<codeline lineno="19229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19232"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19235"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19236"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19237"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19239"><highlight class="normal"></highlight></codeline>
<codeline lineno="19240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19242"><highlight class="normal"></highlight></codeline>
<codeline lineno="19243"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Multiplicity_subsetContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19244"><highlight class="normal"></highlight></codeline>
<codeline lineno="19245"><highlight class="normal">KerMLParser::Multiplicity_subsetContext::Multiplicity_subsetContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19246"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19248"><highlight class="normal"></highlight></codeline>
<codeline lineno="19249"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Multiplicity_subsetContext::KEYWORD_MULTIPLICITY()<sp/>{</highlight></codeline>
<codeline lineno="19250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_MULTIPLICITY,<sp/>0);</highlight></codeline>
<codeline lineno="19251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19252"><highlight class="normal"></highlight></codeline>
<codeline lineno="19253"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Multiplicity_subsetContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="19254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="19255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19256"><highlight class="normal"></highlight></codeline>
<codeline lineno="19257"><highlight class="normal">KerMLParser::SubsetsContext*<sp/>KerMLParser::Multiplicity_subsetContext::subsets()<sp/>{</highlight></codeline>
<codeline lineno="19258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::SubsetsContext&gt;(0);</highlight></codeline>
<codeline lineno="19259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19260"><highlight class="normal"></highlight></codeline>
<codeline lineno="19261"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Multiplicity_subsetContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="19262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="19263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19264"><highlight class="normal"></highlight></codeline>
<codeline lineno="19265"><highlight class="normal"></highlight></codeline>
<codeline lineno="19266"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_subsetContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMultiplicity_subset;</highlight></codeline>
<codeline lineno="19268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19269"><highlight class="normal"></highlight></codeline>
<codeline lineno="19270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_subsetContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19273"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMultiplicity_subset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19275"><highlight class="normal"></highlight></codeline>
<codeline lineno="19276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_subsetContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19279"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMultiplicity_subset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19281"><highlight class="normal"></highlight></codeline>
<codeline lineno="19282"><highlight class="normal">KerMLParser::Multiplicity_subsetContext*<sp/>KerMLParser::multiplicity_subset()<sp/>{</highlight></codeline>
<codeline lineno="19283"><highlight class="normal"><sp/><sp/><ref refid="da/d94/class_ker_m_l_parser_1_1_multiplicity__subset_context" kindref="compound">Multiplicity_subsetContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d94/class_ker_m_l_parser_1_1_multiplicity__subset_context" kindref="compound">Multiplicity_subsetContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19284"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>470,<sp/>KerMLParser::RuleMultiplicity_subset);</highlight></codeline>
<codeline lineno="19285"><highlight class="normal"></highlight></codeline>
<codeline lineno="19286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19288"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19291"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19292"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19294"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19295"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1922);</highlight></codeline>
<codeline lineno="19296"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_MULTIPLICITY);</highlight></codeline>
<codeline lineno="19297"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1923);</highlight></codeline>
<codeline lineno="19298"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="19299"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1924);</highlight></codeline>
<codeline lineno="19300"><highlight class="normal"><sp/><sp/><sp/><sp/>subsets();</highlight></codeline>
<codeline lineno="19301"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1925);</highlight></codeline>
<codeline lineno="19302"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="19303"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19306"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19307"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19308"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19310"><highlight class="normal"></highlight></codeline>
<codeline lineno="19311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19313"><highlight class="normal"></highlight></codeline>
<codeline lineno="19314"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Multiplicity_rangeContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19315"><highlight class="normal"></highlight></codeline>
<codeline lineno="19316"><highlight class="normal">KerMLParser::Multiplicity_rangeContext::Multiplicity_rangeContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19317"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19319"><highlight class="normal"></highlight></codeline>
<codeline lineno="19320"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Multiplicity_rangeContext::KEYWORD_MULTIPLICITY()<sp/>{</highlight></codeline>
<codeline lineno="19321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_MULTIPLICITY,<sp/>0);</highlight></codeline>
<codeline lineno="19322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19323"><highlight class="normal"></highlight></codeline>
<codeline lineno="19324"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Multiplicity_rangeContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="19325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="19326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19327"><highlight class="normal"></highlight></codeline>
<codeline lineno="19328"><highlight class="normal">KerMLParser::Multiplicity_boundsContext*<sp/>KerMLParser::Multiplicity_rangeContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="19329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="19330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19331"><highlight class="normal"></highlight></codeline>
<codeline lineno="19332"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::Multiplicity_rangeContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="19333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="19334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19335"><highlight class="normal"></highlight></codeline>
<codeline lineno="19336"><highlight class="normal"></highlight></codeline>
<codeline lineno="19337"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_rangeContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMultiplicity_range;</highlight></codeline>
<codeline lineno="19339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19340"><highlight class="normal"></highlight></codeline>
<codeline lineno="19341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_rangeContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19344"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMultiplicity_range(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19346"><highlight class="normal"></highlight></codeline>
<codeline lineno="19347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_rangeContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19350"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMultiplicity_range(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19352"><highlight class="normal"></highlight></codeline>
<codeline lineno="19353"><highlight class="normal">KerMLParser::Multiplicity_rangeContext*<sp/>KerMLParser::multiplicity_range()<sp/>{</highlight></codeline>
<codeline lineno="19354"><highlight class="normal"><sp/><sp/><ref refid="de/d6b/class_ker_m_l_parser_1_1_multiplicity__range_context" kindref="compound">Multiplicity_rangeContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d6b/class_ker_m_l_parser_1_1_multiplicity__range_context" kindref="compound">Multiplicity_rangeContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19355"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>472,<sp/>KerMLParser::RuleMultiplicity_range);</highlight></codeline>
<codeline lineno="19356"><highlight class="normal"></highlight></codeline>
<codeline lineno="19357"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19359"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19362"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19363"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19365"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19366"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1927);</highlight></codeline>
<codeline lineno="19367"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_MULTIPLICITY);</highlight></codeline>
<codeline lineno="19368"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1928);</highlight></codeline>
<codeline lineno="19369"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="19370"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1929);</highlight></codeline>
<codeline lineno="19371"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="19372"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1930);</highlight></codeline>
<codeline lineno="19373"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="19374"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19377"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19378"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19379"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19381"><highlight class="normal"></highlight></codeline>
<codeline lineno="19382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19384"><highlight class="normal"></highlight></codeline>
<codeline lineno="19385"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_multiplicityContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19386"><highlight class="normal"></highlight></codeline>
<codeline lineno="19387"><highlight class="normal">KerMLParser::Owned_multiplicityContext::Owned_multiplicityContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19388"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19390"><highlight class="normal"></highlight></codeline>
<codeline lineno="19391"><highlight class="normal"><ref refid="d2/d28/class_ker_m_l_parser_1_1_multiplicity__bounds_context" kindref="compound">KerMLParser::Multiplicity_boundsContext</ref>*<sp/>KerMLParser::Owned_multiplicityContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="19392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="19393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19394"><highlight class="normal"></highlight></codeline>
<codeline lineno="19395"><highlight class="normal"></highlight></codeline>
<codeline lineno="19396"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_multiplicityContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_multiplicity;</highlight></codeline>
<codeline lineno="19398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19399"><highlight class="normal"></highlight></codeline>
<codeline lineno="19400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_multiplicityContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19403"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_multiplicity(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19405"><highlight class="normal"></highlight></codeline>
<codeline lineno="19406"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_multiplicityContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19409"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_multiplicity(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19411"><highlight class="normal"></highlight></codeline>
<codeline lineno="19412"><highlight class="normal">KerMLParser::Owned_multiplicityContext*<sp/>KerMLParser::owned_multiplicity()<sp/>{</highlight></codeline>
<codeline lineno="19413"><highlight class="normal"><sp/><sp/><ref refid="de/d68/class_ker_m_l_parser_1_1_owned__multiplicity_context" kindref="compound">Owned_multiplicityContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d68/class_ker_m_l_parser_1_1_owned__multiplicity_context" kindref="compound">Owned_multiplicityContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19414"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>474,<sp/>KerMLParser::RuleOwned_multiplicity);</highlight></codeline>
<codeline lineno="19415"><highlight class="normal"></highlight></codeline>
<codeline lineno="19416"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19418"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19420"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19421"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19422"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19424"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19425"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1932);</highlight></codeline>
<codeline lineno="19426"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="19427"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19430"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19431"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19432"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19434"><highlight class="normal"></highlight></codeline>
<codeline lineno="19435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19437"><highlight class="normal"></highlight></codeline>
<codeline lineno="19438"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Owned_multiplicity_rangeContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19439"><highlight class="normal"></highlight></codeline>
<codeline lineno="19440"><highlight class="normal">KerMLParser::Owned_multiplicity_rangeContext::Owned_multiplicity_rangeContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19441"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19443"><highlight class="normal"></highlight></codeline>
<codeline lineno="19444"><highlight class="normal"><ref refid="d2/d28/class_ker_m_l_parser_1_1_multiplicity__bounds_context" kindref="compound">KerMLParser::Multiplicity_boundsContext</ref>*<sp/>KerMLParser::Owned_multiplicity_rangeContext::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="19445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_boundsContext&gt;(0);</highlight></codeline>
<codeline lineno="19446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19447"><highlight class="normal"></highlight></codeline>
<codeline lineno="19448"><highlight class="normal"></highlight></codeline>
<codeline lineno="19449"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Owned_multiplicity_rangeContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleOwned_multiplicity_range;</highlight></codeline>
<codeline lineno="19451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19452"><highlight class="normal"></highlight></codeline>
<codeline lineno="19453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_multiplicity_rangeContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19456"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterOwned_multiplicity_range(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19458"><highlight class="normal"></highlight></codeline>
<codeline lineno="19459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Owned_multiplicity_rangeContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19462"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitOwned_multiplicity_range(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19464"><highlight class="normal"></highlight></codeline>
<codeline lineno="19465"><highlight class="normal">KerMLParser::Owned_multiplicity_rangeContext*<sp/>KerMLParser::owned_multiplicity_range()<sp/>{</highlight></codeline>
<codeline lineno="19466"><highlight class="normal"><sp/><sp/><ref refid="d5/d30/class_ker_m_l_parser_1_1_owned__multiplicity__range_context" kindref="compound">Owned_multiplicity_rangeContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d30/class_ker_m_l_parser_1_1_owned__multiplicity__range_context" kindref="compound">Owned_multiplicity_rangeContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19467"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>476,<sp/>KerMLParser::RuleOwned_multiplicity_range);</highlight></codeline>
<codeline lineno="19468"><highlight class="normal"></highlight></codeline>
<codeline lineno="19469"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19471"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19474"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19475"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19477"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19478"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1934);</highlight></codeline>
<codeline lineno="19479"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplicity_bounds();</highlight></codeline>
<codeline lineno="19480"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19483"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19484"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19485"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19487"><highlight class="normal"></highlight></codeline>
<codeline lineno="19488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19490"><highlight class="normal"></highlight></codeline>
<codeline lineno="19491"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Multiplicity_boundsContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19492"><highlight class="normal"></highlight></codeline>
<codeline lineno="19493"><highlight class="normal">KerMLParser::Multiplicity_boundsContext::Multiplicity_boundsContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19494"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19496"><highlight class="normal"></highlight></codeline>
<codeline lineno="19497"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Multiplicity_boundsContext::SYMBOL_SQUARE_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="19498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="19499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19500"><highlight class="normal"></highlight></codeline>
<codeline lineno="19501"><highlight class="normal">std::vector&lt;KerMLParser::Multiplicity_expression_memberContext<sp/>*&gt;<sp/>KerMLParser::Multiplicity_boundsContext::multiplicity_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="19502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Multiplicity_expression_memberContext&gt;();</highlight></codeline>
<codeline lineno="19503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19504"><highlight class="normal"></highlight></codeline>
<codeline lineno="19505"><highlight class="normal">KerMLParser::Multiplicity_expression_memberContext*<sp/>KerMLParser::Multiplicity_boundsContext::multiplicity_expression_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="19506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Multiplicity_expression_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="19507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19508"><highlight class="normal"></highlight></codeline>
<codeline lineno="19509"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Multiplicity_boundsContext::SYMBOL_SQUARE_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="19510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_SQUARE_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="19511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19512"><highlight class="normal"></highlight></codeline>
<codeline lineno="19513"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Multiplicity_boundsContext::SYMBOL_DDOT()<sp/>{</highlight></codeline>
<codeline lineno="19514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_DDOT,<sp/>0);</highlight></codeline>
<codeline lineno="19515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19516"><highlight class="normal"></highlight></codeline>
<codeline lineno="19517"><highlight class="normal"></highlight></codeline>
<codeline lineno="19518"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_boundsContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMultiplicity_bounds;</highlight></codeline>
<codeline lineno="19520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19521"><highlight class="normal"></highlight></codeline>
<codeline lineno="19522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_boundsContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19525"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMultiplicity_bounds(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19527"><highlight class="normal"></highlight></codeline>
<codeline lineno="19528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_boundsContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19531"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMultiplicity_bounds(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19533"><highlight class="normal"></highlight></codeline>
<codeline lineno="19534"><highlight class="normal">KerMLParser::Multiplicity_boundsContext*<sp/>KerMLParser::multiplicity_bounds()<sp/>{</highlight></codeline>
<codeline lineno="19535"><highlight class="normal"><sp/><sp/><ref refid="d2/d28/class_ker_m_l_parser_1_1_multiplicity__bounds_context" kindref="compound">Multiplicity_boundsContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d28/class_ker_m_l_parser_1_1_multiplicity__bounds_context" kindref="compound">Multiplicity_boundsContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19536"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>478,<sp/>KerMLParser::RuleMultiplicity_bounds);</highlight></codeline>
<codeline lineno="19537"><highlight class="normal"></highlight></codeline>
<codeline lineno="19538"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19540"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19542"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19543"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19544"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19546"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19547"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1936);</highlight></codeline>
<codeline lineno="19548"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="19549"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1940);</highlight></codeline>
<codeline lineno="19550"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19551"><highlight class="normal"></highlight></codeline>
<codeline lineno="19552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>195,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="19553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="19554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1937);</highlight></codeline>
<codeline lineno="19555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplicity_expression_member();</highlight></codeline>
<codeline lineno="19556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1938);</highlight></codeline>
<codeline lineno="19557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_DDOT);</highlight></codeline>
<codeline lineno="19558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19560"><highlight class="normal"></highlight></codeline>
<codeline lineno="19561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19564"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1942);</highlight></codeline>
<codeline lineno="19565"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplicity_expression_member();</highlight></codeline>
<codeline lineno="19566"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1943);</highlight></codeline>
<codeline lineno="19567"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_SQUARE_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="19568"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19571"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19572"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19573"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19575"><highlight class="normal"></highlight></codeline>
<codeline lineno="19576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19578"><highlight class="normal"></highlight></codeline>
<codeline lineno="19579"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Multiplicity_expression_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19580"><highlight class="normal"></highlight></codeline>
<codeline lineno="19581"><highlight class="normal">KerMLParser::Multiplicity_expression_memberContext::Multiplicity_expression_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19582"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19584"><highlight class="normal"></highlight></codeline>
<codeline lineno="19585"><highlight class="normal"><ref refid="d3/d31/class_ker_m_l_parser_1_1_internal__multiplicity__expression__member_context" kindref="compound">KerMLParser::Internal_multiplicity_expression_memberContext</ref>*<sp/>KerMLParser::Multiplicity_expression_memberContext::internal_multiplicity_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="19586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Internal_multiplicity_expression_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="19587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19588"><highlight class="normal"></highlight></codeline>
<codeline lineno="19589"><highlight class="normal"></highlight></codeline>
<codeline lineno="19590"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_expression_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMultiplicity_expression_member;</highlight></codeline>
<codeline lineno="19592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19593"><highlight class="normal"></highlight></codeline>
<codeline lineno="19594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_expression_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19597"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMultiplicity_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19599"><highlight class="normal"></highlight></codeline>
<codeline lineno="19600"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Multiplicity_expression_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19603"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMultiplicity_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19605"><highlight class="normal"></highlight></codeline>
<codeline lineno="19606"><highlight class="normal">KerMLParser::Multiplicity_expression_memberContext*<sp/>KerMLParser::multiplicity_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="19607"><highlight class="normal"><sp/><sp/><ref refid="d8/d3d/class_ker_m_l_parser_1_1_multiplicity__expression__member_context" kindref="compound">Multiplicity_expression_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d3d/class_ker_m_l_parser_1_1_multiplicity__expression__member_context" kindref="compound">Multiplicity_expression_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19608"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>480,<sp/>KerMLParser::RuleMultiplicity_expression_member);</highlight></codeline>
<codeline lineno="19609"><highlight class="normal"></highlight></codeline>
<codeline lineno="19610"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19612"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19615"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19616"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19618"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19619"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1945);</highlight></codeline>
<codeline lineno="19620"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_multiplicity_expression_member();</highlight></codeline>
<codeline lineno="19621"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19624"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19625"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19626"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19628"><highlight class="normal"></highlight></codeline>
<codeline lineno="19629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19631"><highlight class="normal"></highlight></codeline>
<codeline lineno="19632"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Internal_multiplicity_expression_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19633"><highlight class="normal"></highlight></codeline>
<codeline lineno="19634"><highlight class="normal">KerMLParser::Internal_multiplicity_expression_memberContext::Internal_multiplicity_expression_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19635"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19637"><highlight class="normal"></highlight></codeline>
<codeline lineno="19638"><highlight class="normal"><ref refid="d7/d7b/class_ker_m_l_parser_1_1_literal__expression_context" kindref="compound">KerMLParser::Literal_expressionContext</ref>*<sp/>KerMLParser::Internal_multiplicity_expression_memberContext::literal_expression()<sp/>{</highlight></codeline>
<codeline lineno="19639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Literal_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="19640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19641"><highlight class="normal"></highlight></codeline>
<codeline lineno="19642"><highlight class="normal">KerMLParser::Feature_reference_expressionContext*<sp/>KerMLParser::Internal_multiplicity_expression_memberContext::feature_reference_expression()<sp/>{</highlight></codeline>
<codeline lineno="19643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_reference_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="19644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19645"><highlight class="normal"></highlight></codeline>
<codeline lineno="19646"><highlight class="normal"></highlight></codeline>
<codeline lineno="19647"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Internal_multiplicity_expression_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleInternal_multiplicity_expression_member;</highlight></codeline>
<codeline lineno="19649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19650"><highlight class="normal"></highlight></codeline>
<codeline lineno="19651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Internal_multiplicity_expression_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19654"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterInternal_multiplicity_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19656"><highlight class="normal"></highlight></codeline>
<codeline lineno="19657"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Internal_multiplicity_expression_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19660"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitInternal_multiplicity_expression_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19662"><highlight class="normal"></highlight></codeline>
<codeline lineno="19663"><highlight class="normal">KerMLParser::Internal_multiplicity_expression_memberContext*<sp/>KerMLParser::internal_multiplicity_expression_member()<sp/>{</highlight></codeline>
<codeline lineno="19664"><highlight class="normal"><sp/><sp/><ref refid="d3/d31/class_ker_m_l_parser_1_1_internal__multiplicity__expression__member_context" kindref="compound">Internal_multiplicity_expression_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d31/class_ker_m_l_parser_1_1_internal__multiplicity__expression__member_context" kindref="compound">Internal_multiplicity_expression_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19665"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>482,<sp/>KerMLParser::RuleInternal_multiplicity_expression_member);</highlight></codeline>
<codeline lineno="19666"><highlight class="normal"></highlight></codeline>
<codeline lineno="19667"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19669"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19672"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19673"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19675"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19676"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1949);</highlight></codeline>
<codeline lineno="19677"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="19679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_FALSE:</highlight></codeline>
<codeline lineno="19680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_TRUE:</highlight></codeline>
<codeline lineno="19681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STAR:</highlight></codeline>
<codeline lineno="19682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_DOT:</highlight></codeline>
<codeline lineno="19683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::DECIMAL_VALUE:</highlight></codeline>
<codeline lineno="19684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::EXPONENTIAL_VALUE:</highlight></codeline>
<codeline lineno="19685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::STRING_VALUE:<sp/>{</highlight></codeline>
<codeline lineno="19686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1947);</highlight></codeline>
<codeline lineno="19687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal_expression();</highlight></codeline>
<codeline lineno="19688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19690"><highlight class="normal"></highlight></codeline>
<codeline lineno="19691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::NAME:<sp/>{</highlight></codeline>
<codeline lineno="19692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1948);</highlight></codeline>
<codeline lineno="19693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_reference_expression();</highlight></codeline>
<codeline lineno="19694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19696"><highlight class="normal"></highlight></codeline>
<codeline lineno="19697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19700"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19703"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19704"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19705"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19706"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19707"><highlight class="normal"></highlight></codeline>
<codeline lineno="19708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19710"><highlight class="normal"></highlight></codeline>
<codeline lineno="19711"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>MetaclassContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19712"><highlight class="normal"></highlight></codeline>
<codeline lineno="19713"><highlight class="normal">KerMLParser::MetaclassContext::MetaclassContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19714"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19716"><highlight class="normal"></highlight></codeline>
<codeline lineno="19717"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::MetaclassContext::KEYWORD_METACLASS()<sp/>{</highlight></codeline>
<codeline lineno="19718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_METACLASS,<sp/>0);</highlight></codeline>
<codeline lineno="19719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19720"><highlight class="normal"></highlight></codeline>
<codeline lineno="19721"><highlight class="normal">KerMLParser::Type_bodyContext*<sp/>KerMLParser::MetaclassContext::type_body()<sp/>{</highlight></codeline>
<codeline lineno="19722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="19723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19724"><highlight class="normal"></highlight></codeline>
<codeline lineno="19725"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::MetaclassContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="19726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="19727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19728"><highlight class="normal"></highlight></codeline>
<codeline lineno="19729"><highlight class="normal">KerMLParser::Classifier_declarationContext*<sp/>KerMLParser::MetaclassContext::classifier_declaration()<sp/>{</highlight></codeline>
<codeline lineno="19730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Classifier_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="19731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19732"><highlight class="normal"></highlight></codeline>
<codeline lineno="19733"><highlight class="normal">KerMLParser::Type_prefixContext*<sp/>KerMLParser::MetaclassContext::type_prefix()<sp/>{</highlight></codeline>
<codeline lineno="19734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Type_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="19735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19736"><highlight class="normal"></highlight></codeline>
<codeline lineno="19737"><highlight class="normal">std::vector&lt;tree::TerminalNode<sp/>*&gt;<sp/>KerMLParser::MetaclassContext::NAME()<sp/>{</highlight></codeline>
<codeline lineno="19738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTokens(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="19739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19740"><highlight class="normal"></highlight></codeline>
<codeline lineno="19741"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::MetaclassContext::NAME(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="19742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::NAME,<sp/>i);</highlight></codeline>
<codeline lineno="19743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19744"><highlight class="normal"></highlight></codeline>
<codeline lineno="19745"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::MetaclassContext::SPECIALIZES()<sp/>{</highlight></codeline>
<codeline lineno="19746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SPECIALIZES,<sp/>0);</highlight></codeline>
<codeline lineno="19747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19748"><highlight class="normal"></highlight></codeline>
<codeline lineno="19749"><highlight class="normal"></highlight></codeline>
<codeline lineno="19750"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::MetaclassContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetaclass;</highlight></codeline>
<codeline lineno="19752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19753"><highlight class="normal"></highlight></codeline>
<codeline lineno="19754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::MetaclassContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19757"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetaclass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19759"><highlight class="normal"></highlight></codeline>
<codeline lineno="19760"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::MetaclassContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19763"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetaclass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19765"><highlight class="normal"></highlight></codeline>
<codeline lineno="19766"><highlight class="normal">KerMLParser::MetaclassContext*<sp/>KerMLParser::metaclass()<sp/>{</highlight></codeline>
<codeline lineno="19767"><highlight class="normal"><sp/><sp/><ref refid="da/d9c/class_ker_m_l_parser_1_1_metaclass_context" kindref="compound">MetaclassContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d9c/class_ker_m_l_parser_1_1_metaclass_context" kindref="compound">MetaclassContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19768"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>484,<sp/>KerMLParser::RuleMetaclass);</highlight></codeline>
<codeline lineno="19769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19770"><highlight class="normal"></highlight></codeline>
<codeline lineno="19771"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19773"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19776"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19777"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19779"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19780"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1952);</highlight></codeline>
<codeline lineno="19781"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19782"><highlight class="normal"></highlight></codeline>
<codeline lineno="19783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>197,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="19784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="19785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1951);</highlight></codeline>
<codeline lineno="19786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_prefix();</highlight></codeline>
<codeline lineno="19787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19789"><highlight class="normal"></highlight></codeline>
<codeline lineno="19790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19793"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1954);</highlight></codeline>
<codeline lineno="19794"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_METACLASS);</highlight></codeline>
<codeline lineno="19795"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1957);</highlight></codeline>
<codeline lineno="19796"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>198,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="19798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="19799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1955);</highlight></codeline>
<codeline lineno="19800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="19801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19803"><highlight class="normal"></highlight></codeline>
<codeline lineno="19804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="19805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1956);</highlight></codeline>
<codeline lineno="19806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classifier_declaration();</highlight></codeline>
<codeline lineno="19807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19809"><highlight class="normal"></highlight></codeline>
<codeline lineno="19810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19813"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1960);</highlight></codeline>
<codeline lineno="19814"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19815"><highlight class="normal"></highlight></codeline>
<codeline lineno="19816"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="19817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="19818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1959);</highlight></codeline>
<codeline lineno="19819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="19820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19821"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1964);</highlight></codeline>
<codeline lineno="19822"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19823"><highlight class="normal"></highlight></codeline>
<codeline lineno="19824"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="19825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SPECIALIZES)<sp/>{</highlight></codeline>
<codeline lineno="19826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1962);</highlight></codeline>
<codeline lineno="19827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SPECIALIZES);</highlight></codeline>
<codeline lineno="19828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1963);</highlight></codeline>
<codeline lineno="19829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::NAME);</highlight></codeline>
<codeline lineno="19830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19831"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1966);</highlight></codeline>
<codeline lineno="19832"><highlight class="normal"><sp/><sp/><sp/><sp/>type_body();</highlight></codeline>
<codeline lineno="19833"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19836"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19837"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19838"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19839"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19840"><highlight class="normal"></highlight></codeline>
<codeline lineno="19841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19843"><highlight class="normal"></highlight></codeline>
<codeline lineno="19844"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Prefix_metadata_annotationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19845"><highlight class="normal"></highlight></codeline>
<codeline lineno="19846"><highlight class="normal">KerMLParser::Prefix_metadata_annotationContext::Prefix_metadata_annotationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19847"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19849"><highlight class="normal"></highlight></codeline>
<codeline lineno="19850"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Prefix_metadata_annotationContext::SYMBOL_HASHTAG()<sp/>{</highlight></codeline>
<codeline lineno="19851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_HASHTAG,<sp/>0);</highlight></codeline>
<codeline lineno="19852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19853"><highlight class="normal"></highlight></codeline>
<codeline lineno="19854"><highlight class="normal">KerMLParser::Prefix_metadata_featureContext*<sp/>KerMLParser::Prefix_metadata_annotationContext::prefix_metadata_feature()<sp/>{</highlight></codeline>
<codeline lineno="19855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_featureContext&gt;(0);</highlight></codeline>
<codeline lineno="19856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19857"><highlight class="normal"></highlight></codeline>
<codeline lineno="19858"><highlight class="normal"></highlight></codeline>
<codeline lineno="19859"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_annotationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrefix_metadata_annotation;</highlight></codeline>
<codeline lineno="19861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19862"><highlight class="normal"></highlight></codeline>
<codeline lineno="19863"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_annotationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19866"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrefix_metadata_annotation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19868"><highlight class="normal"></highlight></codeline>
<codeline lineno="19869"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_annotationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19872"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrefix_metadata_annotation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19874"><highlight class="normal"></highlight></codeline>
<codeline lineno="19875"><highlight class="normal">KerMLParser::Prefix_metadata_annotationContext*<sp/>KerMLParser::prefix_metadata_annotation()<sp/>{</highlight></codeline>
<codeline lineno="19876"><highlight class="normal"><sp/><sp/><ref refid="d3/d40/class_ker_m_l_parser_1_1_prefix__metadata__annotation_context" kindref="compound">Prefix_metadata_annotationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d3/d40/class_ker_m_l_parser_1_1_prefix__metadata__annotation_context" kindref="compound">Prefix_metadata_annotationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19877"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>486,<sp/>KerMLParser::RulePrefix_metadata_annotation);</highlight></codeline>
<codeline lineno="19878"><highlight class="normal"></highlight></codeline>
<codeline lineno="19879"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19881"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19883"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19884"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19885"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19887"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19888"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1968);</highlight></codeline>
<codeline lineno="19889"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_HASHTAG);</highlight></codeline>
<codeline lineno="19890"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1969);</highlight></codeline>
<codeline lineno="19891"><highlight class="normal"><sp/><sp/><sp/><sp/>prefix_metadata_feature();</highlight></codeline>
<codeline lineno="19892"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19895"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19896"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19897"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19898"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19899"><highlight class="normal"></highlight></codeline>
<codeline lineno="19900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19902"><highlight class="normal"></highlight></codeline>
<codeline lineno="19903"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Prefix_metadata_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19904"><highlight class="normal"></highlight></codeline>
<codeline lineno="19905"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext::Prefix_metadata_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19906"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19908"><highlight class="normal"></highlight></codeline>
<codeline lineno="19909"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Prefix_metadata_memberContext::SYMBOL_HASHTAG()<sp/>{</highlight></codeline>
<codeline lineno="19910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_HASHTAG,<sp/>0);</highlight></codeline>
<codeline lineno="19911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19912"><highlight class="normal"></highlight></codeline>
<codeline lineno="19913"><highlight class="normal">KerMLParser::Prefix_metadata_featureContext*<sp/>KerMLParser::Prefix_metadata_memberContext::prefix_metadata_feature()<sp/>{</highlight></codeline>
<codeline lineno="19914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_featureContext&gt;(0);</highlight></codeline>
<codeline lineno="19915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19916"><highlight class="normal"></highlight></codeline>
<codeline lineno="19917"><highlight class="normal"></highlight></codeline>
<codeline lineno="19918"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrefix_metadata_member;</highlight></codeline>
<codeline lineno="19920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19921"><highlight class="normal"></highlight></codeline>
<codeline lineno="19922"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19925"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrefix_metadata_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19927"><highlight class="normal"></highlight></codeline>
<codeline lineno="19928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19931"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrefix_metadata_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19933"><highlight class="normal"></highlight></codeline>
<codeline lineno="19934"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="19935"><highlight class="normal"><sp/><sp/><ref refid="d5/d96/class_ker_m_l_parser_1_1_prefix__metadata__member_context" kindref="compound">Prefix_metadata_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d96/class_ker_m_l_parser_1_1_prefix__metadata__member_context" kindref="compound">Prefix_metadata_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19936"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>488,<sp/>KerMLParser::RulePrefix_metadata_member);</highlight></codeline>
<codeline lineno="19937"><highlight class="normal"></highlight></codeline>
<codeline lineno="19938"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19940"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19943"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19944"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="19945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19946"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="19947"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1971);</highlight></codeline>
<codeline lineno="19948"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_HASHTAG);</highlight></codeline>
<codeline lineno="19949"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1972);</highlight></codeline>
<codeline lineno="19950"><highlight class="normal"><sp/><sp/><sp/><sp/>prefix_metadata_feature();</highlight></codeline>
<codeline lineno="19951"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="19954"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="19955"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="19956"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="19957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19958"><highlight class="normal"></highlight></codeline>
<codeline lineno="19959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="19960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19961"><highlight class="normal"></highlight></codeline>
<codeline lineno="19962"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Prefix_metadata_featureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19963"><highlight class="normal"></highlight></codeline>
<codeline lineno="19964"><highlight class="normal">KerMLParser::Prefix_metadata_featureContext::Prefix_metadata_featureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="19965"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="19966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19967"><highlight class="normal"></highlight></codeline>
<codeline lineno="19968"><highlight class="normal"><ref refid="d0/d7c/class_ker_m_l_parser_1_1_owned__feature__typing_context" kindref="compound">KerMLParser::Owned_feature_typingContext</ref>*<sp/>KerMLParser::Prefix_metadata_featureContext::owned_feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="19969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="19970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19971"><highlight class="normal"></highlight></codeline>
<codeline lineno="19972"><highlight class="normal"></highlight></codeline>
<codeline lineno="19973"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_featureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePrefix_metadata_feature;</highlight></codeline>
<codeline lineno="19975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19976"><highlight class="normal"></highlight></codeline>
<codeline lineno="19977"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_featureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19980"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPrefix_metadata_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19982"><highlight class="normal"></highlight></codeline>
<codeline lineno="19983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Prefix_metadata_featureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="19984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="19985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19986"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPrefix_metadata_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19988"><highlight class="normal"></highlight></codeline>
<codeline lineno="19989"><highlight class="normal">KerMLParser::Prefix_metadata_featureContext*<sp/>KerMLParser::prefix_metadata_feature()<sp/>{</highlight></codeline>
<codeline lineno="19990"><highlight class="normal"><sp/><sp/><ref refid="df/d9a/class_ker_m_l_parser_1_1_prefix__metadata__feature_context" kindref="compound">Prefix_metadata_featureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="df/d9a/class_ker_m_l_parser_1_1_prefix__metadata__feature_context" kindref="compound">Prefix_metadata_featureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="19991"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>490,<sp/>KerMLParser::RulePrefix_metadata_feature);</highlight></codeline>
<codeline lineno="19992"><highlight class="normal"></highlight></codeline>
<codeline lineno="19993"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="19995"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="19997"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19998"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="19999"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20001"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20002"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1974);</highlight></codeline>
<codeline lineno="20003"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_feature_typing();</highlight></codeline>
<codeline lineno="20004"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20007"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20008"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20009"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20011"><highlight class="normal"></highlight></codeline>
<codeline lineno="20012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20014"><highlight class="normal"></highlight></codeline>
<codeline lineno="20015"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_featureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20016"><highlight class="normal"></highlight></codeline>
<codeline lineno="20017"><highlight class="normal">KerMLParser::Metadata_featureContext::Metadata_featureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20018"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20020"><highlight class="normal"></highlight></codeline>
<codeline lineno="20021"><highlight class="normal"><ref refid="d2/d26/class_ker_m_l_parser_1_1_metadata__feature__declaration_context" kindref="compound">KerMLParser::Metadata_feature_declarationContext</ref>*<sp/>KerMLParser::Metadata_featureContext::metadata_feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="20022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_feature_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="20023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20024"><highlight class="normal"></highlight></codeline>
<codeline lineno="20025"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_featureContext::SYMBOL_AT()<sp/>{</highlight></codeline>
<codeline lineno="20026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_AT,<sp/>0);</highlight></codeline>
<codeline lineno="20027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20028"><highlight class="normal"></highlight></codeline>
<codeline lineno="20029"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_featureContext::KEYWORD_METADATA()<sp/>{</highlight></codeline>
<codeline lineno="20030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_METADATA,<sp/>0);</highlight></codeline>
<codeline lineno="20031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20032"><highlight class="normal"></highlight></codeline>
<codeline lineno="20033"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_featureContext::KEYWORD_ABOUT()<sp/>{</highlight></codeline>
<codeline lineno="20034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_ABOUT,<sp/>0);</highlight></codeline>
<codeline lineno="20035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20036"><highlight class="normal"></highlight></codeline>
<codeline lineno="20037"><highlight class="normal">std::vector&lt;KerMLParser::AnnotationContext<sp/>*&gt;<sp/>KerMLParser::Metadata_featureContext::annotation()<sp/>{</highlight></codeline>
<codeline lineno="20038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::AnnotationContext&gt;();</highlight></codeline>
<codeline lineno="20039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20040"><highlight class="normal"></highlight></codeline>
<codeline lineno="20041"><highlight class="normal">KerMLParser::AnnotationContext*<sp/>KerMLParser::Metadata_featureContext::annotation(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::AnnotationContext&gt;(i);</highlight></codeline>
<codeline lineno="20043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20044"><highlight class="normal"></highlight></codeline>
<codeline lineno="20045"><highlight class="normal">std::vector&lt;KerMLParser::Prefix_metadata_memberContext<sp/>*&gt;<sp/>KerMLParser::Metadata_featureContext::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="20046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Prefix_metadata_memberContext&gt;();</highlight></codeline>
<codeline lineno="20047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20048"><highlight class="normal"></highlight></codeline>
<codeline lineno="20049"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::Metadata_featureContext::prefix_metadata_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="20051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20052"><highlight class="normal"></highlight></codeline>
<codeline lineno="20053"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_featureContext::SYMBOL_COMMA()<sp/>{</highlight></codeline>
<codeline lineno="20054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_COMMA,<sp/>0);</highlight></codeline>
<codeline lineno="20055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20056"><highlight class="normal"></highlight></codeline>
<codeline lineno="20057"><highlight class="normal"></highlight></codeline>
<codeline lineno="20058"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_featureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_feature;</highlight></codeline>
<codeline lineno="20060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20061"><highlight class="normal"></highlight></codeline>
<codeline lineno="20062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_featureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20065"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20067"><highlight class="normal"></highlight></codeline>
<codeline lineno="20068"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_featureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20071"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20073"><highlight class="normal"></highlight></codeline>
<codeline lineno="20074"><highlight class="normal">KerMLParser::Metadata_featureContext*<sp/>KerMLParser::metadata_feature()<sp/>{</highlight></codeline>
<codeline lineno="20075"><highlight class="normal"><sp/><sp/><ref refid="da/d98/class_ker_m_l_parser_1_1_metadata__feature_context" kindref="compound">Metadata_featureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d98/class_ker_m_l_parser_1_1_metadata__feature_context" kindref="compound">Metadata_featureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20076"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>492,<sp/>KerMLParser::RuleMetadata_feature);</highlight></codeline>
<codeline lineno="20077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20078"><highlight class="normal"></highlight></codeline>
<codeline lineno="20079"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20081"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20083"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20084"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20085"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20087"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20088"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1979);</highlight></codeline>
<codeline lineno="20089"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20090"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_HASHTAG)<sp/>{</highlight></codeline>
<codeline lineno="20092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1976);</highlight></codeline>
<codeline lineno="20093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_member();</highlight></codeline>
<codeline lineno="20094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1981);</highlight></codeline>
<codeline lineno="20095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20098"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1982);</highlight></codeline>
<codeline lineno="20099"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_METADATA<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_AT))<sp/>{</highlight></codeline>
<codeline lineno="20101"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="20106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20107"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1983);</highlight></codeline>
<codeline lineno="20108"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata_feature_declaration();</highlight></codeline>
<codeline lineno="20109"><highlight class="normal"></highlight></codeline>
<codeline lineno="20110"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1984);</highlight></codeline>
<codeline lineno="20111"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_ABOUT);</highlight></codeline>
<codeline lineno="20112"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1985);</highlight></codeline>
<codeline lineno="20113"><highlight class="normal"><sp/><sp/><sp/><sp/>annotation();</highlight></codeline>
<codeline lineno="20114"><highlight class="normal"></highlight></codeline>
<codeline lineno="20115"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1986);</highlight></codeline>
<codeline lineno="20116"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_COMMA);</highlight></codeline>
<codeline lineno="20117"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1987);</highlight></codeline>
<codeline lineno="20118"><highlight class="normal"><sp/><sp/><sp/><sp/>annotation();</highlight></codeline>
<codeline lineno="20119"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20122"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20123"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20124"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20126"><highlight class="normal"></highlight></codeline>
<codeline lineno="20127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20129"><highlight class="normal"></highlight></codeline>
<codeline lineno="20130"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_feature_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20131"><highlight class="normal"></highlight></codeline>
<codeline lineno="20132"><highlight class="normal">KerMLParser::Metadata_feature_declarationContext::Metadata_feature_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20133"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20135"><highlight class="normal"></highlight></codeline>
<codeline lineno="20136"><highlight class="normal"><ref refid="d0/d7c/class_ker_m_l_parser_1_1_owned__feature__typing_context" kindref="compound">KerMLParser::Owned_feature_typingContext</ref>*<sp/>KerMLParser::Metadata_feature_declarationContext::owned_feature_typing()<sp/>{</highlight></codeline>
<codeline lineno="20137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_feature_typingContext&gt;(0);</highlight></codeline>
<codeline lineno="20138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20139"><highlight class="normal"></highlight></codeline>
<codeline lineno="20140"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Metadata_feature_declarationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="20141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="20142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20143"><highlight class="normal"></highlight></codeline>
<codeline lineno="20144"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_feature_declarationContext::SYMBOL_TYPED_BY()<sp/>{</highlight></codeline>
<codeline lineno="20145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_TYPED_BY,<sp/>0);</highlight></codeline>
<codeline lineno="20146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20147"><highlight class="normal"></highlight></codeline>
<codeline lineno="20148"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_feature_declarationContext::KEYWORD_TYPED()<sp/>{</highlight></codeline>
<codeline lineno="20149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_TYPED,<sp/>0);</highlight></codeline>
<codeline lineno="20150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20151"><highlight class="normal"></highlight></codeline>
<codeline lineno="20152"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_feature_declarationContext::KEYWORD_BY()<sp/>{</highlight></codeline>
<codeline lineno="20153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_BY,<sp/>0);</highlight></codeline>
<codeline lineno="20154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20155"><highlight class="normal"></highlight></codeline>
<codeline lineno="20156"><highlight class="normal"></highlight></codeline>
<codeline lineno="20157"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_feature_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_feature_declaration;</highlight></codeline>
<codeline lineno="20159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20160"><highlight class="normal"></highlight></codeline>
<codeline lineno="20161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_feature_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20164"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_feature_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20166"><highlight class="normal"></highlight></codeline>
<codeline lineno="20167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_feature_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20170"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_feature_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20172"><highlight class="normal"></highlight></codeline>
<codeline lineno="20173"><highlight class="normal">KerMLParser::Metadata_feature_declarationContext*<sp/>KerMLParser::metadata_feature_declaration()<sp/>{</highlight></codeline>
<codeline lineno="20174"><highlight class="normal"><sp/><sp/><ref refid="d2/d26/class_ker_m_l_parser_1_1_metadata__feature__declaration_context" kindref="compound">Metadata_feature_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d2/d26/class_ker_m_l_parser_1_1_metadata__feature__declaration_context" kindref="compound">Metadata_feature_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20175"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>494,<sp/>KerMLParser::RuleMetadata_feature_declaration);</highlight></codeline>
<codeline lineno="20176"><highlight class="normal"></highlight></codeline>
<codeline lineno="20177"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20182"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20183"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20185"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20186"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1995);</highlight></codeline>
<codeline lineno="20187"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20188"><highlight class="normal"></highlight></codeline>
<codeline lineno="20189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>203,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="20190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="20191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1989);</highlight></codeline>
<codeline lineno="20192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="20193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(1993);</highlight></codeline>
<codeline lineno="20194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="20196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_TYPED_BY:<sp/>{</highlight></codeline>
<codeline lineno="20197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1990);</highlight></codeline>
<codeline lineno="20198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_TYPED_BY);</highlight></codeline>
<codeline lineno="20199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20201"><highlight class="normal"></highlight></codeline>
<codeline lineno="20202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::KEYWORD_TYPED:<sp/>{</highlight></codeline>
<codeline lineno="20203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1991);</highlight></codeline>
<codeline lineno="20204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_TYPED);</highlight></codeline>
<codeline lineno="20205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1992);</highlight></codeline>
<codeline lineno="20206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_BY);</highlight></codeline>
<codeline lineno="20207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20209"><highlight class="normal"></highlight></codeline>
<codeline lineno="20210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20215"><highlight class="normal"></highlight></codeline>
<codeline lineno="20216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20219"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(1997);</highlight></codeline>
<codeline lineno="20220"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_feature_typing();</highlight></codeline>
<codeline lineno="20221"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20224"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20225"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20226"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20228"><highlight class="normal"></highlight></codeline>
<codeline lineno="20229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20231"><highlight class="normal"></highlight></codeline>
<codeline lineno="20232"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_bodyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20233"><highlight class="normal"></highlight></codeline>
<codeline lineno="20234"><highlight class="normal">KerMLParser::Metadata_bodyContext::Metadata_bodyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20235"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20237"><highlight class="normal"></highlight></codeline>
<codeline lineno="20238"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_bodyContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="20239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="20240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20241"><highlight class="normal"></highlight></codeline>
<codeline lineno="20242"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_bodyContext::SYMBOL_CURLY_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="20243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="20244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20245"><highlight class="normal"></highlight></codeline>
<codeline lineno="20246"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_bodyContext::SYMBOL_CURLY_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="20247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="20248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20249"><highlight class="normal"></highlight></codeline>
<codeline lineno="20250"><highlight class="normal">std::vector&lt;KerMLParser::Metadata_body_elementContext<sp/>*&gt;<sp/>KerMLParser::Metadata_bodyContext::metadata_body_element()<sp/>{</highlight></codeline>
<codeline lineno="20251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Metadata_body_elementContext&gt;();</highlight></codeline>
<codeline lineno="20252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20253"><highlight class="normal"></highlight></codeline>
<codeline lineno="20254"><highlight class="normal">KerMLParser::Metadata_body_elementContext*<sp/>KerMLParser::Metadata_bodyContext::metadata_body_element(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_body_elementContext&gt;(i);</highlight></codeline>
<codeline lineno="20256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20257"><highlight class="normal"></highlight></codeline>
<codeline lineno="20258"><highlight class="normal"></highlight></codeline>
<codeline lineno="20259"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_bodyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_body;</highlight></codeline>
<codeline lineno="20261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20262"><highlight class="normal"></highlight></codeline>
<codeline lineno="20263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_bodyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20266"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20268"><highlight class="normal"></highlight></codeline>
<codeline lineno="20269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_bodyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20272"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20274"><highlight class="normal"></highlight></codeline>
<codeline lineno="20275"><highlight class="normal">KerMLParser::Metadata_bodyContext*<sp/>KerMLParser::metadata_body()<sp/>{</highlight></codeline>
<codeline lineno="20276"><highlight class="normal"><sp/><sp/><ref refid="d6/dc4/class_ker_m_l_parser_1_1_metadata__body_context" kindref="compound">Metadata_bodyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/dc4/class_ker_m_l_parser_1_1_metadata__body_context" kindref="compound">Metadata_bodyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20277"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>496,<sp/>KerMLParser::RuleMetadata_body);</highlight></codeline>
<codeline lineno="20278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20279"><highlight class="normal"></highlight></codeline>
<codeline lineno="20280"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20282"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20284"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20285"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20286"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20288"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2008);</highlight></codeline>
<codeline lineno="20289"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="20291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STATEMENT_DELIMITER:<sp/>{</highlight></codeline>
<codeline lineno="20292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(1999);</highlight></codeline>
<codeline lineno="20294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="20295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20297"><highlight class="normal"></highlight></codeline>
<codeline lineno="20298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_CURLY_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="20299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="20300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2000);</highlight></codeline>
<codeline lineno="20301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="20302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2004);</highlight></codeline>
<codeline lineno="20303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="20306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>-8223285919844612544)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>65)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="20307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>65))<sp/>&amp;<sp/>36032138891721475)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_HASHTAG</highlight></codeline>
<codeline lineno="20308"><highlight class="normal"></highlight></codeline>
<codeline lineno="20309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::NAME)<sp/>{</highlight></codeline>
<codeline lineno="20310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2001);</highlight></codeline>
<codeline lineno="20311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata_body_element();</highlight></codeline>
<codeline lineno="20312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2006);</highlight></codeline>
<codeline lineno="20313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2007);</highlight></codeline>
<codeline lineno="20317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="20318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20320"><highlight class="normal"></highlight></codeline>
<codeline lineno="20321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20324"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20327"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20328"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20329"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20331"><highlight class="normal"></highlight></codeline>
<codeline lineno="20332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20334"><highlight class="normal"></highlight></codeline>
<codeline lineno="20335"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_body_elementContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20336"><highlight class="normal"></highlight></codeline>
<codeline lineno="20337"><highlight class="normal">KerMLParser::Metadata_body_elementContext::Metadata_body_elementContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20338"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20340"><highlight class="normal"></highlight></codeline>
<codeline lineno="20341"><highlight class="normal"><ref refid="da/d55/class_ker_m_l_parser_1_1_non__feature__member_context" kindref="compound">KerMLParser::Non_feature_memberContext</ref>*<sp/>KerMLParser::Metadata_body_elementContext::non_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="20342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Non_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="20343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20344"><highlight class="normal"></highlight></codeline>
<codeline lineno="20345"><highlight class="normal">KerMLParser::Metadata_body_feature_memberContext*<sp/>KerMLParser::Metadata_body_elementContext::metadata_body_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="20346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_body_feature_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="20347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20348"><highlight class="normal"></highlight></codeline>
<codeline lineno="20349"><highlight class="normal">KerMLParser::Alias_memberContext*<sp/>KerMLParser::Metadata_body_elementContext::alias_member()<sp/>{</highlight></codeline>
<codeline lineno="20350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Alias_memberContext&gt;(0);</highlight></codeline>
<codeline lineno="20351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20352"><highlight class="normal"></highlight></codeline>
<codeline lineno="20353"><highlight class="normal">KerMLParser::Import_declarationContext*<sp/>KerMLParser::Metadata_body_elementContext::import_declaration()<sp/>{</highlight></codeline>
<codeline lineno="20354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Import_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="20355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20356"><highlight class="normal"></highlight></codeline>
<codeline lineno="20357"><highlight class="normal"></highlight></codeline>
<codeline lineno="20358"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_elementContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_body_element;</highlight></codeline>
<codeline lineno="20360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20361"><highlight class="normal"></highlight></codeline>
<codeline lineno="20362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_elementContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20365"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_body_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20367"><highlight class="normal"></highlight></codeline>
<codeline lineno="20368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_elementContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20371"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_body_element(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20373"><highlight class="normal"></highlight></codeline>
<codeline lineno="20374"><highlight class="normal">KerMLParser::Metadata_body_elementContext*<sp/>KerMLParser::metadata_body_element()<sp/>{</highlight></codeline>
<codeline lineno="20375"><highlight class="normal"><sp/><sp/><ref refid="d4/d0d/class_ker_m_l_parser_1_1_metadata__body__element_context" kindref="compound">Metadata_body_elementContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d4/d0d/class_ker_m_l_parser_1_1_metadata__body__element_context" kindref="compound">Metadata_body_elementContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20376"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>498,<sp/>KerMLParser::RuleMetadata_body_element);</highlight></codeline>
<codeline lineno="20377"><highlight class="normal"></highlight></codeline>
<codeline lineno="20378"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20380"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20383"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20384"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20386"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2014);</highlight></codeline>
<codeline lineno="20387"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>206,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="20389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="20390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2010);</highlight></codeline>
<codeline lineno="20392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>non_feature_member();</highlight></codeline>
<codeline lineno="20393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20395"><highlight class="normal"></highlight></codeline>
<codeline lineno="20396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="20397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="20398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2011);</highlight></codeline>
<codeline lineno="20399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata_body_feature_member();</highlight></codeline>
<codeline lineno="20400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20402"><highlight class="normal"></highlight></codeline>
<codeline lineno="20403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="20404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>3);</highlight></codeline>
<codeline lineno="20405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2012);</highlight></codeline>
<codeline lineno="20406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alias_member();</highlight></codeline>
<codeline lineno="20407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20409"><highlight class="normal"></highlight></codeline>
<codeline lineno="20410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="20411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>4);</highlight></codeline>
<codeline lineno="20412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2013);</highlight></codeline>
<codeline lineno="20413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>import_declaration();</highlight></codeline>
<codeline lineno="20414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20416"><highlight class="normal"></highlight></codeline>
<codeline lineno="20417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20420"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20423"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20424"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20425"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20427"><highlight class="normal"></highlight></codeline>
<codeline lineno="20428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20430"><highlight class="normal"></highlight></codeline>
<codeline lineno="20431"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_body_feature_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20432"><highlight class="normal"></highlight></codeline>
<codeline lineno="20433"><highlight class="normal">KerMLParser::Metadata_body_feature_memberContext::Metadata_body_feature_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20434"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20436"><highlight class="normal"></highlight></codeline>
<codeline lineno="20437"><highlight class="normal"><ref refid="d6/dcb/class_ker_m_l_parser_1_1_metadata__body__feature_context" kindref="compound">KerMLParser::Metadata_body_featureContext</ref>*<sp/>KerMLParser::Metadata_body_feature_memberContext::metadata_body_feature()<sp/>{</highlight></codeline>
<codeline lineno="20438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_body_featureContext&gt;(0);</highlight></codeline>
<codeline lineno="20439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20440"><highlight class="normal"></highlight></codeline>
<codeline lineno="20441"><highlight class="normal"></highlight></codeline>
<codeline lineno="20442"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_feature_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_body_feature_member;</highlight></codeline>
<codeline lineno="20444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20445"><highlight class="normal"></highlight></codeline>
<codeline lineno="20446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_feature_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20449"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_body_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20451"><highlight class="normal"></highlight></codeline>
<codeline lineno="20452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_feature_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20455"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_body_feature_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20457"><highlight class="normal"></highlight></codeline>
<codeline lineno="20458"><highlight class="normal">KerMLParser::Metadata_body_feature_memberContext*<sp/>KerMLParser::metadata_body_feature_member()<sp/>{</highlight></codeline>
<codeline lineno="20459"><highlight class="normal"><sp/><sp/><ref refid="dc/d75/class_ker_m_l_parser_1_1_metadata__body__feature__member_context" kindref="compound">Metadata_body_feature_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/d75/class_ker_m_l_parser_1_1_metadata__body__feature__member_context" kindref="compound">Metadata_body_feature_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20460"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>500,<sp/>KerMLParser::RuleMetadata_body_feature_member);</highlight></codeline>
<codeline lineno="20461"><highlight class="normal"></highlight></codeline>
<codeline lineno="20462"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20464"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20466"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20467"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20468"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20470"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20471"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2016);</highlight></codeline>
<codeline lineno="20472"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata_body_feature();</highlight></codeline>
<codeline lineno="20473"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20476"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20477"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20478"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20480"><highlight class="normal"></highlight></codeline>
<codeline lineno="20481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20483"><highlight class="normal"></highlight></codeline>
<codeline lineno="20484"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Metadata_body_featureContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20485"><highlight class="normal"></highlight></codeline>
<codeline lineno="20486"><highlight class="normal">KerMLParser::Metadata_body_featureContext::Metadata_body_featureContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20487"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20489"><highlight class="normal"></highlight></codeline>
<codeline lineno="20490"><highlight class="normal"><ref refid="d0/df0/class_ker_m_l_parser_1_1_owned__redefinition_context" kindref="compound">KerMLParser::Owned_redefinitionContext</ref>*<sp/>KerMLParser::Metadata_body_featureContext::owned_redefinition()<sp/>{</highlight></codeline>
<codeline lineno="20491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_redefinitionContext&gt;(0);</highlight></codeline>
<codeline lineno="20492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20493"><highlight class="normal"></highlight></codeline>
<codeline lineno="20494"><highlight class="normal">KerMLParser::Metadata_bodyContext*<sp/>KerMLParser::Metadata_body_featureContext::metadata_body()<sp/>{</highlight></codeline>
<codeline lineno="20495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Metadata_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="20496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20497"><highlight class="normal"></highlight></codeline>
<codeline lineno="20498"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_body_featureContext::KEYWORD_FEATURE()<sp/>{</highlight></codeline>
<codeline lineno="20499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FEATURE,<sp/>0);</highlight></codeline>
<codeline lineno="20500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20501"><highlight class="normal"></highlight></codeline>
<codeline lineno="20502"><highlight class="normal">KerMLParser::Feature_specialization_partContext*<sp/>KerMLParser::Metadata_body_featureContext::feature_specialization_part()<sp/>{</highlight></codeline>
<codeline lineno="20503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Feature_specialization_partContext&gt;(0);</highlight></codeline>
<codeline lineno="20504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20505"><highlight class="normal"></highlight></codeline>
<codeline lineno="20506"><highlight class="normal">KerMLParser::Value_partContext*<sp/>KerMLParser::Metadata_body_featureContext::value_part()<sp/>{</highlight></codeline>
<codeline lineno="20507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Value_partContext&gt;(0);</highlight></codeline>
<codeline lineno="20508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20509"><highlight class="normal"></highlight></codeline>
<codeline lineno="20510"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_body_featureContext::SYMBOL_REDEFINES()<sp/>{</highlight></codeline>
<codeline lineno="20511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_REDEFINES,<sp/>0);</highlight></codeline>
<codeline lineno="20512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20513"><highlight class="normal"></highlight></codeline>
<codeline lineno="20514"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Metadata_body_featureContext::KEYWORD_REDEFINES()<sp/>{</highlight></codeline>
<codeline lineno="20515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_REDEFINES,<sp/>0);</highlight></codeline>
<codeline lineno="20516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20517"><highlight class="normal"></highlight></codeline>
<codeline lineno="20518"><highlight class="normal"></highlight></codeline>
<codeline lineno="20519"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_featureContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMetadata_body_feature;</highlight></codeline>
<codeline lineno="20521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20522"><highlight class="normal"></highlight></codeline>
<codeline lineno="20523"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_featureContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20526"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMetadata_body_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20528"><highlight class="normal"></highlight></codeline>
<codeline lineno="20529"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Metadata_body_featureContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20532"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMetadata_body_feature(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20534"><highlight class="normal"></highlight></codeline>
<codeline lineno="20535"><highlight class="normal">KerMLParser::Metadata_body_featureContext*<sp/>KerMLParser::metadata_body_feature()<sp/>{</highlight></codeline>
<codeline lineno="20536"><highlight class="normal"><sp/><sp/><ref refid="d6/dcb/class_ker_m_l_parser_1_1_metadata__body__feature_context" kindref="compound">Metadata_body_featureContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d6/dcb/class_ker_m_l_parser_1_1_metadata__body__feature_context" kindref="compound">Metadata_body_featureContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20537"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>502,<sp/>KerMLParser::RuleMetadata_body_feature);</highlight></codeline>
<codeline lineno="20538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20539"><highlight class="normal"></highlight></codeline>
<codeline lineno="20540"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20542"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20545"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20546"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20548"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20549"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2019);</highlight></codeline>
<codeline lineno="20550"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20551"><highlight class="normal"></highlight></codeline>
<codeline lineno="20552"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_FEATURE)<sp/>{</highlight></codeline>
<codeline lineno="20554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2018);</highlight></codeline>
<codeline lineno="20555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FEATURE);</highlight></codeline>
<codeline lineno="20556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20557"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2022);</highlight></codeline>
<codeline lineno="20558"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20559"><highlight class="normal"></highlight></codeline>
<codeline lineno="20560"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_REDEFINES</highlight></codeline>
<codeline lineno="20562"><highlight class="normal"></highlight></codeline>
<codeline lineno="20563"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_REDEFINES)<sp/>{</highlight></codeline>
<codeline lineno="20564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2021);</highlight></codeline>
<codeline lineno="20565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_la<sp/>==<sp/>KerMLParser::KEYWORD_REDEFINES</highlight></codeline>
<codeline lineno="20567"><highlight class="normal"></highlight></codeline>
<codeline lineno="20568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_REDEFINES))<sp/>{</highlight></codeline>
<codeline lineno="20569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;recoverInline(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;reportMatch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consume();</highlight></codeline>
<codeline lineno="20574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20576"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2024);</highlight></codeline>
<codeline lineno="20577"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_redefinition();</highlight></codeline>
<codeline lineno="20578"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2026);</highlight></codeline>
<codeline lineno="20579"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20580"><highlight class="normal"></highlight></codeline>
<codeline lineno="20581"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="20583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>54043195528446068)<sp/>!=<sp/>0)<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::KEYWORD_OUT</highlight></codeline>
<codeline lineno="20584"><highlight class="normal"></highlight></codeline>
<codeline lineno="20585"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_SQUARE_BRACKET_OPEN)<sp/>{</highlight></codeline>
<codeline lineno="20586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2025);</highlight></codeline>
<codeline lineno="20587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_specialization_part();</highlight></codeline>
<codeline lineno="20588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20589"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2029);</highlight></codeline>
<codeline lineno="20590"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20591"><highlight class="normal"></highlight></codeline>
<codeline lineno="20592"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_DEFAULT<sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_DEF_ASSIGN</highlight></codeline>
<codeline lineno="20594"><highlight class="normal"></highlight></codeline>
<codeline lineno="20595"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>_la<sp/>==<sp/>KerMLParser::SYMBOL_EQUALS)<sp/>{</highlight></codeline>
<codeline lineno="20596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2028);</highlight></codeline>
<codeline lineno="20597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_part();</highlight></codeline>
<codeline lineno="20598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20599"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2031);</highlight></codeline>
<codeline lineno="20600"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata_body();</highlight></codeline>
<codeline lineno="20601"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20604"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20605"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20606"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20608"><highlight class="normal"></highlight></codeline>
<codeline lineno="20609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20611"><highlight class="normal"></highlight></codeline>
<codeline lineno="20612"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>PackageContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20613"><highlight class="normal"></highlight></codeline>
<codeline lineno="20614"><highlight class="normal">KerMLParser::PackageContext::PackageContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20615"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20617"><highlight class="normal"></highlight></codeline>
<codeline lineno="20618"><highlight class="normal"><ref refid="d7/df7/class_ker_m_l_parser_1_1_package__declaration_context" kindref="compound">KerMLParser::Package_declarationContext</ref>*<sp/>KerMLParser::PackageContext::package_declaration()<sp/>{</highlight></codeline>
<codeline lineno="20619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Package_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="20620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20621"><highlight class="normal"></highlight></codeline>
<codeline lineno="20622"><highlight class="normal">KerMLParser::Package_bodyContext*<sp/>KerMLParser::PackageContext::package_body()<sp/>{</highlight></codeline>
<codeline lineno="20623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Package_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="20624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20625"><highlight class="normal"></highlight></codeline>
<codeline lineno="20626"><highlight class="normal">std::vector&lt;KerMLParser::Prefix_metadata_memberContext<sp/>*&gt;<sp/>KerMLParser::PackageContext::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="20627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Prefix_metadata_memberContext&gt;();</highlight></codeline>
<codeline lineno="20628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20629"><highlight class="normal"></highlight></codeline>
<codeline lineno="20630"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::PackageContext::prefix_metadata_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="20632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20633"><highlight class="normal"></highlight></codeline>
<codeline lineno="20634"><highlight class="normal"></highlight></codeline>
<codeline lineno="20635"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::PackageContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePackage;</highlight></codeline>
<codeline lineno="20637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20638"><highlight class="normal"></highlight></codeline>
<codeline lineno="20639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::PackageContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20642"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPackage(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20644"><highlight class="normal"></highlight></codeline>
<codeline lineno="20645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::PackageContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20648"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPackage(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20650"><highlight class="normal"></highlight></codeline>
<codeline lineno="20651"><highlight class="normal">KerMLParser::PackageContext*<sp/>KerMLParser::package()<sp/>{</highlight></codeline>
<codeline lineno="20652"><highlight class="normal"><sp/><sp/><ref refid="de/d6f/class_ker_m_l_parser_1_1_package_context" kindref="compound">PackageContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="de/d6f/class_ker_m_l_parser_1_1_package_context" kindref="compound">PackageContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20653"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>504,<sp/>KerMLParser::RulePackage);</highlight></codeline>
<codeline lineno="20654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20655"><highlight class="normal"></highlight></codeline>
<codeline lineno="20656"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20658"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20661"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20662"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20664"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20665"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2036);</highlight></codeline>
<codeline lineno="20666"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20667"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_HASHTAG)<sp/>{</highlight></codeline>
<codeline lineno="20669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2033);</highlight></codeline>
<codeline lineno="20670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_member();</highlight></codeline>
<codeline lineno="20671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2038);</highlight></codeline>
<codeline lineno="20672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20675"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2039);</highlight></codeline>
<codeline lineno="20676"><highlight class="normal"><sp/><sp/><sp/><sp/>package_declaration();</highlight></codeline>
<codeline lineno="20677"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2040);</highlight></codeline>
<codeline lineno="20678"><highlight class="normal"><sp/><sp/><sp/><sp/>package_body();</highlight></codeline>
<codeline lineno="20679"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20680"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20682"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20683"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20684"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20686"><highlight class="normal"></highlight></codeline>
<codeline lineno="20687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20689"><highlight class="normal"></highlight></codeline>
<codeline lineno="20690"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Library_packageContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20691"><highlight class="normal"></highlight></codeline>
<codeline lineno="20692"><highlight class="normal">KerMLParser::Library_packageContext::Library_packageContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20693"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20695"><highlight class="normal"></highlight></codeline>
<codeline lineno="20696"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Library_packageContext::KEYWORD_LIBRARY()<sp/>{</highlight></codeline>
<codeline lineno="20697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_LIBRARY,<sp/>0);</highlight></codeline>
<codeline lineno="20698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20699"><highlight class="normal"></highlight></codeline>
<codeline lineno="20700"><highlight class="normal">KerMLParser::Package_declarationContext*<sp/>KerMLParser::Library_packageContext::package_declaration()<sp/>{</highlight></codeline>
<codeline lineno="20701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Package_declarationContext&gt;(0);</highlight></codeline>
<codeline lineno="20702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20703"><highlight class="normal"></highlight></codeline>
<codeline lineno="20704"><highlight class="normal">KerMLParser::Package_bodyContext*<sp/>KerMLParser::Library_packageContext::package_body()<sp/>{</highlight></codeline>
<codeline lineno="20705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Package_bodyContext&gt;(0);</highlight></codeline>
<codeline lineno="20706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20707"><highlight class="normal"></highlight></codeline>
<codeline lineno="20708"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Library_packageContext::KEYWORD_STANDARD()<sp/>{</highlight></codeline>
<codeline lineno="20709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_STANDARD,<sp/>0);</highlight></codeline>
<codeline lineno="20710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20711"><highlight class="normal"></highlight></codeline>
<codeline lineno="20712"><highlight class="normal">std::vector&lt;KerMLParser::Prefix_metadata_memberContext<sp/>*&gt;<sp/>KerMLParser::Library_packageContext::prefix_metadata_member()<sp/>{</highlight></codeline>
<codeline lineno="20713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Prefix_metadata_memberContext&gt;();</highlight></codeline>
<codeline lineno="20714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20715"><highlight class="normal"></highlight></codeline>
<codeline lineno="20716"><highlight class="normal">KerMLParser::Prefix_metadata_memberContext*<sp/>KerMLParser::Library_packageContext::prefix_metadata_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Prefix_metadata_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="20718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20719"><highlight class="normal"></highlight></codeline>
<codeline lineno="20720"><highlight class="normal"></highlight></codeline>
<codeline lineno="20721"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Library_packageContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleLibrary_package;</highlight></codeline>
<codeline lineno="20723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20724"><highlight class="normal"></highlight></codeline>
<codeline lineno="20725"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Library_packageContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20728"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterLibrary_package(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20730"><highlight class="normal"></highlight></codeline>
<codeline lineno="20731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Library_packageContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20734"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitLibrary_package(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20736"><highlight class="normal"></highlight></codeline>
<codeline lineno="20737"><highlight class="normal">KerMLParser::Library_packageContext*<sp/>KerMLParser::library_package()<sp/>{</highlight></codeline>
<codeline lineno="20738"><highlight class="normal"><sp/><sp/><ref refid="da/d21/class_ker_m_l_parser_1_1_library__package_context" kindref="compound">Library_packageContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="da/d21/class_ker_m_l_parser_1_1_library__package_context" kindref="compound">Library_packageContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20739"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>506,<sp/>KerMLParser::RuleLibrary_package);</highlight></codeline>
<codeline lineno="20740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20741"><highlight class="normal"></highlight></codeline>
<codeline lineno="20742"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20744"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20747"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20748"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20750"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20751"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2043);</highlight></codeline>
<codeline lineno="20752"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20753"><highlight class="normal"></highlight></codeline>
<codeline lineno="20754"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::KEYWORD_STANDARD)<sp/>{</highlight></codeline>
<codeline lineno="20756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2042);</highlight></codeline>
<codeline lineno="20757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_STANDARD);</highlight></codeline>
<codeline lineno="20758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20759"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2045);</highlight></codeline>
<codeline lineno="20760"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_LIBRARY);</highlight></codeline>
<codeline lineno="20761"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2049);</highlight></codeline>
<codeline lineno="20762"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20763"><highlight class="normal"><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_la<sp/>==<sp/>KerMLParser::SYMBOL_HASHTAG)<sp/>{</highlight></codeline>
<codeline lineno="20765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2046);</highlight></codeline>
<codeline lineno="20766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix_metadata_member();</highlight></codeline>
<codeline lineno="20767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setState(2051);</highlight></codeline>
<codeline lineno="20768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20771"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2052);</highlight></codeline>
<codeline lineno="20772"><highlight class="normal"><sp/><sp/><sp/><sp/>package_declaration();</highlight></codeline>
<codeline lineno="20773"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2053);</highlight></codeline>
<codeline lineno="20774"><highlight class="normal"><sp/><sp/><sp/><sp/>package_body();</highlight></codeline>
<codeline lineno="20775"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20778"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20779"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20780"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20782"><highlight class="normal"></highlight></codeline>
<codeline lineno="20783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20785"><highlight class="normal"></highlight></codeline>
<codeline lineno="20786"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Package_declarationContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20787"><highlight class="normal"></highlight></codeline>
<codeline lineno="20788"><highlight class="normal">KerMLParser::Package_declarationContext::Package_declarationContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20789"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20791"><highlight class="normal"></highlight></codeline>
<codeline lineno="20792"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Package_declarationContext::KEYWORD_PACKAGE()<sp/>{</highlight></codeline>
<codeline lineno="20793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_PACKAGE,<sp/>0);</highlight></codeline>
<codeline lineno="20794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20795"><highlight class="normal"></highlight></codeline>
<codeline lineno="20796"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Package_declarationContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="20797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="20798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20799"><highlight class="normal"></highlight></codeline>
<codeline lineno="20800"><highlight class="normal"></highlight></codeline>
<codeline lineno="20801"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Package_declarationContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePackage_declaration;</highlight></codeline>
<codeline lineno="20803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20804"><highlight class="normal"></highlight></codeline>
<codeline lineno="20805"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Package_declarationContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20808"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPackage_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20810"><highlight class="normal"></highlight></codeline>
<codeline lineno="20811"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Package_declarationContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20814"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPackage_declaration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20816"><highlight class="normal"></highlight></codeline>
<codeline lineno="20817"><highlight class="normal">KerMLParser::Package_declarationContext*<sp/>KerMLParser::package_declaration()<sp/>{</highlight></codeline>
<codeline lineno="20818"><highlight class="normal"><sp/><sp/><ref refid="d7/df7/class_ker_m_l_parser_1_1_package__declaration_context" kindref="compound">Package_declarationContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d7/df7/class_ker_m_l_parser_1_1_package__declaration_context" kindref="compound">Package_declarationContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20819"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>508,<sp/>KerMLParser::RulePackage_declaration);</highlight></codeline>
<codeline lineno="20820"><highlight class="normal"></highlight></codeline>
<codeline lineno="20821"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20823"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20825"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20826"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20827"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20829"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20830"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2055);</highlight></codeline>
<codeline lineno="20831"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_PACKAGE);</highlight></codeline>
<codeline lineno="20832"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2056);</highlight></codeline>
<codeline lineno="20833"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="20834"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20837"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20838"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20839"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20841"><highlight class="normal"></highlight></codeline>
<codeline lineno="20842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20844"><highlight class="normal"></highlight></codeline>
<codeline lineno="20845"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Package_bodyContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20846"><highlight class="normal"></highlight></codeline>
<codeline lineno="20847"><highlight class="normal">KerMLParser::Package_bodyContext::Package_bodyContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20848"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20850"><highlight class="normal"></highlight></codeline>
<codeline lineno="20851"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Package_bodyContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="20852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="20853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20854"><highlight class="normal"></highlight></codeline>
<codeline lineno="20855"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Package_bodyContext::SYMBOL_CURLY_BRACKET_OPEN()<sp/>{</highlight></codeline>
<codeline lineno="20856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN,<sp/>0);</highlight></codeline>
<codeline lineno="20857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20858"><highlight class="normal"></highlight></codeline>
<codeline lineno="20859"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Package_bodyContext::SYMBOL_CURLY_BRACKET_CLOSE()<sp/>{</highlight></codeline>
<codeline lineno="20860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE,<sp/>0);</highlight></codeline>
<codeline lineno="20861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20862"><highlight class="normal"></highlight></codeline>
<codeline lineno="20863"><highlight class="normal">std::vector&lt;KerMLParser::Namespace_body_elementContext<sp/>*&gt;<sp/>KerMLParser::Package_bodyContext::namespace_body_element()<sp/>{</highlight></codeline>
<codeline lineno="20864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Namespace_body_elementContext&gt;();</highlight></codeline>
<codeline lineno="20865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20866"><highlight class="normal"></highlight></codeline>
<codeline lineno="20867"><highlight class="normal">KerMLParser::Namespace_body_elementContext*<sp/>KerMLParser::Package_bodyContext::namespace_body_element(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Namespace_body_elementContext&gt;(i);</highlight></codeline>
<codeline lineno="20869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20870"><highlight class="normal"></highlight></codeline>
<codeline lineno="20871"><highlight class="normal">std::vector&lt;KerMLParser::Element_filter_memberContext<sp/>*&gt;<sp/>KerMLParser::Package_bodyContext::element_filter_member()<sp/>{</highlight></codeline>
<codeline lineno="20872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Element_filter_memberContext&gt;();</highlight></codeline>
<codeline lineno="20873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20874"><highlight class="normal"></highlight></codeline>
<codeline lineno="20875"><highlight class="normal">KerMLParser::Element_filter_memberContext*<sp/>KerMLParser::Package_bodyContext::element_filter_member(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Element_filter_memberContext&gt;(i);</highlight></codeline>
<codeline lineno="20877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20878"><highlight class="normal"></highlight></codeline>
<codeline lineno="20879"><highlight class="normal">std::vector&lt;KerMLParser::ElementContext<sp/>*&gt;<sp/>KerMLParser::Package_bodyContext::element()<sp/>{</highlight></codeline>
<codeline lineno="20880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::ElementContext&gt;();</highlight></codeline>
<codeline lineno="20881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20882"><highlight class="normal"></highlight></codeline>
<codeline lineno="20883"><highlight class="normal">KerMLParser::ElementContext*<sp/>KerMLParser::Package_bodyContext::element(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="20884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::ElementContext&gt;(i);</highlight></codeline>
<codeline lineno="20885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20886"><highlight class="normal"></highlight></codeline>
<codeline lineno="20887"><highlight class="normal"></highlight></codeline>
<codeline lineno="20888"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Package_bodyContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RulePackage_body;</highlight></codeline>
<codeline lineno="20890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20891"><highlight class="normal"></highlight></codeline>
<codeline lineno="20892"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Package_bodyContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20895"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterPackage_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20897"><highlight class="normal"></highlight></codeline>
<codeline lineno="20898"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Package_bodyContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="20899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="20900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20901"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitPackage_body(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20903"><highlight class="normal"></highlight></codeline>
<codeline lineno="20904"><highlight class="normal">KerMLParser::Package_bodyContext*<sp/>KerMLParser::package_body()<sp/>{</highlight></codeline>
<codeline lineno="20905"><highlight class="normal"><sp/><sp/><ref refid="dc/de4/class_ker_m_l_parser_1_1_package__body_context" kindref="compound">Package_bodyContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="dc/de4/class_ker_m_l_parser_1_1_package__body_context" kindref="compound">Package_bodyContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="20906"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>510,<sp/>KerMLParser::RulePackage_body);</highlight></codeline>
<codeline lineno="20907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_la<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20908"><highlight class="normal"></highlight></codeline>
<codeline lineno="20909"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="20911"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="20913"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20914"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="20915"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="20916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20917"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2069);</highlight></codeline>
<codeline lineno="20918"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_input-&gt;LA(1))<sp/>{</highlight></codeline>
<codeline lineno="20920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_STATEMENT_DELIMITER:<sp/>{</highlight></codeline>
<codeline lineno="20921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="20922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2058);</highlight></codeline>
<codeline lineno="20923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="20924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20926"><highlight class="normal"></highlight></codeline>
<codeline lineno="20927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KerMLParser::SYMBOL_CURLY_BRACKET_OPEN:<sp/>{</highlight></codeline>
<codeline lineno="20928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>2);</highlight></codeline>
<codeline lineno="20929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2059);</highlight></codeline>
<codeline lineno="20930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_OPEN);</highlight></codeline>
<codeline lineno="20931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2063);<sp/></highlight></codeline>
<codeline lineno="20932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2063);</highlight></codeline>
<codeline lineno="20936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getInterpreter&lt;atn::ParserATNSimulator&gt;()-&gt;adaptivePredict(_input,<sp/>214,<sp/>_ctx))<sp/>{</highlight></codeline>
<codeline lineno="20938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="20939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2060);</highlight></codeline>
<codeline lineno="20940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace_body_element();</highlight></codeline>
<codeline lineno="20941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20943"><highlight class="normal"></highlight></codeline>
<codeline lineno="20944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="20945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2061);</highlight></codeline>
<codeline lineno="20946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_filter_member();</highlight></codeline>
<codeline lineno="20947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20949"><highlight class="normal"></highlight></codeline>
<codeline lineno="20950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="20951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2062);</highlight></codeline>
<codeline lineno="20952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element();</highlight></codeline>
<codeline lineno="20953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20955"><highlight class="normal"></highlight></codeline>
<codeline lineno="20956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2065);<sp/></highlight></codeline>
<codeline lineno="20960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_errHandler-&gt;sync(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_la<sp/>=<sp/>_input-&gt;LA(1);</highlight></codeline>
<codeline lineno="20962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((((_la<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="20963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>_la)<sp/>&amp;<sp/>-5773283293118872000)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>64)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="20964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>64))<sp/>&amp;<sp/>78702848638471)<sp/>!=<sp/>0)<sp/>||<sp/>((((_la<sp/>-<sp/>129)<sp/>&amp;<sp/>~<sp/>0x3fULL)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="20965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1ULL<sp/>&lt;&lt;<sp/>(_la<sp/>-<sp/>129))<sp/>&amp;<sp/>67108867)<sp/>!=<sp/>0));</highlight></codeline>
<codeline lineno="20966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setState(2067);</highlight></codeline>
<codeline lineno="20967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_CURLY_BRACKET_CLOSE);</highlight></codeline>
<codeline lineno="20968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20970"><highlight class="normal"></highlight></codeline>
<codeline lineno="20971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NoViableAltException(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20974"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20975"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="20977"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="20978"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="20979"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="20980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20981"><highlight class="normal"></highlight></codeline>
<codeline lineno="20982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="20983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20984"><highlight class="normal"></highlight></codeline>
<codeline lineno="20985"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Element_filter_memberContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20986"><highlight class="normal"></highlight></codeline>
<codeline lineno="20987"><highlight class="normal">KerMLParser::Element_filter_memberContext::Element_filter_memberContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="20988"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="20989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20990"><highlight class="normal"></highlight></codeline>
<codeline lineno="20991"><highlight class="normal"><ref refid="da/d96/class_ker_m_l_parser_1_1_member__prefix_context" kindref="compound">KerMLParser::Member_prefixContext</ref>*<sp/>KerMLParser::Element_filter_memberContext::member_prefix()<sp/>{</highlight></codeline>
<codeline lineno="20992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Member_prefixContext&gt;(0);</highlight></codeline>
<codeline lineno="20993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20994"><highlight class="normal"></highlight></codeline>
<codeline lineno="20995"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Element_filter_memberContext::KEYWORD_FILTER()<sp/>{</highlight></codeline>
<codeline lineno="20996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::KEYWORD_FILTER,<sp/>0);</highlight></codeline>
<codeline lineno="20997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20998"><highlight class="normal"></highlight></codeline>
<codeline lineno="20999"><highlight class="normal">KerMLParser::Owned_expressionContext*<sp/>KerMLParser::Element_filter_memberContext::owned_expression()<sp/>{</highlight></codeline>
<codeline lineno="21000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Owned_expressionContext&gt;(0);</highlight></codeline>
<codeline lineno="21001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21002"><highlight class="normal"></highlight></codeline>
<codeline lineno="21003"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Element_filter_memberContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="21004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="21005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21006"><highlight class="normal"></highlight></codeline>
<codeline lineno="21007"><highlight class="normal"></highlight></codeline>
<codeline lineno="21008"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Element_filter_memberContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleElement_filter_member;</highlight></codeline>
<codeline lineno="21010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21011"><highlight class="normal"></highlight></codeline>
<codeline lineno="21012"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Element_filter_memberContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="21013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="21014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21015"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterElement_filter_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21017"><highlight class="normal"></highlight></codeline>
<codeline lineno="21018"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Element_filter_memberContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="21019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="21020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21021"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitElement_filter_member(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21023"><highlight class="normal"></highlight></codeline>
<codeline lineno="21024"><highlight class="normal">KerMLParser::Element_filter_memberContext*<sp/>KerMLParser::element_filter_member()<sp/>{</highlight></codeline>
<codeline lineno="21025"><highlight class="normal"><sp/><sp/><ref refid="d8/d28/class_ker_m_l_parser_1_1_element__filter__member_context" kindref="compound">Element_filter_memberContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d8/d28/class_ker_m_l_parser_1_1_element__filter__member_context" kindref="compound">Element_filter_memberContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="21026"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>512,<sp/>KerMLParser::RuleElement_filter_member);</highlight></codeline>
<codeline lineno="21027"><highlight class="normal"></highlight></codeline>
<codeline lineno="21028"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="21030"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="21032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21033"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="21034"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="21035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21036"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="21037"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2071);</highlight></codeline>
<codeline lineno="21038"><highlight class="normal"><sp/><sp/><sp/><sp/>member_prefix();</highlight></codeline>
<codeline lineno="21039"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2072);</highlight></codeline>
<codeline lineno="21040"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::KEYWORD_FILTER);</highlight></codeline>
<codeline lineno="21041"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2073);</highlight></codeline>
<codeline lineno="21042"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_expression();</highlight></codeline>
<codeline lineno="21043"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2074);</highlight></codeline>
<codeline lineno="21044"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="21045"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21046"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="21048"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="21049"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="21050"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="21051"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21052"><highlight class="normal"></highlight></codeline>
<codeline lineno="21053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="21054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21055"><highlight class="normal"></highlight></codeline>
<codeline lineno="21056"><highlight class="normal"></highlight><highlight class="comment">//-----------------<sp/>Meta_assignmentContext<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21057"><highlight class="normal"></highlight></codeline>
<codeline lineno="21058"><highlight class="normal">KerMLParser::Meta_assignmentContext::Meta_assignmentContext(ParserRuleContext<sp/>*parent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invokingState)</highlight></codeline>
<codeline lineno="21059"><highlight class="normal"><sp/><sp/>:<sp/>ParserRuleContext(parent,<sp/>invokingState)<sp/>{</highlight></codeline>
<codeline lineno="21060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21061"><highlight class="normal"></highlight></codeline>
<codeline lineno="21062"><highlight class="normal">std::vector&lt;KerMLParser::Qualified_nameContext<sp/>*&gt;<sp/>KerMLParser::Meta_assignmentContext::qualified_name()<sp/>{</highlight></codeline>
<codeline lineno="21063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContexts&lt;KerMLParser::Qualified_nameContext&gt;();</highlight></codeline>
<codeline lineno="21064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21065"><highlight class="normal"></highlight></codeline>
<codeline lineno="21066"><highlight class="normal">KerMLParser::Qualified_nameContext*<sp/>KerMLParser::Meta_assignmentContext::qualified_name(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="21067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::Qualified_nameContext&gt;(i);</highlight></codeline>
<codeline lineno="21068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21069"><highlight class="normal"></highlight></codeline>
<codeline lineno="21070"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Meta_assignmentContext::SYMBOL_ASSIGN()<sp/>{</highlight></codeline>
<codeline lineno="21071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_ASSIGN,<sp/>0);</highlight></codeline>
<codeline lineno="21072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21073"><highlight class="normal"></highlight></codeline>
<codeline lineno="21074"><highlight class="normal">KerMLParser::IdentificationContext*<sp/>KerMLParser::Meta_assignmentContext::identification()<sp/>{</highlight></codeline>
<codeline lineno="21075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRuleContext&lt;KerMLParser::IdentificationContext&gt;(0);</highlight></codeline>
<codeline lineno="21076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21077"><highlight class="normal"></highlight></codeline>
<codeline lineno="21078"><highlight class="normal">tree::TerminalNode*<sp/>KerMLParser::Meta_assignmentContext::SYMBOL_STATEMENT_DELIMITER()<sp/>{</highlight></codeline>
<codeline lineno="21079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getToken(KerMLParser::SYMBOL_STATEMENT_DELIMITER,<sp/>0);</highlight></codeline>
<codeline lineno="21080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21081"><highlight class="normal"></highlight></codeline>
<codeline lineno="21082"><highlight class="normal"></highlight></codeline>
<codeline lineno="21083"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>KerMLParser::Meta_assignmentContext::getRuleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KerMLParser::RuleMeta_assignment;</highlight></codeline>
<codeline lineno="21085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21086"><highlight class="normal"></highlight></codeline>
<codeline lineno="21087"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Meta_assignmentContext::enterRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="21088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="21089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21090"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;enterMeta_assignment(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21092"><highlight class="normal"></highlight></codeline>
<codeline lineno="21093"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::Meta_assignmentContext::exitRule(tree::ParseTreeListener<sp/>*listener)<sp/>{</highlight></codeline>
<codeline lineno="21094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parserListener<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">KerMLListener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(listener);</highlight></codeline>
<codeline lineno="21095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parserListener<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21096"><highlight class="normal"><sp/><sp/><sp/><sp/>parserListener-&gt;exitMeta_assignment(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21098"><highlight class="normal"></highlight></codeline>
<codeline lineno="21099"><highlight class="normal">KerMLParser::Meta_assignmentContext*<sp/>KerMLParser::meta_assignment()<sp/>{</highlight></codeline>
<codeline lineno="21100"><highlight class="normal"><sp/><sp/><ref refid="d5/d2d/class_ker_m_l_parser_1_1_meta__assignment_context" kindref="compound">Meta_assignmentContext</ref><sp/>*_localctx<sp/>=<sp/>_tracker.createInstance&lt;<ref refid="d5/d2d/class_ker_m_l_parser_1_1_meta__assignment_context" kindref="compound">Meta_assignmentContext</ref>&gt;(_ctx,<sp/>getState());</highlight></codeline>
<codeline lineno="21101"><highlight class="normal"><sp/><sp/>enterRule(_localctx,<sp/>514,<sp/>KerMLParser::RuleMeta_assignment);</highlight></codeline>
<codeline lineno="21102"><highlight class="normal"></highlight></codeline>
<codeline lineno="21103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="21105"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onExit<sp/>=<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">([=]<sp/>{</highlight></codeline>
<codeline lineno="21107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21108"><highlight class="normal"><sp/><sp/><sp/><sp/>exitRule();</highlight></codeline>
<codeline lineno="21109"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="21110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21111"><highlight class="normal"><sp/><sp/><sp/><sp/>enterOuterAlt(_localctx,<sp/>1);</highlight></codeline>
<codeline lineno="21112"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2076);</highlight></codeline>
<codeline lineno="21113"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="21114"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2077);</highlight></codeline>
<codeline lineno="21115"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_ASSIGN);</highlight></codeline>
<codeline lineno="21116"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2078);</highlight></codeline>
<codeline lineno="21117"><highlight class="normal"><sp/><sp/><sp/><sp/>identification();</highlight></codeline>
<codeline lineno="21118"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2079);</highlight></codeline>
<codeline lineno="21119"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::T__0);</highlight></codeline>
<codeline lineno="21120"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2080);</highlight></codeline>
<codeline lineno="21121"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_name();</highlight></codeline>
<codeline lineno="21122"><highlight class="normal"><sp/><sp/><sp/><sp/>setState(2081);</highlight></codeline>
<codeline lineno="21123"><highlight class="normal"><sp/><sp/><sp/><sp/>match(KerMLParser::SYMBOL_STATEMENT_DELIMITER);</highlight></codeline>
<codeline lineno="21124"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(RecognitionException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="21127"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;reportError(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="21128"><highlight class="normal"><sp/><sp/><sp/><sp/>_localctx-&gt;exception<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="21129"><highlight class="normal"><sp/><sp/><sp/><sp/>_errHandler-&gt;recover(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_localctx-&gt;exception);</highlight></codeline>
<codeline lineno="21130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21131"><highlight class="normal"></highlight></codeline>
<codeline lineno="21132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_localctx;</highlight></codeline>
<codeline lineno="21133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21134"><highlight class="normal"></highlight></codeline>
<codeline lineno="21135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KerMLParser::initialize()<sp/>{</highlight></codeline>
<codeline lineno="21136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ANTLR4_USE_THREAD_LOCAL_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21137"><highlight class="normal"><sp/><sp/>kermlParserInitialize();</highlight></codeline>
<codeline lineno="21138"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21139"><highlight class="normal"><sp/><sp/>::antlr4::internal::call_once(kermlParserOnceFlag,<sp/>kermlParserInitialize);</highlight></codeline>
<codeline lineno="21140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="filehandling/src/kerml/KerMLParser.cpp"/>
  </compounddef>
</doxygen>
