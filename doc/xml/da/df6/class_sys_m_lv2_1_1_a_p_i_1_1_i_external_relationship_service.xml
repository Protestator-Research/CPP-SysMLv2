<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>SysMLv2::API::IExternalRelationshipService</compoundname>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a8ef0d6a5e87b8ba20671ca42822a5884" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="dc/d95/class_sys_m_lv2_1_1_entities_1_1_external_relationship" kindref="compound">SysMLv2::Entities::ExternalRelationship</ref> &gt; &gt;</type>
        <definition>virtual std::vector&lt; std::shared_ptr&lt; SysMLv2::Entities::ExternalRelationship &gt; &gt; SysMLv2::API::IExternalRelationshipService::getExternalRelationships</definition>
        <argsstring>(std::shared_ptr&lt; SysMLv2::Entities::Project &gt; project, std::shared_ptr&lt; SysMLv2::Entities::Commit &gt; commit)=0</argsstring>
        <name>getExternalRelationships</name>
        <qualifiedname>SysMLv2::API::IExternalRelationshipService::getExternalRelationships</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/d86/class_sys_m_lv2_1_1_entities_1_1_project" kindref="compound">SysMLv2::Entities::Project</ref> &gt;</type>
          <declname>project</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/da9/class_sys_m_lv2_1_1_entities_1_1_commit" kindref="compound">SysMLv2::Entities::Commit</ref> &gt;</type>
          <declname>commit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is a interface for the method implementation that returns all all the external relationships for one specific commit in one project. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>project</parametername>
</parameternamelist>
<parameterdescription>
<para>The project where the commit and the external relationships are located. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commit</parametername>
</parameternamelist>
<parameterdescription>
<para>The commit where the external relationships are located. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector of all external relationships. </para>
</simplesect>
<simplesect kind="see"><para>std::vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="services/src/interfaces/IExternalReleationshipService.h" line="49" column="29"/>
      </memberdef>
      <memberdef kind="function" id="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a8b04e2872808da0abd5443bc81739181" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="dc/d95/class_sys_m_lv2_1_1_entities_1_1_external_relationship" kindref="compound">SysMLv2::Entities::ExternalRelationship</ref> &gt; &gt;</type>
        <definition>virtual std::vector&lt; std::shared_ptr&lt; SysMLv2::Entities::ExternalRelationship &gt; &gt; SysMLv2::API::IExternalRelationshipService::getExternalRelationshipsByElement</definition>
        <argsstring>(std::shared_ptr&lt; SysMLv2::Entities::Project &gt; project, std::shared_ptr&lt; SysMLv2::Entities::Commit &gt; commit, boost::uuids::uuid elementId)=0</argsstring>
        <name>getExternalRelationshipsByElement</name>
        <qualifiedname>SysMLv2::API::IExternalRelationshipService::getExternalRelationshipsByElement</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/d86/class_sys_m_lv2_1_1_entities_1_1_project" kindref="compound">SysMLv2::Entities::Project</ref> &gt;</type>
          <declname>project</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/da9/class_sys_m_lv2_1_1_entities_1_1_commit" kindref="compound">SysMLv2::Entities::Commit</ref> &gt;</type>
          <declname>commit</declname>
        </param>
        <param>
          <type>boost::uuids::uuid</type>
          <declname>elementId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is a interface for the method that get all the external relationships in the given commit where the id of the end element equals the given id. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>project</parametername>
</parameternamelist>
<parameterdescription>
<para>The given project, where the commit is located. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commit</parametername>
</parameternamelist>
<parameterdescription>
<para>The given commit that in which it is looked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementId</parametername>
</parameternamelist>
<parameterdescription>
<para>The given element id, for which is searched. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector of all matching external relationships. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="services/src/interfaces/IExternalReleationshipService.h" line="58" column="29"/>
      </memberdef>
      <memberdef kind="function" id="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a72c98719f482ec5e6aa1bc6332d138d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="dc/d95/class_sys_m_lv2_1_1_entities_1_1_external_relationship" kindref="compound">SysMLv2::Entities::ExternalRelationship</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt; SysMLv2::Entities::ExternalRelationship &gt; SysMLv2::API::IExternalRelationshipService::getExternalRelationshipById</definition>
        <argsstring>(std::shared_ptr&lt; SysMLv2::Entities::Project &gt; project, std::shared_ptr&lt; SysMLv2::Entities::Commit &gt; commit, boost::uuids::uuid externalRelationshipId)=0</argsstring>
        <name>getExternalRelationshipById</name>
        <qualifiedname>SysMLv2::API::IExternalRelationshipService::getExternalRelationshipById</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/d86/class_sys_m_lv2_1_1_entities_1_1_project" kindref="compound">SysMLv2::Entities::Project</ref> &gt;</type>
          <declname>project</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/da9/class_sys_m_lv2_1_1_entities_1_1_commit" kindref="compound">SysMLv2::Entities::Commit</ref> &gt;</type>
          <declname>commit</declname>
        </param>
        <param>
          <type>boost::uuids::uuid</type>
          <declname>externalRelationshipId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the external relationship with the given id, which is located in the given project and commit. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>project</parametername>
</parameternamelist>
<parameterdescription>
<para>The given project, where the commit is located. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commit</parametername>
</parameternamelist>
<parameterdescription>
<para>The given commit, where the external relationship is located. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>externalRelationshipId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the external relationship, that is searched for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Can be null, if no external relationship is found, otherwise a pointer to the external relationship. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="services/src/interfaces/IExternalReleationshipService.h" line="67" column="33"/>
      </memberdef>
      <memberdef kind="function" id="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a3caf5bb1b93d9759109db11e40077d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SysMLv2::API::IExternalRelationshipService::createExternalRelationship</definition>
        <argsstring>(std::shared_ptr&lt; SysMLv2::Entities::Project &gt; project, std::shared_ptr&lt; SysMLv2::Entities::Branch &gt; branch, std::shared_ptr&lt; SysMLv2::Entities::ExternalRelationship &gt; externalRelationship)=0</argsstring>
        <name>createExternalRelationship</name>
        <qualifiedname>SysMLv2::API::IExternalRelationshipService::createExternalRelationship</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/d86/class_sys_m_lv2_1_1_entities_1_1_project" kindref="compound">SysMLv2::Entities::Project</ref> &gt;</type>
          <declname>project</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d1/da2/class_sys_m_lv2_1_1_entities_1_1_branch" kindref="compound">SysMLv2::Entities::Branch</ref> &gt;</type>
          <declname>branch</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="dc/d95/class_sys_m_lv2_1_1_entities_1_1_external_relationship" kindref="compound">SysMLv2::Entities::ExternalRelationship</ref> &gt;</type>
          <declname>externalRelationship</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the eternal relationship in the given project and branch. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>project</parametername>
</parameternamelist>
<parameterdescription>
<para>The given project where the external relationship is required. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>branch</parametername>
</parameternamelist>
<parameterdescription>
<para>The given branch, where the commit is located. If is given as null, the program will resort to the default branch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>externalRelationship</parametername>
</parameternamelist>
<parameterdescription>
<para>The external relationship that is filled by the program. Can not be null. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="services/src/interfaces/IExternalReleationshipService.h" line="75" column="22"/>
      </memberdef>
      <memberdef kind="function" id="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a9ed2378405b769f13e9445f7669e4e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SysMLv2::API::IExternalRelationshipService::deleteExternalRelationship</definition>
        <argsstring>(std::shared_ptr&lt; SysMLv2::Entities::Project &gt; project, std::shared_ptr&lt; SysMLv2::Entities::Branch &gt; branch, boost::uuids::uuid externalRelationshipId)=0</argsstring>
        <name>deleteExternalRelationship</name>
        <qualifiedname>SysMLv2::API::IExternalRelationshipService::deleteExternalRelationship</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/d86/class_sys_m_lv2_1_1_entities_1_1_project" kindref="compound">SysMLv2::Entities::Project</ref> &gt;</type>
          <declname>project</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d1/da2/class_sys_m_lv2_1_1_entities_1_1_branch" kindref="compound">SysMLv2::Entities::Branch</ref> &gt;</type>
          <declname>branch</declname>
        </param>
        <param>
          <type>boost::uuids::uuid</type>
          <declname>externalRelationshipId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes the external relationship, in the given project and branch and commit. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>project</parametername>
</parameternamelist>
<parameterdescription>
<para>The project where the external relationship is located. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>branch</parametername>
</parameternamelist>
<parameterdescription>
<para>The branch where the external relationship is located. If this is null, the program resorts to the default branch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>externalRelationshipId</parametername>
</parameternamelist>
<parameterdescription>
<para>The if of the external relationship, that is deleted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="services/src/interfaces/IExternalReleationshipService.h" line="83" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="services/src/interfaces/IExternalReleationshipService.h" line="40" column="5" bodyfile="services/src/interfaces/IExternalReleationshipService.h" bodystart="40" bodyend="84"/>
    <listofallmembers>
      <member refid="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a3caf5bb1b93d9759109db11e40077d45" prot="public" virt="pure-virtual"><scope>SysMLv2::API::IExternalRelationshipService</scope><name>createExternalRelationship</name></member>
      <member refid="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a9ed2378405b769f13e9445f7669e4e77" prot="public" virt="pure-virtual"><scope>SysMLv2::API::IExternalRelationshipService</scope><name>deleteExternalRelationship</name></member>
      <member refid="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a72c98719f482ec5e6aa1bc6332d138d1" prot="public" virt="pure-virtual"><scope>SysMLv2::API::IExternalRelationshipService</scope><name>getExternalRelationshipById</name></member>
      <member refid="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a8ef0d6a5e87b8ba20671ca42822a5884" prot="public" virt="pure-virtual"><scope>SysMLv2::API::IExternalRelationshipService</scope><name>getExternalRelationships</name></member>
      <member refid="da/df6/class_sys_m_lv2_1_1_a_p_i_1_1_i_external_relationship_service_1a8b04e2872808da0abd5443bc81739181" prot="public" virt="pure-virtual"><scope>SysMLv2::API::IExternalRelationshipService</scope><name>getExternalRelationshipsByElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
