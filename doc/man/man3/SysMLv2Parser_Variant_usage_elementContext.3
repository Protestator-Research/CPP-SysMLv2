.TH "SysMLv2Parser::Variant_usage_elementContext" 3 "Version 1.0 Beta 2" "SysMLv2 C++ Implementation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SysMLv2Parser::Variant_usage_elementContext
.SH SYNOPSIS
.br
.PP
.PP
Inherits antlr4::ParserRuleContext\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVariant_usage_elementContext\fP (antlr4::ParserRuleContext *parent, size_t invokingState)"
.br
.ti -1c
.RI "virtual size_t \fBgetRuleIndex\fP () const override"
.br
.ti -1c
.RI "\fBVariant_referenceContext\fP * \fBvariant_reference\fP ()"
.br
.ti -1c
.RI "\fBReference_usageContext\fP * \fBreference_usage\fP ()"
.br
.ti -1c
.RI "\fBAttribute_usageContext\fP * \fBattribute_usage\fP ()"
.br
.ti -1c
.RI "\fBBinding_connector_as_usageContext\fP * \fBbinding_connector_as_usage\fP ()"
.br
.ti -1c
.RI "\fBSuccession_as_usageContext\fP * \fBsuccession_as_usage\fP ()"
.br
.ti -1c
.RI "\fBOccurrence_usageContext\fP * \fBoccurrence_usage\fP ()"
.br
.ti -1c
.RI "\fBIndividual_usageContext\fP * \fBindividual_usage\fP ()"
.br
.ti -1c
.RI "\fBPortion_usageContext\fP * \fBportion_usage\fP ()"
.br
.ti -1c
.RI "\fBEvent_occurrence_usageContext\fP * \fBevent_occurrence_usage\fP ()"
.br
.ti -1c
.RI "\fBItem_usageContext\fP * \fBitem_usage\fP ()"
.br
.ti -1c
.RI "\fBPart_usageContext\fP * \fBpart_usage\fP ()"
.br
.ti -1c
.RI "\fBView_usageContext\fP * \fBview_usage\fP ()"
.br
.ti -1c
.RI "\fBRendering_usageContext\fP * \fBrendering_usage\fP ()"
.br
.ti -1c
.RI "\fBPort_usageContext\fP * \fBport_usage\fP ()"
.br
.ti -1c
.RI "\fBConnection_usageContext\fP * \fBconnection_usage\fP ()"
.br
.ti -1c
.RI "\fBInterface_usageContext\fP * \fBinterface_usage\fP ()"
.br
.ti -1c
.RI "\fBAllocation_usageContext\fP * \fBallocation_usage\fP ()"
.br
.ti -1c
.RI "\fBMessageContext\fP * \fBmessage\fP ()"
.br
.ti -1c
.RI "\fBFlow_usageContext\fP * \fBflow_usage\fP ()"
.br
.ti -1c
.RI "\fBSuccession_flow_usageContext\fP * \fBsuccession_flow_usage\fP ()"
.br
.ti -1c
.RI "\fBBehavior_usage_elementContext\fP * \fBbehavior_usage_element\fP ()"
.br
.ti -1c
.RI "virtual void \fBenterRule\fP (antlr4::tree::ParseTreeListener *listener) override"
.br
.ti -1c
.RI "virtual void \fBexitRule\fP (antlr4::tree::ParseTreeListener *listener) override"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for SysMLv2 C++ Implementation from the source code\&.
